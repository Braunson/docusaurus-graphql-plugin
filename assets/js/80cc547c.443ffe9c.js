(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{77:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return u})),l.d(t,"metadata",(function(){return r})),l.d(t,"toc",(function(){return a})),l.d(t,"default",(function(){return i}));var b=l(3),n=l(7),c=(l(0),l(87)),u={id:"objects",title:"Objects",slug:"objects"},r={unversionedId:"github-example/objects",id:"github-example/objects",isDocsHomePage:!1,title:"Objects",description:"AcceptEnterpriseAdministratorInvitationPayload",source:"@site/docs/github-example/objects.md",slug:"/github-example/objects",permalink:"/docusaurus-plugin-content-graphql/github-example/objects",editUrl:"https://github.com/zhouzi/docusaurus-plugin-content-graphql/edit/main/packages/docs/docs/github-example/objects.md",version:"current",sidebar:"docs",previous:{title:"Mutations",permalink:"/docusaurus-plugin-content-graphql/github-example/mutations"},next:{title:"Interfaces",permalink:"/docusaurus-plugin-content-graphql/github-example/interfaces"}},a=[{value:"AcceptEnterpriseAdministratorInvitationPayload",id:"acceptenterpriseadministratorinvitationpayload",children:[]},{value:"AcceptTopicSuggestionPayload",id:"accepttopicsuggestionpayload",children:[]},{value:"ActorLocation",id:"actorlocation",children:[]},{value:"AddAssigneesToAssignablePayload",id:"addassigneestoassignablepayload",children:[]},{value:"AddCommentPayload",id:"addcommentpayload",children:[]},{value:"AddedToProjectEvent",id:"addedtoprojectevent",children:[]},{value:"AddEnterpriseSupportEntitlementPayload",id:"addenterprisesupportentitlementpayload",children:[]},{value:"AddLabelsToLabelablePayload",id:"addlabelstolabelablepayload",children:[]},{value:"AddProjectCardPayload",id:"addprojectcardpayload",children:[]},{value:"AddProjectColumnPayload",id:"addprojectcolumnpayload",children:[]},{value:"AddPullRequestReviewCommentPayload",id:"addpullrequestreviewcommentpayload",children:[]},{value:"AddPullRequestReviewPayload",id:"addpullrequestreviewpayload",children:[]},{value:"AddPullRequestReviewThreadPayload",id:"addpullrequestreviewthreadpayload",children:[]},{value:"AddReactionPayload",id:"addreactionpayload",children:[]},{value:"AddStarPayload",id:"addstarpayload",children:[]},{value:"AddVerifiableDomainPayload",id:"addverifiabledomainpayload",children:[]},{value:"App",id:"app",children:[]},{value:"ApproveVerifiableDomainPayload",id:"approveverifiabledomainpayload",children:[]},{value:"ArchiveRepositoryPayload",id:"archiverepositorypayload",children:[]},{value:"AssignedEvent",id:"assignedevent",children:[]},{value:"AutomaticBaseChangeFailedEvent",id:"automaticbasechangefailedevent",children:[]},{value:"AutomaticBaseChangeSucceededEvent",id:"automaticbasechangesucceededevent",children:[]},{value:"AutoMergeDisabledEvent",id:"automergedisabledevent",children:[]},{value:"AutoMergeEnabledEvent",id:"automergeenabledevent",children:[]},{value:"AutoMergeRequest",id:"automergerequest",children:[]},{value:"AutoRebaseEnabledEvent",id:"autorebaseenabledevent",children:[]},{value:"AutoSquashEnabledEvent",id:"autosquashenabledevent",children:[]},{value:"BaseRefChangedEvent",id:"baserefchangedevent",children:[]},{value:"BaseRefDeletedEvent",id:"baserefdeletedevent",children:[]},{value:"BaseRefForcePushedEvent",id:"baserefforcepushedevent",children:[]},{value:"Blame",id:"blame",children:[]},{value:"BlameRange",id:"blamerange",children:[]},{value:"Blob",id:"blob",children:[]},{value:"Bot",id:"bot",children:[]},{value:"BranchProtectionRule",id:"branchprotectionrule",children:[]},{value:"BranchProtectionRuleConflict",id:"branchprotectionruleconflict",children:[]},{value:"BranchProtectionRuleConflictConnection",id:"branchprotectionruleconflictconnection",children:[]},{value:"BranchProtectionRuleConflictEdge",id:"branchprotectionruleconflictedge",children:[]},{value:"BranchProtectionRuleConnection",id:"branchprotectionruleconnection",children:[]},{value:"BranchProtectionRuleEdge",id:"branchprotectionruleedge",children:[]},{value:"CancelEnterpriseAdminInvitationPayload",id:"cancelenterpriseadmininvitationpayload",children:[]},{value:"ChangeUserStatusPayload",id:"changeuserstatuspayload",children:[]},{value:"CheckAnnotation",id:"checkannotation",children:[]},{value:"CheckAnnotationConnection",id:"checkannotationconnection",children:[]},{value:"CheckAnnotationEdge",id:"checkannotationedge",children:[]},{value:"CheckAnnotationPosition",id:"checkannotationposition",children:[]},{value:"CheckAnnotationSpan",id:"checkannotationspan",children:[]},{value:"CheckRun",id:"checkrun",children:[]},{value:"CheckRunConnection",id:"checkrunconnection",children:[]},{value:"CheckRunEdge",id:"checkrunedge",children:[]},{value:"CheckSuite",id:"checksuite",children:[]},{value:"CheckSuiteConnection",id:"checksuiteconnection",children:[]},{value:"CheckSuiteEdge",id:"checksuiteedge",children:[]},{value:"ClearLabelsFromLabelablePayload",id:"clearlabelsfromlabelablepayload",children:[]},{value:"CloneProjectPayload",id:"cloneprojectpayload",children:[]},{value:"CloneTemplateRepositoryPayload",id:"clonetemplaterepositorypayload",children:[]},{value:"ClosedEvent",id:"closedevent",children:[]},{value:"CloseIssuePayload",id:"closeissuepayload",children:[]},{value:"ClosePullRequestPayload",id:"closepullrequestpayload",children:[]},{value:"CodeOfConduct",id:"codeofconduct",children:[]},{value:"CommentDeletedEvent",id:"commentdeletedevent",children:[]},{value:"Commit",id:"commit",children:[]},{value:"CommitComment",id:"commitcomment",children:[]},{value:"CommitCommentConnection",id:"commitcommentconnection",children:[]},{value:"CommitCommentEdge",id:"commitcommentedge",children:[]},{value:"CommitCommentThread",id:"commitcommentthread",children:[]},{value:"CommitConnection",id:"commitconnection",children:[]},{value:"CommitContributionsByRepository",id:"commitcontributionsbyrepository",children:[]},{value:"CommitEdge",id:"commitedge",children:[]},{value:"CommitHistoryConnection",id:"commithistoryconnection",children:[]},{value:"ConnectedEvent",id:"connectedevent",children:[]},{value:"ContentAttachment",id:"contentattachment",children:[]},{value:"ContentReference",id:"contentreference",children:[]},{value:"ContributionCalendar",id:"contributioncalendar",children:[]},{value:"ContributionCalendarDay",id:"contributioncalendarday",children:[]},{value:"ContributionCalendarMonth",id:"contributioncalendarmonth",children:[]},{value:"ContributionCalendarWeek",id:"contributioncalendarweek",children:[]},{value:"ContributionsCollection",id:"contributionscollection",children:[]},{value:"ConvertedNoteToIssueEvent",id:"convertednotetoissueevent",children:[]},{value:"ConvertProjectCardNoteToIssuePayload",id:"convertprojectcardnotetoissuepayload",children:[]},{value:"ConvertToDraftEvent",id:"converttodraftevent",children:[]},{value:"CreateBranchProtectionRulePayload",id:"createbranchprotectionrulepayload",children:[]},{value:"CreateCheckRunPayload",id:"createcheckrunpayload",children:[]},{value:"CreateCheckSuitePayload",id:"createchecksuitepayload",children:[]},{value:"CreateContentAttachmentPayload",id:"createcontentattachmentpayload",children:[]},{value:"CreatedCommitContribution",id:"createdcommitcontribution",children:[]},{value:"CreatedCommitContributionConnection",id:"createdcommitcontributionconnection",children:[]},{value:"CreatedCommitContributionEdge",id:"createdcommitcontributionedge",children:[]},{value:"CreateDeploymentPayload",id:"createdeploymentpayload",children:[]},{value:"CreateDeploymentStatusPayload",id:"createdeploymentstatuspayload",children:[]},{value:"CreatedIssueContribution",id:"createdissuecontribution",children:[]},{value:"CreatedIssueContributionConnection",id:"createdissuecontributionconnection",children:[]},{value:"CreatedIssueContributionEdge",id:"createdissuecontributionedge",children:[]},{value:"CreatedPullRequestContribution",id:"createdpullrequestcontribution",children:[]},{value:"CreatedPullRequestContributionConnection",id:"createdpullrequestcontributionconnection",children:[]},{value:"CreatedPullRequestContributionEdge",id:"createdpullrequestcontributionedge",children:[]},{value:"CreatedPullRequestReviewContribution",id:"createdpullrequestreviewcontribution",children:[]},{value:"CreatedPullRequestReviewContributionConnection",id:"createdpullrequestreviewcontributionconnection",children:[]},{value:"CreatedPullRequestReviewContributionEdge",id:"createdpullrequestreviewcontributionedge",children:[]},{value:"CreatedRepositoryContribution",id:"createdrepositorycontribution",children:[]},{value:"CreatedRepositoryContributionConnection",id:"createdrepositorycontributionconnection",children:[]},{value:"CreatedRepositoryContributionEdge",id:"createdrepositorycontributionedge",children:[]},{value:"CreateEnterpriseOrganizationPayload",id:"createenterpriseorganizationpayload",children:[]},{value:"CreateIpAllowListEntryPayload",id:"createipallowlistentrypayload",children:[]},{value:"CreateIssuePayload",id:"createissuepayload",children:[]},{value:"CreateLabelPayload",id:"createlabelpayload",children:[]},{value:"CreateProjectPayload",id:"createprojectpayload",children:[]},{value:"CreatePullRequestPayload",id:"createpullrequestpayload",children:[]},{value:"CreateRefPayload",id:"createrefpayload",children:[]},{value:"CreateRepositoryPayload",id:"createrepositorypayload",children:[]},{value:"CreateTeamDiscussionCommentPayload",id:"createteamdiscussioncommentpayload",children:[]},{value:"CreateTeamDiscussionPayload",id:"createteamdiscussionpayload",children:[]},{value:"CrossReferencedEvent",id:"crossreferencedevent",children:[]},{value:"CVSS",id:"cvss",children:[]},{value:"CWE",id:"cwe",children:[]},{value:"CWEConnection",id:"cweconnection",children:[]},{value:"CWEEdge",id:"cweedge",children:[]},{value:"DeclineTopicSuggestionPayload",id:"declinetopicsuggestionpayload",children:[]},{value:"DeleteBranchProtectionRulePayload",id:"deletebranchprotectionrulepayload",children:[]},{value:"DeleteDeploymentPayload",id:"deletedeploymentpayload",children:[]},{value:"DeleteIpAllowListEntryPayload",id:"deleteipallowlistentrypayload",children:[]},{value:"DeleteIssueCommentPayload",id:"deleteissuecommentpayload",children:[]},{value:"DeleteIssuePayload",id:"deleteissuepayload",children:[]},{value:"DeleteLabelPayload",id:"deletelabelpayload",children:[]},{value:"DeletePackageVersionPayload",id:"deletepackageversionpayload",children:[]},{value:"DeleteProjectCardPayload",id:"deleteprojectcardpayload",children:[]},{value:"DeleteProjectColumnPayload",id:"deleteprojectcolumnpayload",children:[]},{value:"DeleteProjectPayload",id:"deleteprojectpayload",children:[]},{value:"DeletePullRequestReviewCommentPayload",id:"deletepullrequestreviewcommentpayload",children:[]},{value:"DeletePullRequestReviewPayload",id:"deletepullrequestreviewpayload",children:[]},{value:"DeleteRefPayload",id:"deleterefpayload",children:[]},{value:"DeleteTeamDiscussionCommentPayload",id:"deleteteamdiscussioncommentpayload",children:[]},{value:"DeleteTeamDiscussionPayload",id:"deleteteamdiscussionpayload",children:[]},{value:"DeleteVerifiableDomainPayload",id:"deleteverifiabledomainpayload",children:[]},{value:"DemilestonedEvent",id:"demilestonedevent",children:[]},{value:"DependencyGraphDependency",id:"dependencygraphdependency",children:[]},{value:"DependencyGraphDependencyConnection",id:"dependencygraphdependencyconnection",children:[]},{value:"DependencyGraphDependencyEdge",id:"dependencygraphdependencyedge",children:[]},{value:"DependencyGraphManifest",id:"dependencygraphmanifest",children:[]},{value:"DependencyGraphManifestConnection",id:"dependencygraphmanifestconnection",children:[]},{value:"DependencyGraphManifestEdge",id:"dependencygraphmanifestedge",children:[]},{value:"DeployedEvent",id:"deployedevent",children:[]},{value:"DeployKey",id:"deploykey",children:[]},{value:"DeployKeyConnection",id:"deploykeyconnection",children:[]},{value:"DeployKeyEdge",id:"deploykeyedge",children:[]},{value:"Deployment",id:"deployment",children:[]},{value:"DeploymentConnection",id:"deploymentconnection",children:[]},{value:"DeploymentEdge",id:"deploymentedge",children:[]},{value:"DeploymentEnvironmentChangedEvent",id:"deploymentenvironmentchangedevent",children:[]},{value:"DeploymentStatus",id:"deploymentstatus",children:[]},{value:"DeploymentStatusConnection",id:"deploymentstatusconnection",children:[]},{value:"DeploymentStatusEdge",id:"deploymentstatusedge",children:[]},{value:"DisablePullRequestAutoMergePayload",id:"disablepullrequestautomergepayload",children:[]},{value:"DisconnectedEvent",id:"disconnectedevent",children:[]},{value:"DismissPullRequestReviewPayload",id:"dismisspullrequestreviewpayload",children:[]},{value:"EnablePullRequestAutoMergePayload",id:"enablepullrequestautomergepayload",children:[]},{value:"Enterprise",id:"enterprise",children:[]},{value:"EnterpriseAdministratorConnection",id:"enterpriseadministratorconnection",children:[]},{value:"EnterpriseAdministratorEdge",id:"enterpriseadministratoredge",children:[]},{value:"EnterpriseAdministratorInvitation",id:"enterpriseadministratorinvitation",children:[]},{value:"EnterpriseAdministratorInvitationConnection",id:"enterpriseadministratorinvitationconnection",children:[]},{value:"EnterpriseAdministratorInvitationEdge",id:"enterpriseadministratorinvitationedge",children:[]},{value:"EnterpriseBillingInfo",id:"enterprisebillinginfo",children:[]},{value:"EnterpriseIdentityProvider",id:"enterpriseidentityprovider",children:[]},{value:"EnterpriseMemberConnection",id:"enterprisememberconnection",children:[]},{value:"EnterpriseMemberEdge",id:"enterprisememberedge",children:[]},{value:"EnterpriseOrganizationMembershipConnection",id:"enterpriseorganizationmembershipconnection",children:[]},{value:"EnterpriseOrganizationMembershipEdge",id:"enterpriseorganizationmembershipedge",children:[]},{value:"EnterpriseOutsideCollaboratorConnection",id:"enterpriseoutsidecollaboratorconnection",children:[]},{value:"EnterpriseOutsideCollaboratorEdge",id:"enterpriseoutsidecollaboratoredge",children:[]},{value:"EnterpriseOwnerInfo",id:"enterpriseownerinfo",children:[]},{value:"EnterprisePendingCollaboratorConnection",id:"enterprisependingcollaboratorconnection",children:[]},{value:"EnterprisePendingCollaboratorEdge",id:"enterprisependingcollaboratoredge",children:[]},{value:"EnterprisePendingMemberInvitationConnection",id:"enterprisependingmemberinvitationconnection",children:[]},{value:"EnterprisePendingMemberInvitationEdge",id:"enterprisependingmemberinvitationedge",children:[]},{value:"EnterpriseRepositoryInfo",id:"enterpriserepositoryinfo",children:[]},{value:"EnterpriseRepositoryInfoConnection",id:"enterpriserepositoryinfoconnection",children:[]},{value:"EnterpriseRepositoryInfoEdge",id:"enterpriserepositoryinfoedge",children:[]},{value:"EnterpriseServerInstallation",id:"enterpriseserverinstallation",children:[]},{value:"EnterpriseServerInstallationConnection",id:"enterpriseserverinstallationconnection",children:[]},{value:"EnterpriseServerInstallationEdge",id:"enterpriseserverinstallationedge",children:[]},{value:"EnterpriseServerUserAccount",id:"enterpriseserveruseraccount",children:[]},{value:"EnterpriseServerUserAccountConnection",id:"enterpriseserveruseraccountconnection",children:[]},{value:"EnterpriseServerUserAccountEdge",id:"enterpriseserveruseraccountedge",children:[]},{value:"EnterpriseServerUserAccountEmail",id:"enterpriseserveruseraccountemail",children:[]},{value:"EnterpriseServerUserAccountEmailConnection",id:"enterpriseserveruseraccountemailconnection",children:[]},{value:"EnterpriseServerUserAccountEmailEdge",id:"enterpriseserveruseraccountemailedge",children:[]},{value:"EnterpriseServerUserAccountsUpload",id:"enterpriseserveruseraccountsupload",children:[]},{value:"EnterpriseServerUserAccountsUploadConnection",id:"enterpriseserveruseraccountsuploadconnection",children:[]},{value:"EnterpriseServerUserAccountsUploadEdge",id:"enterpriseserveruseraccountsuploadedge",children:[]},{value:"EnterpriseUserAccount",id:"enterpriseuseraccount",children:[]},{value:"EnterpriseUserAccountConnection",id:"enterpriseuseraccountconnection",children:[]},{value:"EnterpriseUserAccountEdge",id:"enterpriseuseraccountedge",children:[]},{value:"ExternalIdentity",id:"externalidentity",children:[]},{value:"ExternalIdentityConnection",id:"externalidentityconnection",children:[]},{value:"ExternalIdentityEdge",id:"externalidentityedge",children:[]},{value:"ExternalIdentitySamlAttributes",id:"externalidentitysamlattributes",children:[]},{value:"ExternalIdentityScimAttributes",id:"externalidentityscimattributes",children:[]},{value:"FollowerConnection",id:"followerconnection",children:[]},{value:"FollowingConnection",id:"followingconnection",children:[]},{value:"FollowUserPayload",id:"followuserpayload",children:[]},{value:"FundingLink",id:"fundinglink",children:[]},{value:"GenericHovercardContext",id:"generichovercardcontext",children:[]},{value:"Gist",id:"gist",children:[]},{value:"GistComment",id:"gistcomment",children:[]},{value:"GistCommentConnection",id:"gistcommentconnection",children:[]},{value:"GistCommentEdge",id:"gistcommentedge",children:[]},{value:"GistConnection",id:"gistconnection",children:[]},{value:"GistEdge",id:"gistedge",children:[]},{value:"GistFile",id:"gistfile",children:[]},{value:"GitActor",id:"gitactor",children:[]},{value:"GitActorConnection",id:"gitactorconnection",children:[]},{value:"GitActorEdge",id:"gitactoredge",children:[]},{value:"GitHubMetadata",id:"githubmetadata",children:[]},{value:"GpgSignature",id:"gpgsignature",children:[]},{value:"HeadRefDeletedEvent",id:"headrefdeletedevent",children:[]},{value:"HeadRefForcePushedEvent",id:"headrefforcepushedevent",children:[]},{value:"HeadRefRestoredEvent",id:"headrefrestoredevent",children:[]},{value:"Hovercard",id:"hovercard",children:[]},{value:"ImportProjectPayload",id:"importprojectpayload",children:[]},{value:"InviteEnterpriseAdminPayload",id:"inviteenterpriseadminpayload",children:[]},{value:"IpAllowListEntry",id:"ipallowlistentry",children:[]},{value:"IpAllowListEntryConnection",id:"ipallowlistentryconnection",children:[]},{value:"IpAllowListEntryEdge",id:"ipallowlistentryedge",children:[]},{value:"Issue",id:"issue",children:[]},{value:"IssueComment",id:"issuecomment",children:[]},{value:"IssueCommentConnection",id:"issuecommentconnection",children:[]},{value:"IssueCommentEdge",id:"issuecommentedge",children:[]},{value:"IssueConnection",id:"issueconnection",children:[]},{value:"IssueContributionsByRepository",id:"issuecontributionsbyrepository",children:[]},{value:"IssueEdge",id:"issueedge",children:[]},{value:"IssueTemplate",id:"issuetemplate",children:[]},{value:"IssueTimelineConnection",id:"issuetimelineconnection",children:[]},{value:"IssueTimelineItemEdge",id:"issuetimelineitemedge",children:[]},{value:"IssueTimelineItemsConnection",id:"issuetimelineitemsconnection",children:[]},{value:"IssueTimelineItemsEdge",id:"issuetimelineitemsedge",children:[]},{value:"JoinedGitHubContribution",id:"joinedgithubcontribution",children:[]},{value:"Label",id:"label",children:[]},{value:"LabelConnection",id:"labelconnection",children:[]},{value:"LabeledEvent",id:"labeledevent",children:[]},{value:"LabelEdge",id:"labeledge",children:[]},{value:"Language",id:"language",children:[]},{value:"LanguageConnection",id:"languageconnection",children:[]},{value:"LanguageEdge",id:"languageedge",children:[]},{value:"License",id:"license",children:[]},{value:"LicenseRule",id:"licenserule",children:[]},{value:"LinkRepositoryToProjectPayload",id:"linkrepositorytoprojectpayload",children:[]},{value:"LockedEvent",id:"lockedevent",children:[]},{value:"LockLockablePayload",id:"locklockablepayload",children:[]},{value:"Mannequin",id:"mannequin",children:[]},{value:"MarkedAsDuplicateEvent",id:"markedasduplicateevent",children:[]},{value:"MarketplaceCategory",id:"marketplacecategory",children:[]},{value:"MarketplaceListing",id:"marketplacelisting",children:[]},{value:"MarketplaceListingConnection",id:"marketplacelistingconnection",children:[]},{value:"MarketplaceListingEdge",id:"marketplacelistingedge",children:[]},{value:"MarkFileAsViewedPayload",id:"markfileasviewedpayload",children:[]},{value:"MarkPullRequestReadyForReviewPayload",id:"markpullrequestreadyforreviewpayload",children:[]},{value:"MembersCanDeleteReposClearAuditEntry",id:"memberscandeletereposclearauditentry",children:[]},{value:"MembersCanDeleteReposDisableAuditEntry",id:"memberscandeletereposdisableauditentry",children:[]},{value:"MembersCanDeleteReposEnableAuditEntry",id:"memberscandeletereposenableauditentry",children:[]},{value:"MentionedEvent",id:"mentionedevent",children:[]},{value:"MergeBranchPayload",id:"mergebranchpayload",children:[]},{value:"MergedEvent",id:"mergedevent",children:[]},{value:"MergePullRequestPayload",id:"mergepullrequestpayload",children:[]},{value:"Milestone",id:"milestone",children:[]},{value:"MilestoneConnection",id:"milestoneconnection",children:[]},{value:"MilestonedEvent",id:"milestonedevent",children:[]},{value:"MilestoneEdge",id:"milestoneedge",children:[]},{value:"MinimizeCommentPayload",id:"minimizecommentpayload",children:[]},{value:"MovedColumnsInProjectEvent",id:"movedcolumnsinprojectevent",children:[]},{value:"MoveProjectCardPayload",id:"moveprojectcardpayload",children:[]},{value:"MoveProjectColumnPayload",id:"moveprojectcolumnpayload",children:[]},{value:"OauthApplicationCreateAuditEntry",id:"oauthapplicationcreateauditentry",children:[]},{value:"OrgAddBillingManagerAuditEntry",id:"orgaddbillingmanagerauditentry",children:[]},{value:"OrgAddMemberAuditEntry",id:"orgaddmemberauditentry",children:[]},{value:"Organization",id:"organization",children:[]},{value:"OrganizationAuditEntryConnection",id:"organizationauditentryconnection",children:[]},{value:"OrganizationAuditEntryEdge",id:"organizationauditentryedge",children:[]},{value:"OrganizationConnection",id:"organizationconnection",children:[]},{value:"OrganizationEdge",id:"organizationedge",children:[]},{value:"OrganizationIdentityProvider",id:"organizationidentityprovider",children:[]},{value:"OrganizationInvitation",id:"organizationinvitation",children:[]},{value:"OrganizationInvitationConnection",id:"organizationinvitationconnection",children:[]},{value:"OrganizationInvitationEdge",id:"organizationinvitationedge",children:[]},{value:"OrganizationMemberConnection",id:"organizationmemberconnection",children:[]},{value:"OrganizationMemberEdge",id:"organizationmemberedge",children:[]},{value:"OrganizationsHovercardContext",id:"organizationshovercardcontext",children:[]},{value:"OrganizationTeamsHovercardContext",id:"organizationteamshovercardcontext",children:[]},{value:"OrgBlockUserAuditEntry",id:"orgblockuserauditentry",children:[]},{value:"OrgConfigDisableCollaboratorsOnlyAuditEntry",id:"orgconfigdisablecollaboratorsonlyauditentry",children:[]},{value:"OrgConfigEnableCollaboratorsOnlyAuditEntry",id:"orgconfigenablecollaboratorsonlyauditentry",children:[]},{value:"OrgCreateAuditEntry",id:"orgcreateauditentry",children:[]},{value:"OrgDisableOauthAppRestrictionsAuditEntry",id:"orgdisableoauthapprestrictionsauditentry",children:[]},{value:"OrgDisableSamlAuditEntry",id:"orgdisablesamlauditentry",children:[]},{value:"OrgDisableTwoFactorRequirementAuditEntry",id:"orgdisabletwofactorrequirementauditentry",children:[]},{value:"OrgEnableOauthAppRestrictionsAuditEntry",id:"orgenableoauthapprestrictionsauditentry",children:[]},{value:"OrgEnableSamlAuditEntry",id:"orgenablesamlauditentry",children:[]},{value:"OrgEnableTwoFactorRequirementAuditEntry",id:"orgenabletwofactorrequirementauditentry",children:[]},{value:"OrgInviteMemberAuditEntry",id:"orginvitememberauditentry",children:[]},{value:"OrgInviteToBusinessAuditEntry",id:"orginvitetobusinessauditentry",children:[]},{value:"OrgOauthAppAccessApprovedAuditEntry",id:"orgoauthappaccessapprovedauditentry",children:[]},{value:"OrgOauthAppAccessDeniedAuditEntry",id:"orgoauthappaccessdeniedauditentry",children:[]},{value:"OrgOauthAppAccessRequestedAuditEntry",id:"orgoauthappaccessrequestedauditentry",children:[]},{value:"OrgRemoveBillingManagerAuditEntry",id:"orgremovebillingmanagerauditentry",children:[]},{value:"OrgRemoveMemberAuditEntry",id:"orgremovememberauditentry",children:[]},{value:"OrgRemoveOutsideCollaboratorAuditEntry",id:"orgremoveoutsidecollaboratorauditentry",children:[]},{value:"OrgRestoreMemberAuditEntry",id:"orgrestorememberauditentry",children:[]},{value:"OrgRestoreMemberMembershipOrganizationAuditEntryData",id:"orgrestoremembermembershiporganizationauditentrydata",children:[]},{value:"OrgRestoreMemberMembershipRepositoryAuditEntryData",id:"orgrestoremembermembershiprepositoryauditentrydata",children:[]},{value:"OrgRestoreMemberMembershipTeamAuditEntryData",id:"orgrestoremembermembershipteamauditentrydata",children:[]},{value:"OrgUnblockUserAuditEntry",id:"orgunblockuserauditentry",children:[]},{value:"OrgUpdateDefaultRepositoryPermissionAuditEntry",id:"orgupdatedefaultrepositorypermissionauditentry",children:[]},{value:"OrgUpdateMemberAuditEntry",id:"orgupdatememberauditentry",children:[]},{value:"OrgUpdateMemberRepositoryCreationPermissionAuditEntry",id:"orgupdatememberrepositorycreationpermissionauditentry",children:[]},{value:"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry",id:"orgupdatememberrepositoryinvitationpermissionauditentry",children:[]},{value:"Package",id:"package",children:[]},{value:"PackageConnection",id:"packageconnection",children:[]},{value:"PackageEdge",id:"packageedge",children:[]},{value:"PackageFile",id:"packagefile",children:[]},{value:"PackageFileConnection",id:"packagefileconnection",children:[]},{value:"PackageFileEdge",id:"packagefileedge",children:[]},{value:"PackageStatistics",id:"packagestatistics",children:[]},{value:"PackageTag",id:"packagetag",children:[]},{value:"PackageVersion",id:"packageversion",children:[]},{value:"PackageVersionConnection",id:"packageversionconnection",children:[]},{value:"PackageVersionEdge",id:"packageversionedge",children:[]},{value:"PackageVersionStatistics",id:"packageversionstatistics",children:[]},{value:"PageInfo",id:"pageinfo",children:[]},{value:"PermissionSource",id:"permissionsource",children:[]},{value:"PinIssuePayload",id:"pinissuepayload",children:[]},{value:"PinnableItemConnection",id:"pinnableitemconnection",children:[]},{value:"PinnableItemEdge",id:"pinnableitemedge",children:[]},{value:"PinnedEvent",id:"pinnedevent",children:[]},{value:"PinnedIssue",id:"pinnedissue",children:[]},{value:"PinnedIssueConnection",id:"pinnedissueconnection",children:[]},{value:"PinnedIssueEdge",id:"pinnedissueedge",children:[]},{value:"PrivateRepositoryForkingDisableAuditEntry",id:"privaterepositoryforkingdisableauditentry",children:[]},{value:"PrivateRepositoryForkingEnableAuditEntry",id:"privaterepositoryforkingenableauditentry",children:[]},{value:"ProfileItemShowcase",id:"profileitemshowcase",children:[]},{value:"Project",id:"project",children:[]},{value:"ProjectCard",id:"projectcard",children:[]},{value:"ProjectCardConnection",id:"projectcardconnection",children:[]},{value:"ProjectCardEdge",id:"projectcardedge",children:[]},{value:"ProjectColumn",id:"projectcolumn",children:[]},{value:"ProjectColumnConnection",id:"projectcolumnconnection",children:[]},{value:"ProjectColumnEdge",id:"projectcolumnedge",children:[]},{value:"ProjectConnection",id:"projectconnection",children:[]},{value:"ProjectEdge",id:"projectedge",children:[]},{value:"ProjectProgress",id:"projectprogress",children:[]},{value:"PublicKey",id:"publickey",children:[]},{value:"PublicKeyConnection",id:"publickeyconnection",children:[]},{value:"PublicKeyEdge",id:"publickeyedge",children:[]},{value:"PullRequest",id:"pullrequest",children:[]},{value:"PullRequestChangedFile",id:"pullrequestchangedfile",children:[]},{value:"PullRequestChangedFileConnection",id:"pullrequestchangedfileconnection",children:[]},{value:"PullRequestChangedFileEdge",id:"pullrequestchangedfileedge",children:[]},{value:"PullRequestCommit",id:"pullrequestcommit",children:[]},{value:"PullRequestCommitCommentThread",id:"pullrequestcommitcommentthread",children:[]},{value:"PullRequestCommitConnection",id:"pullrequestcommitconnection",children:[]},{value:"PullRequestCommitEdge",id:"pullrequestcommitedge",children:[]},{value:"PullRequestConnection",id:"pullrequestconnection",children:[]},{value:"PullRequestContributionsByRepository",id:"pullrequestcontributionsbyrepository",children:[]},{value:"PullRequestEdge",id:"pullrequestedge",children:[]},{value:"PullRequestReview",id:"pullrequestreview",children:[]},{value:"PullRequestReviewComment",id:"pullrequestreviewcomment",children:[]},{value:"PullRequestReviewCommentConnection",id:"pullrequestreviewcommentconnection",children:[]},{value:"PullRequestReviewCommentEdge",id:"pullrequestreviewcommentedge",children:[]},{value:"PullRequestReviewConnection",id:"pullrequestreviewconnection",children:[]},{value:"PullRequestReviewContributionsByRepository",id:"pullrequestreviewcontributionsbyrepository",children:[]},{value:"PullRequestReviewEdge",id:"pullrequestreviewedge",children:[]},{value:"PullRequestReviewThread",id:"pullrequestreviewthread",children:[]},{value:"PullRequestReviewThreadConnection",id:"pullrequestreviewthreadconnection",children:[]},{value:"PullRequestReviewThreadEdge",id:"pullrequestreviewthreadedge",children:[]},{value:"PullRequestRevisionMarker",id:"pullrequestrevisionmarker",children:[]},{value:"PullRequestTimelineConnection",id:"pullrequesttimelineconnection",children:[]},{value:"PullRequestTimelineItemEdge",id:"pullrequesttimelineitemedge",children:[]},{value:"PullRequestTimelineItemsConnection",id:"pullrequesttimelineitemsconnection",children:[]},{value:"PullRequestTimelineItemsEdge",id:"pullrequesttimelineitemsedge",children:[]},{value:"Push",id:"push",children:[]},{value:"PushAllowance",id:"pushallowance",children:[]},{value:"PushAllowanceConnection",id:"pushallowanceconnection",children:[]},{value:"PushAllowanceEdge",id:"pushallowanceedge",children:[]},{value:"RateLimit",id:"ratelimit",children:[]},{value:"ReactingUserConnection",id:"reactinguserconnection",children:[]},{value:"ReactingUserEdge",id:"reactinguseredge",children:[]},{value:"Reaction",id:"reaction",children:[]},{value:"ReactionConnection",id:"reactionconnection",children:[]},{value:"ReactionEdge",id:"reactionedge",children:[]},{value:"ReactionGroup",id:"reactiongroup",children:[]},{value:"ReadyForReviewEvent",id:"readyforreviewevent",children:[]},{value:"Ref",id:"ref",children:[]},{value:"RefConnection",id:"refconnection",children:[]},{value:"RefEdge",id:"refedge",children:[]},{value:"ReferencedEvent",id:"referencedevent",children:[]},{value:"RefUpdateRule",id:"refupdaterule",children:[]},{value:"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload",id:"regenerateenterpriseidentityproviderrecoverycodespayload",children:[]},{value:"RegenerateVerifiableDomainTokenPayload",id:"regenerateverifiabledomaintokenpayload",children:[]},{value:"Release",id:"release",children:[]},{value:"ReleaseAsset",id:"releaseasset",children:[]},{value:"ReleaseAssetConnection",id:"releaseassetconnection",children:[]},{value:"ReleaseAssetEdge",id:"releaseassetedge",children:[]},{value:"ReleaseConnection",id:"releaseconnection",children:[]},{value:"ReleaseEdge",id:"releaseedge",children:[]},{value:"RemoveAssigneesFromAssignablePayload",id:"removeassigneesfromassignablepayload",children:[]},{value:"RemovedFromProjectEvent",id:"removedfromprojectevent",children:[]},{value:"RemoveEnterpriseAdminPayload",id:"removeenterpriseadminpayload",children:[]},{value:"RemoveEnterpriseIdentityProviderPayload",id:"removeenterpriseidentityproviderpayload",children:[]},{value:"RemoveEnterpriseOrganizationPayload",id:"removeenterpriseorganizationpayload",children:[]},{value:"RemoveEnterpriseSupportEntitlementPayload",id:"removeenterprisesupportentitlementpayload",children:[]},{value:"RemoveLabelsFromLabelablePayload",id:"removelabelsfromlabelablepayload",children:[]},{value:"RemoveOutsideCollaboratorPayload",id:"removeoutsidecollaboratorpayload",children:[]},{value:"RemoveReactionPayload",id:"removereactionpayload",children:[]},{value:"RemoveStarPayload",id:"removestarpayload",children:[]},{value:"RenamedTitleEvent",id:"renamedtitleevent",children:[]},{value:"ReopenedEvent",id:"reopenedevent",children:[]},{value:"ReopenIssuePayload",id:"reopenissuepayload",children:[]},{value:"ReopenPullRequestPayload",id:"reopenpullrequestpayload",children:[]},{value:"RepoAccessAuditEntry",id:"repoaccessauditentry",children:[]},{value:"RepoAddMemberAuditEntry",id:"repoaddmemberauditentry",children:[]},{value:"RepoAddTopicAuditEntry",id:"repoaddtopicauditentry",children:[]},{value:"RepoArchivedAuditEntry",id:"repoarchivedauditentry",children:[]},{value:"RepoChangeMergeSettingAuditEntry",id:"repochangemergesettingauditentry",children:[]},{value:"RepoConfigDisableAnonymousGitAccessAuditEntry",id:"repoconfigdisableanonymousgitaccessauditentry",children:[]},{value:"RepoConfigDisableCollaboratorsOnlyAuditEntry",id:"repoconfigdisablecollaboratorsonlyauditentry",children:[]},{value:"RepoConfigDisableContributorsOnlyAuditEntry",id:"repoconfigdisablecontributorsonlyauditentry",children:[]},{value:"RepoConfigDisableSockpuppetDisallowedAuditEntry",id:"repoconfigdisablesockpuppetdisallowedauditentry",children:[]},{value:"RepoConfigEnableAnonymousGitAccessAuditEntry",id:"repoconfigenableanonymousgitaccessauditentry",children:[]},{value:"RepoConfigEnableCollaboratorsOnlyAuditEntry",id:"repoconfigenablecollaboratorsonlyauditentry",children:[]},{value:"RepoConfigEnableContributorsOnlyAuditEntry",id:"repoconfigenablecontributorsonlyauditentry",children:[]},{value:"RepoConfigEnableSockpuppetDisallowedAuditEntry",id:"repoconfigenablesockpuppetdisallowedauditentry",children:[]},{value:"RepoConfigLockAnonymousGitAccessAuditEntry",id:"repoconfiglockanonymousgitaccessauditentry",children:[]},{value:"RepoConfigUnlockAnonymousGitAccessAuditEntry",id:"repoconfigunlockanonymousgitaccessauditentry",children:[]},{value:"RepoCreateAuditEntry",id:"repocreateauditentry",children:[]},{value:"RepoDestroyAuditEntry",id:"repodestroyauditentry",children:[]},{value:"RepoRemoveMemberAuditEntry",id:"reporemovememberauditentry",children:[]},{value:"RepoRemoveTopicAuditEntry",id:"reporemovetopicauditentry",children:[]},{value:"Repository",id:"repository",children:[]},{value:"RepositoryCollaboratorConnection",id:"repositorycollaboratorconnection",children:[]},{value:"RepositoryCollaboratorEdge",id:"repositorycollaboratoredge",children:[]},{value:"RepositoryConnection",id:"repositoryconnection",children:[]},{value:"RepositoryContactLink",id:"repositorycontactlink",children:[]},{value:"RepositoryEdge",id:"repositoryedge",children:[]},{value:"RepositoryInteractionAbility",id:"repositoryinteractionability",children:[]},{value:"RepositoryInvitation",id:"repositoryinvitation",children:[]},{value:"RepositoryInvitationConnection",id:"repositoryinvitationconnection",children:[]},{value:"RepositoryInvitationEdge",id:"repositoryinvitationedge",children:[]},{value:"RepositoryTopic",id:"repositorytopic",children:[]},{value:"RepositoryTopicConnection",id:"repositorytopicconnection",children:[]},{value:"RepositoryTopicEdge",id:"repositorytopicedge",children:[]},{value:"RepositoryVisibilityChangeDisableAuditEntry",id:"repositoryvisibilitychangedisableauditentry",children:[]},{value:"RepositoryVisibilityChangeEnableAuditEntry",id:"repositoryvisibilitychangeenableauditentry",children:[]},{value:"RepositoryVulnerabilityAlert",id:"repositoryvulnerabilityalert",children:[]},{value:"RepositoryVulnerabilityAlertConnection",id:"repositoryvulnerabilityalertconnection",children:[]},{value:"RepositoryVulnerabilityAlertEdge",id:"repositoryvulnerabilityalertedge",children:[]},{value:"RequestReviewsPayload",id:"requestreviewspayload",children:[]},{value:"RerequestCheckSuitePayload",id:"rerequestchecksuitepayload",children:[]},{value:"ResolveReviewThreadPayload",id:"resolvereviewthreadpayload",children:[]},{value:"RestrictedContribution",id:"restrictedcontribution",children:[]},{value:"ReviewDismissalAllowance",id:"reviewdismissalallowance",children:[]},{value:"ReviewDismissalAllowanceConnection",id:"reviewdismissalallowanceconnection",children:[]},{value:"ReviewDismissalAllowanceEdge",id:"reviewdismissalallowanceedge",children:[]},{value:"ReviewDismissedEvent",id:"reviewdismissedevent",children:[]},{value:"ReviewRequest",id:"reviewrequest",children:[]},{value:"ReviewRequestConnection",id:"reviewrequestconnection",children:[]},{value:"ReviewRequestedEvent",id:"reviewrequestedevent",children:[]},{value:"ReviewRequestEdge",id:"reviewrequestedge",children:[]},{value:"ReviewRequestRemovedEvent",id:"reviewrequestremovedevent",children:[]},{value:"ReviewStatusHovercardContext",id:"reviewstatushovercardcontext",children:[]},{value:"SavedReply",id:"savedreply",children:[]},{value:"SavedReplyConnection",id:"savedreplyconnection",children:[]},{value:"SavedReplyEdge",id:"savedreplyedge",children:[]},{value:"SearchResultItemConnection",id:"searchresultitemconnection",children:[]},{value:"SearchResultItemEdge",id:"searchresultitemedge",children:[]},{value:"SecurityAdvisory",id:"securityadvisory",children:[]},{value:"SecurityAdvisoryConnection",id:"securityadvisoryconnection",children:[]},{value:"SecurityAdvisoryEdge",id:"securityadvisoryedge",children:[]},{value:"SecurityAdvisoryIdentifier",id:"securityadvisoryidentifier",children:[]},{value:"SecurityAdvisoryPackage",id:"securityadvisorypackage",children:[]},{value:"SecurityAdvisoryPackageVersion",id:"securityadvisorypackageversion",children:[]},{value:"SecurityAdvisoryReference",id:"securityadvisoryreference",children:[]},{value:"SecurityVulnerability",id:"securityvulnerability",children:[]},{value:"SecurityVulnerabilityConnection",id:"securityvulnerabilityconnection",children:[]},{value:"SecurityVulnerabilityEdge",id:"securityvulnerabilityedge",children:[]},{value:"SetEnterpriseIdentityProviderPayload",id:"setenterpriseidentityproviderpayload",children:[]},{value:"SetOrganizationInteractionLimitPayload",id:"setorganizationinteractionlimitpayload",children:[]},{value:"SetRepositoryInteractionLimitPayload",id:"setrepositoryinteractionlimitpayload",children:[]},{value:"SetUserInteractionLimitPayload",id:"setuserinteractionlimitpayload",children:[]},{value:"SmimeSignature",id:"smimesignature",children:[]},{value:"SponsorableItemConnection",id:"sponsorableitemconnection",children:[]},{value:"SponsorableItemEdge",id:"sponsorableitemedge",children:[]},{value:"SponsorsGoal",id:"sponsorsgoal",children:[]},{value:"Sponsorship",id:"sponsorship",children:[]},{value:"SponsorshipConnection",id:"sponsorshipconnection",children:[]},{value:"SponsorshipEdge",id:"sponsorshipedge",children:[]},{value:"SponsorsListing",id:"sponsorslisting",children:[]},{value:"SponsorsTier",id:"sponsorstier",children:[]},{value:"SponsorsTierAdminInfo",id:"sponsorstieradmininfo",children:[]},{value:"SponsorsTierConnection",id:"sponsorstierconnection",children:[]},{value:"SponsorsTierEdge",id:"sponsorstieredge",children:[]},{value:"StargazerConnection",id:"stargazerconnection",children:[]},{value:"StargazerEdge",id:"stargazeredge",children:[]},{value:"StarredRepositoryConnection",id:"starredrepositoryconnection",children:[]},{value:"StarredRepositoryEdge",id:"starredrepositoryedge",children:[]},{value:"Status",id:"status",children:[]},{value:"StatusCheckRollup",id:"statuscheckrollup",children:[]},{value:"StatusCheckRollupContextConnection",id:"statuscheckrollupcontextconnection",children:[]},{value:"StatusCheckRollupContextEdge",id:"statuscheckrollupcontextedge",children:[]},{value:"StatusContext",id:"statuscontext",children:[]},{value:"SubmitPullRequestReviewPayload",id:"submitpullrequestreviewpayload",children:[]},{value:"Submodule",id:"submodule",children:[]},{value:"SubmoduleConnection",id:"submoduleconnection",children:[]},{value:"SubmoduleEdge",id:"submoduleedge",children:[]},{value:"SubscribedEvent",id:"subscribedevent",children:[]},{value:"SuggestedReviewer",id:"suggestedreviewer",children:[]},{value:"Tag",id:"tag",children:[]},{value:"Team",id:"team",children:[]},{value:"TeamAddMemberAuditEntry",id:"teamaddmemberauditentry",children:[]},{value:"TeamAddRepositoryAuditEntry",id:"teamaddrepositoryauditentry",children:[]},{value:"TeamChangeParentTeamAuditEntry",id:"teamchangeparentteamauditentry",children:[]},{value:"TeamConnection",id:"teamconnection",children:[]},{value:"TeamDiscussion",id:"teamdiscussion",children:[]},{value:"TeamDiscussionComment",id:"teamdiscussioncomment",children:[]},{value:"TeamDiscussionCommentConnection",id:"teamdiscussioncommentconnection",children:[]},{value:"TeamDiscussionCommentEdge",id:"teamdiscussioncommentedge",children:[]},{value:"TeamDiscussionConnection",id:"teamdiscussionconnection",children:[]},{value:"TeamDiscussionEdge",id:"teamdiscussionedge",children:[]},{value:"TeamEdge",id:"teamedge",children:[]},{value:"TeamMemberConnection",id:"teammemberconnection",children:[]},{value:"TeamMemberEdge",id:"teammemberedge",children:[]},{value:"TeamRemoveMemberAuditEntry",id:"teamremovememberauditentry",children:[]},{value:"TeamRemoveRepositoryAuditEntry",id:"teamremoverepositoryauditentry",children:[]},{value:"TeamRepositoryConnection",id:"teamrepositoryconnection",children:[]},{value:"TeamRepositoryEdge",id:"teamrepositoryedge",children:[]},{value:"TextMatch",id:"textmatch",children:[]},{value:"TextMatchHighlight",id:"textmatchhighlight",children:[]},{value:"Topic",id:"topic",children:[]},{value:"TransferIssuePayload",id:"transferissuepayload",children:[]},{value:"TransferredEvent",id:"transferredevent",children:[]},{value:"Tree",id:"tree",children:[]},{value:"TreeEntry",id:"treeentry",children:[]},{value:"UnarchiveRepositoryPayload",id:"unarchiverepositorypayload",children:[]},{value:"UnassignedEvent",id:"unassignedevent",children:[]},{value:"UnfollowUserPayload",id:"unfollowuserpayload",children:[]},{value:"UnknownSignature",id:"unknownsignature",children:[]},{value:"UnlabeledEvent",id:"unlabeledevent",children:[]},{value:"UnlinkRepositoryFromProjectPayload",id:"unlinkrepositoryfromprojectpayload",children:[]},{value:"UnlockedEvent",id:"unlockedevent",children:[]},{value:"UnlockLockablePayload",id:"unlocklockablepayload",children:[]},{value:"UnmarkedAsDuplicateEvent",id:"unmarkedasduplicateevent",children:[]},{value:"UnmarkFileAsViewedPayload",id:"unmarkfileasviewedpayload",children:[]},{value:"UnmarkIssueAsDuplicatePayload",id:"unmarkissueasduplicatepayload",children:[]},{value:"UnminimizeCommentPayload",id:"unminimizecommentpayload",children:[]},{value:"UnpinIssuePayload",id:"unpinissuepayload",children:[]},{value:"UnpinnedEvent",id:"unpinnedevent",children:[]},{value:"UnresolveReviewThreadPayload",id:"unresolvereviewthreadpayload",children:[]},{value:"UnsubscribedEvent",id:"unsubscribedevent",children:[]},{value:"UpdateBranchProtectionRulePayload",id:"updatebranchprotectionrulepayload",children:[]},{value:"UpdateCheckRunPayload",id:"updatecheckrunpayload",children:[]},{value:"UpdateCheckSuitePreferencesPayload",id:"updatechecksuitepreferencespayload",children:[]},{value:"UpdateEnterpriseAdministratorRolePayload",id:"updateenterpriseadministratorrolepayload",children:[]},{value:"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload",id:"updateenterpriseallowprivaterepositoryforkingsettingpayload",children:[]},{value:"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload",id:"updateenterprisedefaultrepositorypermissionsettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload",id:"updateenterprisememberscanchangerepositoryvisibilitysettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload",id:"updateenterprisememberscancreaterepositoriessettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload",id:"updateenterprisememberscandeleteissuessettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload",id:"updateenterprisememberscandeleterepositoriessettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload",id:"updateenterprisememberscaninvitecollaboratorssettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanMakePurchasesSettingPayload",id:"updateenterprisememberscanmakepurchasessettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload",id:"updateenterprisememberscanupdateprotectedbranchessettingpayload",children:[]},{value:"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload",id:"updateenterprisememberscanviewdependencyinsightssettingpayload",children:[]},{value:"UpdateEnterpriseOrganizationProjectsSettingPayload",id:"updateenterpriseorganizationprojectssettingpayload",children:[]},{value:"UpdateEnterpriseProfilePayload",id:"updateenterpriseprofilepayload",children:[]},{value:"UpdateEnterpriseRepositoryProjectsSettingPayload",id:"updateenterpriserepositoryprojectssettingpayload",children:[]},{value:"UpdateEnterpriseTeamDiscussionsSettingPayload",id:"updateenterpriseteamdiscussionssettingpayload",children:[]},{value:"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload",id:"updateenterprisetwofactorauthenticationrequiredsettingpayload",children:[]},{value:"UpdateIpAllowListEnabledSettingPayload",id:"updateipallowlistenabledsettingpayload",children:[]},{value:"UpdateIpAllowListEntryPayload",id:"updateipallowlistentrypayload",children:[]},{value:"UpdateIssueCommentPayload",id:"updateissuecommentpayload",children:[]},{value:"UpdateIssuePayload",id:"updateissuepayload",children:[]},{value:"UpdateLabelPayload",id:"updatelabelpayload",children:[]},{value:"UpdateNotificationRestrictionSettingPayload",id:"updatenotificationrestrictionsettingpayload",children:[]},{value:"UpdateProjectCardPayload",id:"updateprojectcardpayload",children:[]},{value:"UpdateProjectColumnPayload",id:"updateprojectcolumnpayload",children:[]},{value:"UpdateProjectPayload",id:"updateprojectpayload",children:[]},{value:"UpdatePullRequestPayload",id:"updatepullrequestpayload",children:[]},{value:"UpdatePullRequestReviewCommentPayload",id:"updatepullrequestreviewcommentpayload",children:[]},{value:"UpdatePullRequestReviewPayload",id:"updatepullrequestreviewpayload",children:[]},{value:"UpdateRefPayload",id:"updaterefpayload",children:[]},{value:"UpdateRefsPayload",id:"updaterefspayload",children:[]},{value:"UpdateRepositoryPayload",id:"updaterepositorypayload",children:[]},{value:"UpdateSubscriptionPayload",id:"updatesubscriptionpayload",children:[]},{value:"UpdateTeamDiscussionCommentPayload",id:"updateteamdiscussioncommentpayload",children:[]},{value:"UpdateTeamDiscussionPayload",id:"updateteamdiscussionpayload",children:[]},{value:"UpdateTeamReviewAssignmentPayload",id:"updateteamreviewassignmentpayload",children:[]},{value:"UpdateTopicsPayload",id:"updatetopicspayload",children:[]},{value:"User",id:"user",children:[]},{value:"UserBlockedEvent",id:"userblockedevent",children:[]},{value:"UserConnection",id:"userconnection",children:[]},{value:"UserContentEdit",id:"usercontentedit",children:[]},{value:"UserContentEditConnection",id:"usercontenteditconnection",children:[]},{value:"UserContentEditEdge",id:"usercontenteditedge",children:[]},{value:"UserEdge",id:"useredge",children:[]},{value:"UserEmailMetadata",id:"useremailmetadata",children:[]},{value:"UserStatus",id:"userstatus",children:[]},{value:"UserStatusConnection",id:"userstatusconnection",children:[]},{value:"UserStatusEdge",id:"userstatusedge",children:[]},{value:"VerifiableDomain",id:"verifiabledomain",children:[]},{value:"VerifiableDomainConnection",id:"verifiabledomainconnection",children:[]},{value:"VerifiableDomainEdge",id:"verifiabledomainedge",children:[]},{value:"VerifyVerifiableDomainPayload",id:"verifyverifiabledomainpayload",children:[]},{value:"ViewerHovercardContext",id:"viewerhovercardcontext",children:[]}],o={toc:a};function i(e){var t=e.components,l=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(b.a)({},o,l,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"acceptenterpriseadministratorinvitationpayload"},"AcceptEnterpriseAdministratorInvitationPayload"),Object(c.b)("p",null,"Autogenerated return type of AcceptEnterpriseAdministratorInvitation"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"invitation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitation"},Object(c.b)("code",null,"EnterpriseAdministratorInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The invitation that was accepted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of accepting an administrator invitation."))))),Object(c.b)("h2",{id:"accepttopicsuggestionpayload"},"AcceptTopicSuggestionPayload"),Object(c.b)("p",null,"Autogenerated return type of AcceptTopicSuggestion"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"topic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"Topic"))),Object(c.b)("td",null,Object(c.b)("p",null,"The accepted topic."))))),Object(c.b)("h2",{id:"actorlocation"},"ActorLocation"),Object(c.b)("p",null,"Location information for an actor"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"city",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"City"))),Object(c.b)("tr",null,Object(c.b)("td",null,"country",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Country name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"countryCode",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Country code"))),Object(c.b)("tr",null,Object(c.b)("td",null,"region",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Region name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"regionCode",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Region or state code"))))),Object(c.b)("h2",{id:"addassigneestoassignablepayload"},"AddAssigneesToAssignablePayload"),Object(c.b)("p",null,"Autogenerated return type of AddAssigneesToAssignable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"assignable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#assignable"},Object(c.b)("code",null,"Assignable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item that was assigned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"addcommentpayload"},"AddCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of AddComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commentEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecommentedge"},Object(c.b)("code",null,"IssueCommentEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the subject's comment connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},Object(c.b)("code",null,"Node"))),Object(c.b)("td",null,Object(c.b)("p",null,"The subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"timelineEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuetimelineitemedge"},Object(c.b)("code",null,"IssueTimelineItemEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the subject's timeline connection."))))),Object(c.b)("h2",{id:"addedtoprojectevent"},"AddedToProjectEvent"),Object(c.b)("p",null,"Represents a 'added_to_project' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"ProjectCard"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project card referenced by this project event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectColumnName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Column name referenced by this project event."))))),Object(c.b)("h2",{id:"addenterprisesupportentitlementpayload"},"AddEnterpriseSupportEntitlementPayload"),Object(c.b)("p",null,"Autogenerated return type of AddEnterpriseSupportEntitlement"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of adding the support entitlement."))))),Object(c.b)("h2",{id:"addlabelstolabelablepayload"},"AddLabelsToLabelablePayload"),Object(c.b)("p",null,"Autogenerated return type of AddLabelsToLabelable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labelable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},Object(c.b)("code",null,"Labelable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item that was labeled."))))),Object(c.b)("h2",{id:"addprojectcardpayload"},"AddProjectCardPayload"),Object(c.b)("p",null,"Autogenerated return type of AddProjectCard"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cardEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardedge"},Object(c.b)("code",null,"ProjectCardEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the ProjectColumn's card connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectColumn",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumn"},Object(c.b)("code",null,"ProjectColumn"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ProjectColumn"))))),Object(c.b)("h2",{id:"addprojectcolumnpayload"},"AddProjectColumnPayload"),Object(c.b)("p",null,"Autogenerated return type of AddProjectColumn"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"columnEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumnedge"},Object(c.b)("code",null,"ProjectColumnEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the project's column connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project"))))),Object(c.b)("h2",{id:"addpullrequestreviewcommentpayload"},"AddPullRequestReviewCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of AddPullRequestReviewComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"comment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcomment"},Object(c.b)("code",null,"PullRequestReviewComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commentEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcommentedge"},Object(c.b)("code",null,"PullRequestReviewCommentEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the review's comment connection."))))),Object(c.b)("h2",{id:"addpullrequestreviewpayload"},"AddPullRequestReviewPayload"),Object(c.b)("p",null,"Autogenerated return type of AddPullRequestReview"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created pull request review."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewedge"},Object(c.b)("code",null,"PullRequestReviewEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the pull request's review connection."))))),Object(c.b)("h2",{id:"addpullrequestreviewthreadpayload"},"AddPullRequestReviewThreadPayload"),Object(c.b)("p",null,"Autogenerated return type of AddPullRequestReviewThread"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"thread",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthread"},Object(c.b)("code",null,"PullRequestReviewThread"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created thread."))))),Object(c.b)("h2",{id:"addreactionpayload"},"AddReactionPayload"),Object(c.b)("p",null,"Autogenerated return type of AddReaction"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reaction",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reaction"},Object(c.b)("code",null,"Reaction"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reaction object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},Object(c.b)("code",null,"Reactable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reactable subject."))))),Object(c.b)("h2",{id:"addstarpayload"},"AddStarPayload"),Object(c.b)("p",null,"Autogenerated return type of AddStar"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"starrable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#starrable"},Object(c.b)("code",null,"Starrable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The starrable."))))),Object(c.b)("h2",{id:"addverifiabledomainpayload"},"AddVerifiableDomainPayload"),Object(c.b)("p",null,"Autogenerated return type of AddVerifiableDomain"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"domain",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomain"},Object(c.b)("code",null,"VerifiableDomain"))),Object(c.b)("td",null,Object(c.b)("p",null,"The verifiable domain that was added."))))),Object(c.b)("h2",{id:"app"},"App"),Object(c.b)("p",null,"A GitHub App."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the app."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"logoBackgroundColor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The hex color code, without the leading '#', for the logo background."))),Object(c.b)("tr",null,Object(c.b)("td",null,"logoUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the app's logo."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the app."))),Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A slug based on the name of the app for use in URLs."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL to the app's homepage."))))),Object(c.b)("h2",{id:"approveverifiabledomainpayload"},"ApproveVerifiableDomainPayload"),Object(c.b)("p",null,"Autogenerated return type of ApproveVerifiableDomain"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"domain",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomain"},Object(c.b)("code",null,"VerifiableDomain"))),Object(c.b)("td",null,Object(c.b)("p",null,"The verifiable domain that was approved."))))),Object(c.b)("h2",{id:"archiverepositorypayload"},"ArchiveRepositoryPayload"),Object(c.b)("p",null,"Autogenerated return type of ArchiveRepository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that was marked as archived."))))),Object(c.b)("h2",{id:"assignedevent"},"AssignedEvent"),Object(c.b)("p",null,"Represents an 'assigned' event on any assignable object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assignable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#assignable"},Object(c.b)("code",null,"Assignable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the assignable associated with the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assignee",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#assignee"},Object(c.b)("code",null,"Assignee"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the user or mannequin that was assigned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC."),Object(c.b)("p",null,"Identifies the user who was assigned."))))),Object(c.b)("h2",{id:"automaticbasechangefailedevent"},"AutomaticBaseChangeFailedEvent"),Object(c.b)("p",null,"Represents a 'automatic_base_change_failed' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"newBase",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new base for this PR"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oldBase",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The old base for this PR"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"automaticbasechangesucceededevent"},"AutomaticBaseChangeSucceededEvent"),Object(c.b)("p",null,"Represents a 'automatic_base_change_succeeded' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"newBase",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new base for this PR"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oldBase",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The old base for this PR"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"automergedisabledevent"},"AutoMergeDisabledEvent"),Object(c.b)("p",null,"Represents a 'auto_merge_disabled' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"disabler",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who disabled auto-merge for this Pull Request"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason auto-merge was disabled"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reasonCode",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason_code relating to why auto-merge was disabled"))))),Object(c.b)("h2",{id:"automergeenabledevent"},"AutoMergeEnabledEvent"),Object(c.b)("p",null,"Represents a 'auto_merge_enabled' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enabler",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who enabled auto-merge for this Pull Request"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"automergerequest"},"AutoMergeRequest"),Object(c.b)("p",null,"Represents an auto-merge request for a pull request"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"authorEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email address of the author of this auto-merge request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitBody",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit message of the auto-merge request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitHeadline",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit title of the auto-merge request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enabledAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"When was this auto-merge request was enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enabledBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who created the auto-merge request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeMethod",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestmergemethod"},Object(c.b)("code",null,"PullRequestMergeMethod!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merge method of the auto-merge request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that this auto-merge request is set against."))))),Object(c.b)("h2",{id:"autorebaseenabledevent"},"AutoRebaseEnabledEvent"),Object(c.b)("p",null,"Represents a 'auto_rebase_enabled' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enabler",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who enabled auto-merge (rebase) for this Pull Request"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"autosquashenabledevent"},"AutoSquashEnabledEvent"),Object(c.b)("p",null,"Represents a 'auto_squash_enabled' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enabler",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who enabled auto-merge (squash) for this Pull Request"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"baserefchangedevent"},"BaseRefChangedEvent"),Object(c.b)("p",null,"Represents a 'base_ref_changed' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"currentRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the base ref for the pull request after it was changed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"previousRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the base ref for the pull request before it was changed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"baserefdeletedevent"},"BaseRefDeletedEvent"),Object(c.b)("p",null,"Represents a 'base_ref_deleted' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the Ref associated with the ",Object(c.b)("code",null,"base_ref_deleted")," event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"baserefforcepushedevent"},"BaseRefForcePushedEvent"),Object(c.b)("p",null,"Represents a 'base_ref_force_pushed' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"afterCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the after commit SHA for the 'base_ref_force_pushed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"beforeCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the before commit SHA for the 'base_ref_force_pushed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the fully qualified ref name for the 'base_ref_force_pushed' event."))))),Object(c.b)("h2",{id:"blame"},"Blame"),Object(c.b)("p",null,"Represents a Git blame."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"ranges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#blamerange"},Object(c.b)("code",null,"[BlameRange!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The list of ranges from a Git blame."))))),Object(c.b)("h2",{id:"blamerange"},"BlameRange"),Object(c.b)("p",null,"Represents a range of information from a Git blame."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"age",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the line author"))),Object(c.b)("tr",null,Object(c.b)("td",null,"endingLine",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ending line for the range"))),Object(c.b)("tr",null,Object(c.b)("td",null,"startingLine",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The starting line for the range"))))),Object(c.b)("h2",{id:"blob"},"Blob"),Object(c.b)("p",null,"Represents a Git blob."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},"GitObject")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"abbreviatedOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An abbreviated version of the Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"byteSize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Byte size of Blob object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isBinary",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isTruncated",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the contents is truncated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository the Git object belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"text",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"UTF8 text data or null if the Blob is binary"))))),Object(c.b)("h2",{id:"bot"},"Bot"),Object(c.b)("p",null,"A special type of user which takes actions on behalf of GitHub Apps."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},"Actor")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the GitHub App's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this bot"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this bot"))))),Object(c.b)("h2",{id:"branchprotectionrule"},"BranchProtectionRule"),Object(c.b)("p",null,"A branch protection rule."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"allowsDeletions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can this branch be deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"allowsForcePushes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are force pushes allowed on this branch."))),Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRuleConflicts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionruleconflictconnection"},Object(c.b)("code",null,"BranchProtectionRuleConflictConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of conflicts matching branches protection rule and other branch protection rules"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who created this branch protection rule."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dismissesStaleReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Will new commits pushed to matching branches dismiss pull request review approvals."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isAdminEnforced",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can admins overwrite branch protection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"matchingRefs",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#refconnection"},Object(c.b)("code",null,"RefConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Repository refs that are protected by this rule"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters refs with query on name"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pattern",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the protection rule pattern."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pushAllowances",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pushallowanceconnection"},Object(c.b)("code",null,"PushAllowanceConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list push allowances for this branch protection rule."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this branch protection rule."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiredApprovingReviewCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Number of approving reviews required to update matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiredStatusCheckContexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of required status check contexts that must pass for commits to be accepted to matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresApprovingReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are approving reviews required to update matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresCodeOwnerReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are reviews from code owners required to update matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresCommitSignatures",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are commits required to be signed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresLinearHistory",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are merge commits prohibited from being pushed to this branch."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresStatusChecks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are status checks required to update matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresStrictStatusChecks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are branches required to be up to date before merging."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restrictsPushes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is pushing to matching branches restricted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restrictsReviewDismissals",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is dismissal of pull request reviews restricted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewDismissalAllowances",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewdismissalallowanceconnection"},Object(c.b)("code",null,"ReviewDismissalAllowanceConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list review dismissal allowances for this branch protection rule."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))))),Object(c.b)("h2",{id:"branchprotectionruleconflict"},"BranchProtectionRuleConflict"),Object(c.b)("p",null,"A conflict between two branch protection rules."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the branch protection rule."))),Object(c.b)("tr",null,Object(c.b)("td",null,"conflictingBranchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the conflicting branch protection rule."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the branch ref that has conflicting rules"))))),Object(c.b)("h2",{id:"branchprotectionruleconflictconnection"},"BranchProtectionRuleConflictConnection"),Object(c.b)("p",null,"The connection type for BranchProtectionRuleConflict."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionruleconflictedge"},Object(c.b)("code",null,"[BranchProtectionRuleConflictEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionruleconflict"},Object(c.b)("code",null,"[BranchProtectionRuleConflict]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"branchprotectionruleconflictedge"},"BranchProtectionRuleConflictEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionruleconflict"},Object(c.b)("code",null,"BranchProtectionRuleConflict"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"branchprotectionruleconnection"},"BranchProtectionRuleConnection"),Object(c.b)("p",null,"The connection type for BranchProtectionRule."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionruleedge"},Object(c.b)("code",null,"[BranchProtectionRuleEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"[BranchProtectionRule]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"branchprotectionruleedge"},"BranchProtectionRuleEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"cancelenterpriseadmininvitationpayload"},"CancelEnterpriseAdminInvitationPayload"),Object(c.b)("p",null,"Autogenerated return type of CancelEnterpriseAdminInvitation"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"invitation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitation"},Object(c.b)("code",null,"EnterpriseAdministratorInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The invitation that was canceled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of canceling an administrator invitation."))))),Object(c.b)("h2",{id:"changeuserstatuspayload"},"ChangeUserStatusPayload"),Object(c.b)("p",null,"Autogenerated return type of ChangeUserStatus"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"status",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatus"},Object(c.b)("code",null,"UserStatus"))),Object(c.b)("td",null,Object(c.b)("p",null,"Your updated status."))))),Object(c.b)("h2",{id:"checkannotation"},"CheckAnnotation"),Object(c.b)("p",null,"A single check annotation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"annotationLevel",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#checkannotationlevel"},Object(c.b)("code",null,"CheckAnnotationLevel"))),Object(c.b)("td",null,Object(c.b)("p",null,"The annotation's severity level."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blobUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path to the file that this annotation was made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"location",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotationspan"},Object(c.b)("code",null,"CheckAnnotationSpan!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The position of this annotation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The annotation's message."))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path that this annotation was made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"rawDetails",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Additional information about the annotation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The annotation's title"))))),Object(c.b)("h2",{id:"checkannotationconnection"},"CheckAnnotationConnection"),Object(c.b)("p",null,"The connection type for CheckAnnotation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotationedge"},Object(c.b)("code",null,"[CheckAnnotationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotation"},Object(c.b)("code",null,"[CheckAnnotation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"checkannotationedge"},"CheckAnnotationEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotation"},Object(c.b)("code",null,"CheckAnnotation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"checkannotationposition"},"CheckAnnotationPosition"),Object(c.b)("p",null,"A character position in a check annotation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"column",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Column number (1 indexed)."))),Object(c.b)("tr",null,Object(c.b)("td",null,"line",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Line number (1 indexed)."))))),Object(c.b)("h2",{id:"checkannotationspan"},"CheckAnnotationSpan"),Object(c.b)("p",null,"An inclusive pair of positions for a check annotation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"end",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotationposition"},Object(c.b)("code",null,"CheckAnnotationPosition!"))),Object(c.b)("td",null,Object(c.b)("p",null,"End position (inclusive)."))),Object(c.b)("tr",null,Object(c.b)("td",null,"start",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotationposition"},Object(c.b)("code",null,"CheckAnnotationPosition!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Start position (inclusive)."))))),Object(c.b)("h2",{id:"checkrun"},"CheckRun"),Object(c.b)("p",null,"A check run."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#requirablebypullrequest"},"RequirableByPullRequest")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"annotations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkannotationconnection"},Object(c.b)("code",null,"CheckAnnotationConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"The check run's annotations"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"checkSuite",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuite"},Object(c.b)("code",null,"CheckSuite!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The check suite that this run is a part of."))),Object(c.b)("tr",null,Object(c.b)("td",null,"completedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the check run was completed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"conclusion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#checkconclusionstate"},Object(c.b)("code",null,"CheckConclusionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"The conclusion of the check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"detailsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL from which to find full details of the check run on the integrator's site."))),Object(c.b)("tr",null,Object(c.b)("td",null,"externalId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A reference for the check run on the integrator's system."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isRequired",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this is required to pass before merging for a specific pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The id of the pull request this is required for"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestNumber",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of the pull request this is required for"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the check for this check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permalink",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permalink to the check run summary."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"startedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the check run was started."))),Object(c.b)("tr",null,Object(c.b)("td",null,"status",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#checkstatusstate"},Object(c.b)("code",null,"CheckStatusState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current status of the check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"summary",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string representing the check run's summary"))),Object(c.b)("tr",null,Object(c.b)("td",null,"text",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string representing the check run's text"))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string representing the check run"))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this check run."))))),Object(c.b)("h2",{id:"checkrunconnection"},"CheckRunConnection"),Object(c.b)("p",null,"The connection type for CheckRun."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkrunedge"},Object(c.b)("code",null,"[CheckRunEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkrun"},Object(c.b)("code",null,"[CheckRun]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"checkrunedge"},"CheckRunEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkrun"},Object(c.b)("code",null,"CheckRun"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"checksuite"},"CheckSuite"),Object(c.b)("p",null,"A check suite."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"app",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#app"},Object(c.b)("code",null,"App"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub App which created this check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"branch",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the branch for this check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"checkRuns",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkrunconnection"},Object(c.b)("code",null,"CheckRunConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"The check runs associated with a check suite."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filterBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#checkrunfilter"},Object(c.b)("code",null,"CheckRunFilter"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters the check runs by this type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit for this check suite"))),Object(c.b)("tr",null,Object(c.b)("td",null,"conclusion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#checkconclusionstate"},Object(c.b)("code",null,"CheckConclusionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"The conclusion of this check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"matchingPullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of open pull requests matching the check suite."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The base ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"[PullRequestState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the pull requests by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"push",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#push"},Object(c.b)("code",null,"Push"))),Object(c.b)("td",null,Object(c.b)("p",null,"The push that triggered this check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this check suite"))),Object(c.b)("tr",null,Object(c.b)("td",null,"status",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#checkstatusstate"},Object(c.b)("code",null,"CheckStatusState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The status of this check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this check suite"))))),Object(c.b)("h2",{id:"checksuiteconnection"},"CheckSuiteConnection"),Object(c.b)("p",null,"The connection type for CheckSuite."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuiteedge"},Object(c.b)("code",null,"[CheckSuiteEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuite"},Object(c.b)("code",null,"[CheckSuite]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"checksuiteedge"},"CheckSuiteEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuite"},Object(c.b)("code",null,"CheckSuite"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"clearlabelsfromlabelablepayload"},"ClearLabelsFromLabelablePayload"),Object(c.b)("p",null,"Autogenerated return type of ClearLabelsFromLabelable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labelable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},Object(c.b)("code",null,"Labelable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item that was unlabeled."))))),Object(c.b)("h2",{id:"cloneprojectpayload"},"CloneProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of CloneProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"jobStatusId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The id of the JobStatus for populating cloned fields."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new cloned project."))))),Object(c.b)("h2",{id:"clonetemplaterepositorypayload"},"CloneTemplateRepositoryPayload"),Object(c.b)("p",null,"Autogenerated return type of CloneTemplateRepository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new repository."))))),Object(c.b)("h2",{id:"closedevent"},"ClosedEvent"),Object(c.b)("p",null,"Represents a 'closed' event on any ",Object(c.b)("inlineCode",{parentName:"p"},"Closable"),"."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"closable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#closable"},Object(c.b)("code",null,"Closable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object that was closed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"closer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#closer"},Object(c.b)("code",null,"Closer"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object which triggered the creation of this event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this closed event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this closed event."))))),Object(c.b)("h2",{id:"closeissuepayload"},"CloseIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of CloseIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was closed."))))),Object(c.b)("h2",{id:"closepullrequestpayload"},"ClosePullRequestPayload"),Object(c.b)("p",null,"Autogenerated return type of ClosePullRequest"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that was closed."))))),Object(c.b)("h2",{id:"codeofconduct"},"CodeOfConduct"),Object(c.b)("p",null,"The Code of Conduct for a repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body of the Code of Conduct"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"key",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The key for the Code of Conduct"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The formal name of the Code of Conduct"))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Code of Conduct"))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Code of Conduct"))))),Object(c.b)("h2",{id:"commentdeletedevent"},"CommentDeletedEvent"),Object(c.b)("p",null,"Represents a 'comment_deleted' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletedCommentAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who authored the deleted comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)))),Object(c.b)("h2",{id:"commit"},"Commit"),Object(c.b)("p",null,"Represents a Git commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},"GitObject")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},"Subscribable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"abbreviatedOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An abbreviated version of the Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"additions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of additions in this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"associatedPullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#pullrequestorder"},Object(c.b)("code",null,"PullRequestOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactor"},Object(c.b)("code",null,"GitActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Authorship details of the commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authoredByCommitter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the committer and the author match."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authoredDate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The datetime when this commit was authored."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authors",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactorconnection"},Object(c.b)("code",null,"GitActorConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The list of authors for this commit based on the git author and the Co-authored-by message trailer. The git author will always be first."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"blame",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#blame"},Object(c.b)("code",null,"Blame!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Fetches ",Object(c.b)("code",null,"git blame")," information."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The file whose Git blame information you want."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"changedFiles",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of changed files in this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"checkSuites",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuiteconnection"},Object(c.b)("code",null,"CheckSuiteConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"The check suites associated with a commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filterBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#checksuitefilter"},Object(c.b)("code",null,"CheckSuiteFilter"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters the check suites by this type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcommentconnection"},Object(c.b)("code",null,"CommitCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Comments made on the commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"committedDate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The datetime when this commit was committed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"committedViaWeb",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if committed via GitHub web UI."))),Object(c.b)("tr",null,Object(c.b)("td",null,"committer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactor"},Object(c.b)("code",null,"GitActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Committer details of the commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of deletions in this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentconnection"},Object(c.b)("code",null,"DeploymentConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deployments associated with a commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"environments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Environments to list deployments for"))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#deploymentorder"},Object(c.b)("code",null,"DeploymentOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for deployments returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"file",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#treeentry"},Object(c.b)("code",null,"TreeEntry"))),Object(c.b)("td",null,Object(c.b)("p",null,"The tree entry representing the file located at the given path."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path for the file"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"history",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commithistoryconnection"},Object(c.b)("code",null,"CommitHistoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The linear commit history starting from (and including) this commit, in the same order as ",Object(c.b)("code",null,"git log"),"."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#commitauthor"},Object(c.b)("code",null,"CommitAuthor"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters history to only show commits with matching authorship."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters history to only show commits touching files under this path."))),Object(c.b)("tr",null,Object(c.b)("td",null,"since",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gittimestamp"},Object(c.b)("code",null,"GitTimestamp"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying a beginning time or date for fetching commits."))),Object(c.b)("tr",null,Object(c.b)("td",null,"until",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gittimestamp"},Object(c.b)("code",null,"GitTimestamp"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying an ending time or date for fetching commits."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git commit message"))),Object(c.b)("tr",null,Object(c.b)("td",null,"messageBody",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git commit message body"))),Object(c.b)("tr",null,Object(c.b)("td",null,"messageBodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit message body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"messageHeadline",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git commit message headline"))),Object(c.b)("tr",null,Object(c.b)("td",null,"messageHeadlineHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit message headline rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"onBehalfOf",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization this commit was made on behalf of."))),Object(c.b)("tr",null,Object(c.b)("td",null,"parents",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitconnection"},Object(c.b)("code",null,"CommitConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The parents of a commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pushedDate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The datetime when this commit was pushed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository this commit belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this commit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"signature",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitsignature"},Object(c.b)("code",null,"GitSignature"))),Object(c.b)("td",null,Object(c.b)("p",null,"Commit signing information, if present."))),Object(c.b)("tr",null,Object(c.b)("td",null,"status",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#status"},Object(c.b)("code",null,"Status"))),Object(c.b)("td",null,Object(c.b)("p",null,"Status information for this commit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"statusCheckRollup",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#statuscheckrollup"},Object(c.b)("code",null,"StatusCheckRollup"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check and Status rollup information for this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"submodules",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#submoduleconnection"},Object(c.b)("code",null,"SubmoduleConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"tarballUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a URL to download a tarball archive for a repository. Note: For private repositories, these links are temporary and expire after five minutes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"tree",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#tree"},Object(c.b)("code",null,"Tree!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Commit's root Tree"))),Object(c.b)("tr",null,Object(c.b)("td",null,"treeResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the tree of this commit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"treeUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the tree of this commit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this commit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSubscribe",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerSubscription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"zipballUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a URL to download a zipball archive for a repository. Note: For private repositories, these links are temporary and expire after five minutes."))))),Object(c.b)("h2",{id:"commitcomment"},"CommitComment"),Object(c.b)("p",null,"Represents a comment on a given Commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#minimizable"},"Minimizable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the comment body."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit associated with the comment, if the commit exists."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isMinimized",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not a comment has been minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"minimizedReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns why the comment was minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the file path associated with the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"position",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the line position associated with the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path permalink for this commit comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL permalink for this commit comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanMinimize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can minimize this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"commitcommentconnection"},"CommitCommentConnection"),Object(c.b)("p",null,"The connection type for CommitComment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcommentedge"},Object(c.b)("code",null,"[CommitCommentEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcomment"},Object(c.b)("code",null,"[CommitComment]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"commitcommentedge"},"CommitCommentEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcomment"},Object(c.b)("code",null,"CommitComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"commitcommentthread"},"CommitCommentThread"),Object(c.b)("p",null,"A thread of comments on a commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcommentconnection"},Object(c.b)("code",null,"CommitCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comments that exist in this thread."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit the comments were made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The file the comments were made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"position",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The position in the diff for the commit that the comment was made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))))),Object(c.b)("h2",{id:"commitconnection"},"CommitConnection"),Object(c.b)("p",null,"The connection type for Commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitedge"},Object(c.b)("code",null,"[CommitEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"[Commit]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"commitcontributionsbyrepository"},"CommitContributionsByRepository"),Object(c.b)("p",null,"This aggregates commits made by a user within one repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdcommitcontributionconnection"},Object(c.b)("code",null,"CreatedCommitContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit contributions, each representing a day."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#commitcontributionorder"},Object(c.b)("code",null,"CommitContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for commit contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository in which the commits were made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user's commits to the repository in this time range."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user's commits to the repository in this time range."))))),Object(c.b)("h2",{id:"commitedge"},"CommitEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"commithistoryconnection"},"CommitHistoryConnection"),Object(c.b)("p",null,"The connection type for Commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitedge"},Object(c.b)("code",null,"[CommitEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"[Commit]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"connectedevent"},"ConnectedEvent"),Object(c.b)("p",null,"Represents a 'connected' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reference originated in a different repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"source",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue or pull request that made the reference."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue or pull request which was connected."))))),Object(c.b)("h2",{id:"contentattachment"},"ContentAttachment"),Object(c.b)("p",null,"A content attachment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body text of the content attachment. This parameter supports markdown."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contentReference",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contentreference"},Object(c.b)("code",null,"ContentReference!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The content reference that the content attachment is attached to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The title of the content attachment."))))),Object(c.b)("h2",{id:"contentreference"},"ContentReference"),Object(c.b)("p",null,"A content reference"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"reference",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reference of the content reference."))))),Object(c.b)("h2",{id:"contributioncalendar"},"ContributionCalendar"),Object(c.b)("p",null,"A calendar of contributions made on GitHub by a user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"colors",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of hex color codes used in this calendar. The darker the color, the more contributions it represents."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isHalloween",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if the color set was chosen because it's currently Halloween."))),Object(c.b)("tr",null,Object(c.b)("td",null,"months",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributioncalendarmonth"},Object(c.b)("code",null,"[ContributionCalendarMonth!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of the months of contributions in this calendar."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The count of total contributions in the calendar."))),Object(c.b)("tr",null,Object(c.b)("td",null,"weeks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributioncalendarweek"},Object(c.b)("code",null,"[ContributionCalendarWeek!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of the weeks of contributions in this calendar."))))),Object(c.b)("h2",{id:"contributioncalendarday"},"ContributionCalendarDay"),Object(c.b)("p",null,"Represents a single day of contributions on GitHub by a user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"color",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The hex color code that represents how many contributions were made on this day compared to others in the calendar."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contributionCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many contributions were made by the user on this day."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contributionLevel",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#contributionlevel"},Object(c.b)("code",null,"ContributionLevel!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indication of contributions, relative to other days. Can be used to indicate which color to represent this day on a calendar."))),Object(c.b)("tr",null,Object(c.b)("td",null,"date",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#date"},Object(c.b)("code",null,"Date!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The day this square represents."))),Object(c.b)("tr",null,Object(c.b)("td",null,"weekday",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A number representing which day of the week this square represents, e.g., 1 is Monday."))))),Object(c.b)("h2",{id:"contributioncalendarmonth"},"ContributionCalendarMonth"),Object(c.b)("p",null,"A month of contributions in a user's contribution graph."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"firstDay",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#date"},Object(c.b)("code",null,"Date!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The date of the first day of this month."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the month."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalWeeks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many weeks started in this month."))),Object(c.b)("tr",null,Object(c.b)("td",null,"year",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The year the month occurred in."))))),Object(c.b)("h2",{id:"contributioncalendarweek"},"ContributionCalendarWeek"),Object(c.b)("p",null,"A week of contributions in a user's contribution graph."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contributionDays",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributioncalendarday"},Object(c.b)("code",null,"[ContributionCalendarDay!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The days of contributions in this week."))),Object(c.b)("tr",null,Object(c.b)("td",null,"firstDay",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#date"},Object(c.b)("code",null,"Date!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The date of the earliest square in this week."))))),Object(c.b)("h2",{id:"contributionscollection"},"ContributionsCollection"),Object(c.b)("p",null,"A contributions collection aggregates contributions such as opened issues and commits created by a user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"commitContributionsByRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcontributionsbyrepository"},Object(c.b)("code",null,"[CommitContributionsByRepository!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Commit contributions made by the user, grouped by repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"maxRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many repositories should be included."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"contributionCalendar",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributioncalendar"},Object(c.b)("code",null,"ContributionCalendar!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A calendar of this user's contributions on GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contributionYears",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"[Int!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The years the user has been making contributions with the most recent year first."))),Object(c.b)("tr",null,Object(c.b)("td",null,"doesEndInCurrentMonth",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if this collection's time span ends in the current month."))),Object(c.b)("tr",null,Object(c.b)("td",null,"earliestRestrictedContributionDate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#date"},Object(c.b)("code",null,"Date"))),Object(c.b)("td",null,Object(c.b)("p",null,"The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts."))),Object(c.b)("tr",null,Object(c.b)("td",null,"endedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ending date and time of this collection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"firstIssueContribution",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#createdissueorrestrictedcontribution"},Object(c.b)("code",null,"CreatedIssueOrRestrictedContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection's time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"firstPullRequestContribution",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#createdpullrequestorrestrictedcontribution"},Object(c.b)("code",null,"CreatedPullRequestOrRestrictedContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection's time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"firstRepositoryContribution",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#createdrepositoryorrestrictedcontribution"},Object(c.b)("code",null,"CreatedRepositoryOrRestrictedContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The first repository the user created on GitHub. This will be null if that first repository was created outside the collection's time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasActivityInThePast",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Does the user have any more activity in the timeline that occurred prior to the collection's time range?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasAnyContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if there are any contributions in this collection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasAnyRestrictedContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSingleDay",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the collector's time span is all within the same day."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdissuecontributionconnection"},Object(c.b)("code",null,"CreatedIssueContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of issues the user opened."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first issue ever be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented issue be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueContributionsByRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecontributionsbyrepository"},Object(c.b)("code",null,"[IssueContributionsByRepository!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue contributions made by the user, grouped by repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first issue ever be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented issue be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"maxRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many repositories should be included."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"joinedGitHubContribution",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#joinedgithubcontribution"},Object(c.b)("code",null,"JoinedGitHubContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"When the user signed up for GitHub. This will be null if that sign up date falls outside the collection's time range and ignoreTimeRange is false."))),Object(c.b)("tr",null,Object(c.b)("td",null,"latestRestrictedContributionDate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#date"},Object(c.b)("code",null,"Date"))),Object(c.b)("td",null,Object(c.b)("p",null,"The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mostRecentCollectionWithActivity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributionscollection"},Object(c.b)("code",null,"ContributionsCollection"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this collection's time range does not include any activity from the user, use this to get a different collection from an earlier time range that does have activity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mostRecentCollectionWithoutActivity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributionscollection"},Object(c.b)("code",null,"ContributionsCollection"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a different contributions collection from an earlier time range than this one that does not have any contributions."))),Object(c.b)("tr",null,Object(c.b)("td",null,"popularIssueContribution",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdissuecontribution"},Object(c.b)("code",null,"CreatedIssueContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue the user opened on GitHub that received the most comments in the specified time frame."))),Object(c.b)("tr",null,Object(c.b)("td",null,"popularPullRequestContribution",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestcontribution"},Object(c.b)("code",null,"CreatedPullRequestContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request the user opened on GitHub that received the most comments in the specified time frame."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestcontributionconnection"},Object(c.b)("code",null,"CreatedPullRequestContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Pull request contributions made by the user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first pull request ever be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented pull request be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestContributionsByRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestcontributionsbyrepository"},Object(c.b)("code",null,"[PullRequestContributionsByRepository!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Pull request contributions made by the user, grouped by repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first pull request ever be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented pull request be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"maxRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many repositories should be included."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReviewContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestreviewcontributionconnection"},Object(c.b)("code",null,"CreatedPullRequestReviewContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Pull request review contributions made by the user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReviewContributionsByRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcontributionsbyrepository"},Object(c.b)("code",null,"[PullRequestReviewContributionsByRepository!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Pull request review contributions made by the user, grouped by repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"maxRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many repositories should be included."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdrepositorycontributionconnection"},Object(c.b)("code",null,"CreatedRepositoryContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories owned by the user that the user created in this time range."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first repository ever be excluded from the result."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"restrictedContributionsCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts."))),Object(c.b)("tr",null,Object(c.b)("td",null,"startedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The beginning date and time of this collection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCommitContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many commits were made by the user in this time span."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalIssueContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many issues the user opened."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first issue ever be excluded from this count."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented issue be excluded from this count."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalPullRequestContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many pull requests the user opened."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first pull request ever be excluded from this count."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented pull request be excluded from this count."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalPullRequestReviewContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many pull request reviews the user left."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalRepositoriesWithContributedCommits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many different repositories the user committed to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalRepositoriesWithContributedIssues",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many different repositories the user opened issues in."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first issue ever be excluded from this count."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented issue be excluded from this count."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalRepositoriesWithContributedPullRequestReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many different repositories the user left pull request reviews in."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalRepositoriesWithContributedPullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many different repositories the user opened pull requests in."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first pull request ever be excluded from this count."))),Object(c.b)("tr",null,Object(c.b)("td",null,"excludePopular",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's most commented pull request be excluded from this count."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalRepositoryContributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many repositories the user created."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"excludeFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Should the user's first repository ever be excluded from this count."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made the contributions in this collection."))))),Object(c.b)("h2",{id:"convertednotetoissueevent"},"ConvertedNoteToIssueEvent"),Object(c.b)("p",null,"Represents a 'converted_note_to_issue' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"ProjectCard"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project card referenced by this project event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectColumnName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Column name referenced by this project event."))))),Object(c.b)("h2",{id:"convertprojectcardnotetoissuepayload"},"ConvertProjectCardNoteToIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of ConvertProjectCardNoteToIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"ProjectCard"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated ProjectCard."))))),Object(c.b)("h2",{id:"converttodraftevent"},"ConvertToDraftEvent"),Object(c.b)("p",null,"Represents a 'convert_to_draft' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this convert to draft event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this convert to draft event."))))),Object(c.b)("h2",{id:"createbranchprotectionrulepayload"},"CreateBranchProtectionRulePayload"),Object(c.b)("p",null,"Autogenerated return type of CreateBranchProtectionRule"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created BranchProtectionRule."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"createcheckrunpayload"},"CreateCheckRunPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateCheckRun"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"checkRun",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkrun"},Object(c.b)("code",null,"CheckRun"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"createchecksuitepayload"},"CreateCheckSuitePayload"),Object(c.b)("p",null,"Autogenerated return type of CreateCheckSuite"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"checkSuite",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuite"},Object(c.b)("code",null,"CheckSuite"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"createcontentattachmentpayload"},"CreateContentAttachmentPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateContentAttachment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contentAttachment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contentattachment"},Object(c.b)("code",null,"ContentAttachment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created content attachment."))))),Object(c.b)("h2",{id:"createdcommitcontribution"},"CreatedCommitContribution"),Object(c.b)("p",null,"Represents the contribution a user made by committing to a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"commitCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many commits were made on this day to this repository by the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository the user made a commit in."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"createdcommitcontributionconnection"},"CreatedCommitContributionConnection"),Object(c.b)("p",null,"The connection type for CreatedCommitContribution."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdcommitcontributionedge"},Object(c.b)("code",null,"[CreatedCommitContributionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdcommitcontribution"},Object(c.b)("code",null,"[CreatedCommitContribution]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of commits across days and repositories in the connection."))))),Object(c.b)("h2",{id:"createdcommitcontributionedge"},"CreatedCommitContributionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdcommitcontribution"},Object(c.b)("code",null,"CreatedCommitContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"createdeploymentpayload"},"CreateDeploymentPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateDeployment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"autoMerged",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the default branch has been auto-merged into the deployment ref."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deployment"},Object(c.b)("code",null,"Deployment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new deployment."))))),Object(c.b)("h2",{id:"createdeploymentstatuspayload"},"CreateDeploymentStatusPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateDeploymentStatus"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deploymentStatus",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatus"},Object(c.b)("code",null,"DeploymentStatus"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new deployment status."))))),Object(c.b)("h2",{id:"createdissuecontribution"},"CreatedIssueContribution"),Object(c.b)("p",null,"Represents the contribution a user made on GitHub by opening an issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was opened."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"createdissuecontributionconnection"},"CreatedIssueContributionConnection"),Object(c.b)("p",null,"The connection type for CreatedIssueContribution."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdissuecontributionedge"},Object(c.b)("code",null,"[CreatedIssueContributionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdissuecontribution"},Object(c.b)("code",null,"[CreatedIssueContribution]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"createdissuecontributionedge"},"CreatedIssueContributionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdissuecontribution"},Object(c.b)("code",null,"CreatedIssueContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"createdpullrequestcontribution"},"CreatedPullRequestContribution"),Object(c.b)("p",null,"Represents the contribution a user made on GitHub by opening a pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that was opened."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"createdpullrequestcontributionconnection"},"CreatedPullRequestContributionConnection"),Object(c.b)("p",null,"The connection type for CreatedPullRequestContribution."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestcontributionedge"},Object(c.b)("code",null,"[CreatedPullRequestContributionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestcontribution"},Object(c.b)("code",null,"[CreatedPullRequestContribution]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"createdpullrequestcontributionedge"},"CreatedPullRequestContributionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestcontribution"},Object(c.b)("code",null,"CreatedPullRequestContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"createdpullrequestreviewcontribution"},"CreatedPullRequestReviewContribution"),Object(c.b)("p",null,"Represents the contribution a user made by leaving a review on a pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request the user reviewed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The review the user left on the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository containing the pull request that the user reviewed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"createdpullrequestreviewcontributionconnection"},"CreatedPullRequestReviewContributionConnection"),Object(c.b)("p",null,"The connection type for CreatedPullRequestReviewContribution."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestreviewcontributionedge"},Object(c.b)("code",null,"[CreatedPullRequestReviewContributionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestreviewcontribution"},Object(c.b)("code",null,"[CreatedPullRequestReviewContribution]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"createdpullrequestreviewcontributionedge"},"CreatedPullRequestReviewContributionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestreviewcontribution"},Object(c.b)("code",null,"CreatedPullRequestReviewContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"createdrepositorycontribution"},"CreatedRepositoryContribution"),Object(c.b)("p",null,"Represents the contribution a user made on GitHub by creating a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"createdrepositorycontributionconnection"},"CreatedRepositoryContributionConnection"),Object(c.b)("p",null,"The connection type for CreatedRepositoryContribution."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdrepositorycontributionedge"},Object(c.b)("code",null,"[CreatedRepositoryContributionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdrepositorycontribution"},Object(c.b)("code",null,"[CreatedRepositoryContribution]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"createdrepositorycontributionedge"},"CreatedRepositoryContributionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdrepositorycontribution"},Object(c.b)("code",null,"CreatedRepositoryContribution"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"createenterpriseorganizationpayload"},"CreateEnterpriseOrganizationPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateEnterpriseOrganization"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise that owns the created organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization that was created."))))),Object(c.b)("h2",{id:"createipallowlistentrypayload"},"CreateIpAllowListEntryPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateIpAllowListEntry"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEntry",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentry"},Object(c.b)("code",null,"IpAllowListEntry"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP allow list entry that was created."))))),Object(c.b)("h2",{id:"createissuepayload"},"CreateIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of CreateIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new issue."))))),Object(c.b)("h2",{id:"createlabelpayload"},"CreateLabelPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateLabel"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"label",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"Label"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new label."))))),Object(c.b)("h2",{id:"createprojectpayload"},"CreateProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new project."))))),Object(c.b)("h2",{id:"createpullrequestpayload"},"CreatePullRequestPayload"),Object(c.b)("p",null,"Autogenerated return type of CreatePullRequest"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new pull request."))))),Object(c.b)("h2",{id:"createrefpayload"},"CreateRefPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateRef"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created ref."))))),Object(c.b)("h2",{id:"createrepositorypayload"},"CreateRepositoryPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateRepository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new repository."))))),Object(c.b)("h2",{id:"createteamdiscussioncommentpayload"},"CreateTeamDiscussionCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateTeamDiscussionComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamDiscussionComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussioncomment"},Object(c.b)("code",null,"TeamDiscussionComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new comment."))))),Object(c.b)("h2",{id:"createteamdiscussionpayload"},"CreateTeamDiscussionPayload"),Object(c.b)("p",null,"Autogenerated return type of CreateTeamDiscussion"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamDiscussion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussion"},Object(c.b)("code",null,"TeamDiscussion"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new discussion."))))),Object(c.b)("h2",{id:"crossreferencedevent"},"CrossReferencedEvent"),Object(c.b)("p",null,"Represents a mention made by one issue or pull request to another."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reference originated in a different repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"referencedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the reference was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"source",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue or pull request that made the reference."))),Object(c.b)("tr",null,Object(c.b)("td",null,"target",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue or pull request to which the reference was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"willCloseTarget",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Checks if the target will be closed when the source is merged."))))),Object(c.b)("h2",{id:"cvss"},"CVSS"),Object(c.b)("p",null,"The Common Vulnerability Scoring System"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"score",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The CVSS score associated with this advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"vectorString",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The CVSS vector string associated with this advisory"))))),Object(c.b)("h2",{id:"cwe"},"CWE"),Object(c.b)("p",null,"A common weakness enumeration"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cweId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The id of the CWE"))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A detailed description of this CWE"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ID of the object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of this CWE"))))),Object(c.b)("h2",{id:"cweconnection"},"CWEConnection"),Object(c.b)("p",null,"The connection type for CWE."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#cweedge"},Object(c.b)("code",null,"[CWEEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#cwe"},Object(c.b)("code",null,"[CWE]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"cweedge"},"CWEEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#cwe"},Object(c.b)("code",null,"CWE"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"declinetopicsuggestionpayload"},"DeclineTopicSuggestionPayload"),Object(c.b)("p",null,"Autogenerated return type of DeclineTopicSuggestion"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"topic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"Topic"))),Object(c.b)("td",null,Object(c.b)("p",null,"The declined topic."))))),Object(c.b)("h2",{id:"deletebranchprotectionrulepayload"},"DeleteBranchProtectionRulePayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteBranchProtectionRule"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deletedeploymentpayload"},"DeleteDeploymentPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteDeployment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deleteipallowlistentrypayload"},"DeleteIpAllowListEntryPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteIpAllowListEntry"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEntry",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentry"},Object(c.b)("code",null,"IpAllowListEntry"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP allow list entry that was deleted."))))),Object(c.b)("h2",{id:"deleteissuecommentpayload"},"DeleteIssueCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteIssueComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deleteissuepayload"},"DeleteIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository the issue belonged to"))))),Object(c.b)("h2",{id:"deletelabelpayload"},"DeleteLabelPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteLabel"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deletepackageversionpayload"},"DeletePackageVersionPayload"),Object(c.b)("p",null,"Autogenerated return type of DeletePackageVersion"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"success",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the operation succeeded."))))),Object(c.b)("h2",{id:"deleteprojectcardpayload"},"DeleteProjectCardPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteProjectCard"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"column",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumn"},Object(c.b)("code",null,"ProjectColumn"))),Object(c.b)("td",null,Object(c.b)("p",null,"The column the deleted card was in."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletedCardId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deleted card ID."))))),Object(c.b)("h2",{id:"deleteprojectcolumnpayload"},"DeleteProjectColumnPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteProjectColumn"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletedColumnId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deleted column ID."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project the deleted column was in."))))),Object(c.b)("h2",{id:"deleteprojectpayload"},"DeleteProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#projectowner"},Object(c.b)("code",null,"ProjectOwner"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository or organization the project was removed from."))))),Object(c.b)("h2",{id:"deletepullrequestreviewcommentpayload"},"DeletePullRequestReviewCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of DeletePullRequestReviewComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request review the deleted comment belonged to."))))),Object(c.b)("h2",{id:"deletepullrequestreviewpayload"},"DeletePullRequestReviewPayload"),Object(c.b)("p",null,"Autogenerated return type of DeletePullRequestReview"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deleted pull request review."))))),Object(c.b)("h2",{id:"deleterefpayload"},"DeleteRefPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteRef"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deleteteamdiscussioncommentpayload"},"DeleteTeamDiscussionCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteTeamDiscussionComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deleteteamdiscussionpayload"},"DeleteTeamDiscussionPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteTeamDiscussion"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"deleteverifiabledomainpayload"},"DeleteVerifiableDomainPayload"),Object(c.b)("p",null,"Autogenerated return type of DeleteVerifiableDomain"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#verifiabledomainowner"},Object(c.b)("code",null,"VerifiableDomainOwner"))),Object(c.b)("td",null,Object(c.b)("p",null,"The owning account from which the domain was deleted."))))),Object(c.b)("h2",{id:"demilestonedevent"},"DemilestonedEvent"),Object(c.b)("p",null,"Represents a 'demilestoned' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"milestoneTitle",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the milestone title associated with the 'demilestoned' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#milestoneitem"},Object(c.b)("code",null,"MilestoneItem!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object referenced by event."))))),Object(c.b)("h2",{id:"dependencygraphdependency"},"DependencyGraphDependency"),Object(c.b)("p",null,"A dependency manifest entry"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"hasDependencies",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Does the dependency itself have dependencies?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageManager",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The dependency package manager"))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The required package name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository containing the package"))),Object(c.b)("tr",null,Object(c.b)("td",null,"requirements",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The dependency version requirements"))))),Object(c.b)("h2",{id:"dependencygraphdependencyconnection"},"DependencyGraphDependencyConnection"),Object(c.b)("p",null,"The connection type for DependencyGraphDependency."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphdependencyedge"},Object(c.b)("code",null,"[DependencyGraphDependencyEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphdependency"},Object(c.b)("code",null,"[DependencyGraphDependency]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"dependencygraphdependencyedge"},"DependencyGraphDependencyEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphdependency"},Object(c.b)("code",null,"DependencyGraphDependency"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"dependencygraphmanifest"},"DependencyGraphManifest"),Object(c.b)("p",null,"Dependency manifest for a repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"blobPath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Path to view the manifest file blob"))),Object(c.b)("tr",null,Object(c.b)("td",null,"dependencies",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphdependencyconnection"},Object(c.b)("code",null,"DependencyGraphDependencyConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of manifest dependencies"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"dependenciesCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of dependencies listed in the manifest"))),Object(c.b)("tr",null,Object(c.b)("td",null,"exceedsMaxSize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is the manifest too big to parse?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"filename",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Fully qualified manifest filename"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"parseable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Were we able to parse the manifest?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository containing the manifest"))))),Object(c.b)("h2",{id:"dependencygraphmanifestconnection"},"DependencyGraphManifestConnection"),Object(c.b)("p",null,"The connection type for DependencyGraphManifest."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphmanifestedge"},Object(c.b)("code",null,"[DependencyGraphManifestEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphmanifest"},Object(c.b)("code",null,"[DependencyGraphManifest]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"dependencygraphmanifestedge"},"DependencyGraphManifestEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphmanifest"},Object(c.b)("code",null,"DependencyGraphManifest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"deployedevent"},"DeployedEvent"),Object(c.b)("p",null,"Represents a 'deployed' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deployment"},Object(c.b)("code",null,"Deployment!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deployment associated with the 'deployed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ref associated with the 'deployed' event."))))),Object(c.b)("h2",{id:"deploykey"},"DeployKey"),Object(c.b)("p",null,"A repository deploy key."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"key",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deploy key."))),Object(c.b)("tr",null,Object(c.b)("td",null,"readOnly",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the deploy key is read only."))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deploy key title."))),Object(c.b)("tr",null,Object(c.b)("td",null,"verified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the deploy key has been verified."))))),Object(c.b)("h2",{id:"deploykeyconnection"},"DeployKeyConnection"),Object(c.b)("p",null,"The connection type for DeployKey."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploykeyedge"},Object(c.b)("code",null,"[DeployKeyEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploykey"},Object(c.b)("code",null,"[DeployKey]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"deploykeyedge"},"DeployKeyEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploykey"},Object(c.b)("code",null,"DeployKey"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"deployment"},"Deployment"),Object(c.b)("p",null,"Represents triggered deployment instance."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit sha of the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the oid of the deployment commit, even if the commit has been deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who triggered the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deployment description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"environment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The latest environment to which this deployment was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"latestEnvironment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The latest environment to which this deployment was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"latestStatus",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatus"},Object(c.b)("code",null,"DeploymentStatus"))),Object(c.b)("td",null,Object(c.b)("p",null,"The latest status of this deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"originalEnvironment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The original environment to which this deployment was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"payload",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Extra information that a deployment system might need."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the Ref of the deployment, if the deployment was created by ref."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the repository associated with the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#deploymentstate"},Object(c.b)("code",null,"DeploymentState"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current state of the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"statuses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatusconnection"},Object(c.b)("code",null,"DeploymentStatusConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of statuses associated with the deployment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"task",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deployment task."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"deploymentconnection"},"DeploymentConnection"),Object(c.b)("p",null,"The connection type for Deployment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentedge"},Object(c.b)("code",null,"[DeploymentEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deployment"},Object(c.b)("code",null,"[Deployment]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"deploymentedge"},"DeploymentEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deployment"},Object(c.b)("code",null,"Deployment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"deploymentenvironmentchangedevent"},"DeploymentEnvironmentChangedEvent"),Object(c.b)("p",null,"Represents a 'deployment_environment_changed' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deploymentStatus",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatus"},Object(c.b)("code",null,"DeploymentStatus!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The deployment status that updated the deployment environment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"deploymentstatus"},"DeploymentStatus"),Object(c.b)("p",null,"Describes the status of a given deployment attempt."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who triggered the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deployment"},Object(c.b)("code",null,"Deployment!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the deployment associated with status."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the description of the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"environment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the environment of the deployment at the time of this deployment status"))),Object(c.b)("tr",null,Object(c.b)("td",null,"environmentUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the environment URL of the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"logUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the log URL of the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#deploymentstatusstate"},Object(c.b)("code",null,"DeploymentStatusState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the current state of the deployment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"deploymentstatusconnection"},"DeploymentStatusConnection"),Object(c.b)("p",null,"The connection type for DeploymentStatus."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatusedge"},Object(c.b)("code",null,"[DeploymentStatusEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatus"},Object(c.b)("code",null,"[DeploymentStatus]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"deploymentstatusedge"},"DeploymentStatusEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentstatus"},Object(c.b)("code",null,"DeploymentStatus"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"disablepullrequestautomergepayload"},"DisablePullRequestAutoMergePayload"),Object(c.b)("p",null,"Autogenerated return type of DisablePullRequestAutoMerge"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request auto merge was disabled on."))))),Object(c.b)("h2",{id:"disconnectedevent"},"DisconnectedEvent"),Object(c.b)("p",null,"Represents a 'disconnected' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reference originated in a different repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"source",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue or pull request from which the issue was disconnected."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Issue or pull request which was disconnected."))))),Object(c.b)("h2",{id:"dismisspullrequestreviewpayload"},"DismissPullRequestReviewPayload"),Object(c.b)("p",null,"Autogenerated return type of DismissPullRequestReview"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The dismissed pull request review."))))),Object(c.b)("h2",{id:"enablepullrequestautomergepayload"},"EnablePullRequestAutoMergePayload"),Object(c.b)("p",null,"Autogenerated return type of EnablePullRequestAutoMerge"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request auto-merge was enabled on."))))),Object(c.b)("h2",{id:"enterprise"},"Enterprise"),Object(c.b)("p",null,"An account to manage multiple organizations with consolidated policy and billing."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the enterprise's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"billingInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisebillinginfo"},Object(c.b)("code",null,"EnterpriseBillingInfo"))),Object(c.b)("td",null,Object(c.b)("p",null,"Enterprise billing information\xa0visible to enterprise billing managers."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"descriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the enterprise as HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"location",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The location of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"members",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisememberconnection"},Object(c.b)("code",null,"EnterpriseMemberConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who are members of this enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseuserdeployment"},Object(c.b)("code",null,"EnterpriseUserDeployment"))),Object(c.b)("td",null,Object(c.b)("p",null,"Only return members within the selected GitHub Enterprise deployment"))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterprisememberorder"},Object(c.b)("code",null,"EnterpriseMemberOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for members returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationLogins",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Only return members within the organizations with these logins"))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseuseraccountmembershiprole"},Object(c.b)("code",null,"EnterpriseUserAccountMembershipRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role of the user in the enterprise organization or server."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of organizations that belong to this enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"ownerInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseownerinfo"},Object(c.b)("code",null,"EnterpriseOwnerInfo"))),Object(c.b)("td",null,Object(c.b)("p",null,"Enterprise information only visible to enterprise owners."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL-friendly identifier for the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userAccounts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseuseraccountconnection"},Object(c.b)("code",null,"EnterpriseUserAccountConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of user accounts on this enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerIsAdmin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is the current viewer an admin of this enterprise?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"websiteUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL of the enterprise website."))))),Object(c.b)("h2",{id:"enterpriseadministratorconnection"},"EnterpriseAdministratorConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratoredge"},Object(c.b)("code",null,"[EnterpriseAdministratorEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseadministratoredge"},"EnterpriseAdministratorEdge"),Object(c.b)("p",null,"A User who is an administrator of an enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseadministratorrole"},Object(c.b)("code",null,"EnterpriseAdministratorRole!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role of the administrator."))))),Object(c.b)("h2",{id:"enterpriseadministratorinvitation"},"EnterpriseAdministratorInvitation"),Object(c.b)("p",null,"An invitation for a user to become an owner or billing manager of an enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email of the person who was invited to the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise the invitation is for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"invitee",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who was invited to the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"inviter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who created the invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseadministratorrole"},Object(c.b)("code",null,"EnterpriseAdministratorRole!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The invitee's pending role in the enterprise (owner or billing_manager)."))))),Object(c.b)("h2",{id:"enterpriseadministratorinvitationconnection"},"EnterpriseAdministratorInvitationConnection"),Object(c.b)("p",null,"The connection type for EnterpriseAdministratorInvitation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitationedge"},Object(c.b)("code",null,"[EnterpriseAdministratorInvitationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitation"},Object(c.b)("code",null,"[EnterpriseAdministratorInvitation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseadministratorinvitationedge"},"EnterpriseAdministratorInvitationEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitation"},Object(c.b)("code",null,"EnterpriseAdministratorInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterprisebillinginfo"},"EnterpriseBillingInfo"),Object(c.b)("p",null,"Enterprise billing information visible to enterprise billing managers and owners."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"allLicensableUsersCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of licenseable users/emails across the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assetPacks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of data packs used by all organizations owned by the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"availableSeats",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: `availableSeats` will be replaced with `totalAvailableLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalAvailableLicenses instead. Removal on 2020-01-01 UTC."),Object(c.b)("p",null,"The number of available seats across all owned organizations based on the unique number of billable users."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bandwidthQuota",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The bandwidth quota in GB for all organizations owned by the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bandwidthUsage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The bandwidth usage in GB for all organizations owned by the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bandwidthUsagePercentage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The bandwidth usage as a percentage of the bandwidth quota."))),Object(c.b)("tr",null,Object(c.b)("td",null,"seats",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: `seats` will be replaced with `totalLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalLicenses instead. Removal on 2020-01-01 UTC."),Object(c.b)("p",null,"The total seats across all organizations owned by the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"storageQuota",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The storage quota in GB for all organizations owned by the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"storageUsage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The storage usage in GB for all organizations owned by the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"storageUsagePercentage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The storage usage as a percentage of the storage quota."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalAvailableLicenses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of available licenses across all owned organizations based on the unique number of billable users."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalLicenses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The total number of licenses allocated."))))),Object(c.b)("h2",{id:"enterpriseidentityprovider"},"EnterpriseIdentityProvider"),Object(c.b)("p",null,"An identity provider configured to provision identities for an enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"digestMethod",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#samldigestalgorithm"},Object(c.b)("code",null,"SamlDigestAlgorithm"))),Object(c.b)("td",null,Object(c.b)("p",null,"The digest algorithm used to sign SAML requests for the identity provider."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise this identity provider belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"externalIdentities",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentityconnection"},Object(c.b)("code",null,"ExternalIdentityConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ExternalIdentities provisioned by this identity provider."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"idpCertificate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#x509certificate"},Object(c.b)("code",null,"X509Certificate"))),Object(c.b)("td",null,Object(c.b)("p",null,"The x509 certificate used by the identity provider to sign assertions and responses."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issuer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Issuer Entity ID for the SAML identity provider."))),Object(c.b)("tr",null,Object(c.b)("td",null,"recoveryCodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signatureMethod",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#samlsignaturealgorithm"},Object(c.b)("code",null,"SamlSignatureAlgorithm"))),Object(c.b)("td",null,Object(c.b)("p",null,"The signature algorithm used to sign SAML requests for the identity provider."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ssoUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL endpoint for the identity provider's SAML SSO."))))),Object(c.b)("h2",{id:"enterprisememberconnection"},"EnterpriseMemberConnection"),Object(c.b)("p",null,"The connection type for EnterpriseMember."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisememberedge"},Object(c.b)("code",null,"[EnterpriseMemberEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#enterprisemember"},Object(c.b)("code",null,"[EnterpriseMember]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterprisememberedge"},"EnterpriseMemberEdge"),Object(c.b)("p",null,"A User who is a member of an enterprise through one or more organizations."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUnlicensed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: All members consume a license Removal on 2021-01-01 UTC."),Object(c.b)("p",null,"Whether the user does not have a license for the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#enterprisemember"},Object(c.b)("code",null,"EnterpriseMember"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriseorganizationmembershipconnection"},"EnterpriseOrganizationMembershipConnection"),Object(c.b)("p",null,"The connection type for Organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseorganizationmembershipedge"},Object(c.b)("code",null,"[EnterpriseOrganizationMembershipEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"[Organization]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseorganizationmembershipedge"},"EnterpriseOrganizationMembershipEdge"),Object(c.b)("p",null,"An enterprise organization that a user is a member of."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseuseraccountmembershiprole"},Object(c.b)("code",null,"EnterpriseUserAccountMembershipRole!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role of the user in the enterprise membership."))))),Object(c.b)("h2",{id:"enterpriseoutsidecollaboratorconnection"},"EnterpriseOutsideCollaboratorConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseoutsidecollaboratoredge"},Object(c.b)("code",null,"[EnterpriseOutsideCollaboratorEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseoutsidecollaboratoredge"},"EnterpriseOutsideCollaboratorEdge"),Object(c.b)("p",null,"A User who is an outside collaborator of an enterprise through one or more organizations."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUnlicensed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: All outside collaborators consume a license Removal on 2021-01-01 UTC."),Object(c.b)("p",null,"Whether the outside collaborator does not have a license for the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriserepositoryinfoconnection"},Object(c.b)("code",null,"EnterpriseRepositoryInfoConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise organization repositories this user is a member of."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories."))))))))),Object(c.b)("h2",{id:"enterpriseownerinfo"},"EnterpriseOwnerInfo"),Object(c.b)("p",null,"Enterprise information only visible to enterprise owners."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"admins",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorconnection"},Object(c.b)("code",null,"EnterpriseAdministratorConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of all of the administrators for this enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterprisememberorder"},Object(c.b)("code",null,"EnterpriseMemberOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for administrators returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseadministratorrole"},Object(c.b)("code",null,"EnterpriseAdministratorRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role to filter by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"affiliatedUsersWithTwoFactorDisabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users in the enterprise who currently have two-factor authentication disabled."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"affiliatedUsersWithTwoFactorDisabledExist",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not affiliated users with two-factor authentication disabled exist in the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"allowPrivateRepositoryForkingSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"allowPrivateRepositoryForkingSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided private repository forking setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"defaultRepositoryPermissionSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterprisedefaultrepositorypermissionsettingvalue"},Object(c.b)("code",null,"EnterpriseDefaultRepositoryPermissionSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for base repository permissions for organizations in this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"defaultRepositoryPermissionSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided default repository permission."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#defaultrepositorypermissionfield"},Object(c.b)("code",null,"DefaultRepositoryPermissionField!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permission to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"domains",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomainconnection"},Object(c.b)("code",null,"VerifiableDomainConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of domains owned by the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter whether or not the domain is verified."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#verifiabledomainorder"},Object(c.b)("code",null,"VerifiableDomainOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for verifiable domains returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseServerInstallations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserverinstallationconnection"},Object(c.b)("code",null,"EnterpriseServerInstallationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Enterprise Server installations owned by the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"connectedOnly",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to only return installations discovered via GitHub Connect."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterpriseserverinstallationorder"},Object(c.b)("code",null,"EnterpriseServerInstallationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for Enterprise Server installations returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEnabledSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#ipallowlistenabledsettingvalue"},Object(c.b)("code",null,"IpAllowListEnabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether the enterprise has an IP allow list enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEntries",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentryconnection"},Object(c.b)("code",null,"IpAllowListEntryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP addresses that are allowed to access resources owned by the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#ipallowlistentryorder"},Object(c.b)("code",null,"IpAllowListEntryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for IP allow list entries returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUpdatingDefaultRepositoryPermission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the default repository permission is currently being updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUpdatingTwoFactorRequirement",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the two-factor authentication requirement is currently being enforced."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanChangeRepositoryVisibilitySetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether organization members with admin permissions on a repository can change repository visibility."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanChangeRepositoryVisibilitySettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided can change repository visibility setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanCreateInternalRepositoriesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members of organizations in the enterprise can create internal repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanCreatePrivateRepositoriesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members of organizations in the enterprise can create private repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanCreatePublicRepositoriesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members of organizations in the enterprise can create public repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanCreateRepositoriesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterprisememberscancreaterepositoriessettingvalue"},Object(c.b)("code",null,"EnterpriseMembersCanCreateRepositoriesSettingValue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members of organizations in the enterprise can create repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanCreateRepositoriesSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided repository creation setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#organizationmemberscancreaterepositoriessettingvalue"},Object(c.b)("code",null,"OrganizationMembersCanCreateRepositoriesSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanDeleteIssuesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members with admin permissions for repositories can delete issues."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanDeleteIssuesSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided members can delete issues setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanDeleteRepositoriesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members with admin permissions for repositories can delete or transfer repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanDeleteRepositoriesSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided members can delete repositories setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanInviteCollaboratorsSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members of organizations in the enterprise can invite outside collaborators."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanInviteCollaboratorsSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided members can invite collaborators setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanMakePurchasesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterprisememberscanmakepurchasessettingvalue"},Object(c.b)("code",null,"EnterpriseMembersCanMakePurchasesSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether members of this enterprise's organizations can purchase additional services for those organizations."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanUpdateProtectedBranchesSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members with admin permissions for repositories can update protected branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanUpdateProtectedBranchesSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided members can update protected branches setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanViewDependencyInsightsSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether members can view dependency insights."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersCanViewDependencyInsightsSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided members can view dependency insights setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"notificationDeliveryRestrictionEnabledSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#notificationrestrictionsettingvalue"},Object(c.b)("code",null,"NotificationRestrictionSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if email notification delivery for this enterprise is restricted to verified domains."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationProjectsSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether organization projects are enabled for organizations in this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationProjectsSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided organization projects setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"outsideCollaborators",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseoutsidecollaboratorconnection"},Object(c.b)("code",null,"EnterpriseOutsideCollaboratorConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of outside collaborators across the repositories in the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The login of one specific outside collaborator."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterprisememberorder"},Object(c.b)("code",null,"EnterpriseMemberOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for outside collaborators returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryvisibility"},Object(c.b)("code",null,"RepositoryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"Only return outside collaborators on repositories with this visibility."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pendingAdminInvitations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitationconnection"},Object(c.b)("code",null,"EnterpriseAdministratorInvitationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pending administrator invitations for the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterpriseadministratorinvitationorder"},Object(c.b)("code",null,"EnterpriseAdministratorInvitationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pending enterprise administrator invitations returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseadministratorrole"},Object(c.b)("code",null,"EnterpriseAdministratorRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role to filter by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pendingCollaboratorInvitations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinvitationconnection"},Object(c.b)("code",null,"RepositoryInvitationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pending collaborator invitations across the repositories in the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryinvitationorder"},Object(c.b)("code",null,"RepositoryInvitationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pending repository collaborator invitations returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pendingCollaborators",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisependingcollaboratorconnection"},Object(c.b)("code",null,"EnterprisePendingCollaboratorConnection!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: Repository invitations can now be associated with an email, not only an invitee. Use the `pendingCollaboratorInvitations` field instead. Removal on 2020-10-01 UTC."),Object(c.b)("p",null,"A list of pending collaborators across the repositories in the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryinvitationorder"},Object(c.b)("code",null,"RepositoryInvitationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pending repository collaborator invitations returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pendingMemberInvitations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisependingmemberinvitationconnection"},Object(c.b)("code",null,"EnterprisePendingMemberInvitationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pending member invitations for organizations in the enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryProjectsSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether repository projects are enabled in this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryProjectsSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided repository projects setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"samlIdentityProvider",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseidentityprovider"},Object(c.b)("code",null,"EnterpriseIdentityProvider"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML Identity Provider for the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"samlIdentityProviderSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the SAML single sign-on setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#identityproviderconfigurationstate"},Object(c.b)("code",null,"IdentityProviderConfigurationState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"supportEntitlements",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisememberconnection"},Object(c.b)("code",null,"EnterpriseMemberConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of members with a support entitlement."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterprisememberorder"},Object(c.b)("code",null,"EnterpriseMemberOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for support entitlement users returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamDiscussionsSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenableddisabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledDisabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether team discussions are enabled for organizations in this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamDiscussionsSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the provided team discussions setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"twoFactorRequiredSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseenabledsettingvalue"},Object(c.b)("code",null,"EnterpriseEnabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether the enterprise requires two-factor authentication for its organizations and users."))),Object(c.b)("tr",null,Object(c.b)("td",null,"twoFactorRequiredSettingOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations configured with the two-factor authentication setting value."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations with this setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value to find organizations for."))))))))),Object(c.b)("h2",{id:"enterprisependingcollaboratorconnection"},"EnterprisePendingCollaboratorConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisependingcollaboratoredge"},Object(c.b)("code",null,"[EnterprisePendingCollaboratorEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterprisependingcollaboratoredge"},"EnterprisePendingCollaboratorEdge"),Object(c.b)("p",null,"A user with an invitation to be a collaborator on a repository owned by an organization in an enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUnlicensed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: All pending collaborators consume a license Removal on 2021-01-01 UTC."),Object(c.b)("p",null,"Whether the invited collaborator does not have a license for the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriserepositoryinfoconnection"},Object(c.b)("code",null,"EnterpriseRepositoryInfoConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise organization repositories this user is a member of."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories."))))))))),Object(c.b)("h2",{id:"enterprisependingmemberinvitationconnection"},"EnterprisePendingMemberInvitationConnection"),Object(c.b)("p",null,"The connection type for OrganizationInvitation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprisependingmemberinvitationedge"},Object(c.b)("code",null,"[EnterprisePendingMemberInvitationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitation"},Object(c.b)("code",null,"[OrganizationInvitation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalUniqueUserCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of unique users in the connection."))))),Object(c.b)("h2",{id:"enterprisependingmemberinvitationedge"},"EnterprisePendingMemberInvitationEdge"),Object(c.b)("p",null,"An invitation to be a member in an enterprise organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUnlicensed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: All pending members consume a license Removal on 2020-07-01 UTC."),Object(c.b)("p",null,"Whether the invitation has a license for the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitation"},Object(c.b)("code",null,"OrganizationInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriserepositoryinfo"},"EnterpriseRepositoryInfo"),Object(c.b)("p",null,"A subset of repository information queryable from an enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isPrivate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is private or internal."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nameWithOwner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's name with owner."))))),Object(c.b)("h2",{id:"enterpriserepositoryinfoconnection"},"EnterpriseRepositoryInfoConnection"),Object(c.b)("p",null,"The connection type for EnterpriseRepositoryInfo."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriserepositoryinfoedge"},Object(c.b)("code",null,"[EnterpriseRepositoryInfoEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriserepositoryinfo"},Object(c.b)("code",null,"[EnterpriseRepositoryInfo]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriserepositoryinfoedge"},"EnterpriseRepositoryInfoEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriserepositoryinfo"},Object(c.b)("code",null,"EnterpriseRepositoryInfo"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriseserverinstallation"},"EnterpriseServerInstallation"),Object(c.b)("p",null,"An Enterprise Server installation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"customerName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The customer name to which the Enterprise Server installation belongs."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hostName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The host name of the Enterprise Server installation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isConnected",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userAccounts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountconnection"},Object(c.b)("code",null,"EnterpriseServerUserAccountConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"User accounts on this Enterprise Server installation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterpriseserveruseraccountorder"},Object(c.b)("code",null,"EnterpriseServerUserAccountOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for Enterprise Server user accounts returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"userAccountsUploads",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountsuploadconnection"},Object(c.b)("code",null,"EnterpriseServerUserAccountsUploadConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"User accounts uploads for the Enterprise Server installation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterpriseserveruseraccountsuploadorder"},Object(c.b)("code",null,"EnterpriseServerUserAccountsUploadOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for Enterprise Server user accounts uploads returned from the connection."))))))))),Object(c.b)("h2",{id:"enterpriseserverinstallationconnection"},"EnterpriseServerInstallationConnection"),Object(c.b)("p",null,"The connection type for EnterpriseServerInstallation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserverinstallationedge"},Object(c.b)("code",null,"[EnterpriseServerInstallationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserverinstallation"},Object(c.b)("code",null,"[EnterpriseServerInstallation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseserverinstallationedge"},"EnterpriseServerInstallationEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserverinstallation"},Object(c.b)("code",null,"EnterpriseServerInstallation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccount"},"EnterpriseServerUserAccount"),Object(c.b)("p",null,"A user account on an Enterprise Server installation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"emails",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountemailconnection"},Object(c.b)("code",null,"EnterpriseServerUserAccountEmailConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"User emails belonging to this user account."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#enterpriseserveruseraccountemailorder"},Object(c.b)("code",null,"EnterpriseServerUserAccountEmailOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for Enterprise Server user account emails returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseServerInstallation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserverinstallation"},Object(c.b)("code",null,"EnterpriseServerInstallation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Enterprise Server installation on which this user account exists."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isSiteAdmin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the user account is a site administrator on the Enterprise Server installation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The login of the user account on the Enterprise Server installation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"profileName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The profile name of the user account on the Enterprise Server installation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"remoteCreatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The date and time when the user account was created on the Enterprise Server installation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"remoteUserId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ID of the user account on the Enterprise Server installation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountconnection"},"EnterpriseServerUserAccountConnection"),Object(c.b)("p",null,"The connection type for EnterpriseServerUserAccount."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountedge"},Object(c.b)("code",null,"[EnterpriseServerUserAccountEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccount"},Object(c.b)("code",null,"[EnterpriseServerUserAccount]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountedge"},"EnterpriseServerUserAccountEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccount"},Object(c.b)("code",null,"EnterpriseServerUserAccount"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountemail"},"EnterpriseServerUserAccountEmail"),Object(c.b)("p",null,"An email belonging to a user account on an Enterprise Server installation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email address."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isPrimary",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether this is the primary email of the associated user account."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userAccount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccount"},Object(c.b)("code",null,"EnterpriseServerUserAccount!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user account to which the email belongs."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountemailconnection"},"EnterpriseServerUserAccountEmailConnection"),Object(c.b)("p",null,"The connection type for EnterpriseServerUserAccountEmail."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountemailedge"},Object(c.b)("code",null,"[EnterpriseServerUserAccountEmailEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountemail"},Object(c.b)("code",null,"[EnterpriseServerUserAccountEmail]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountemailedge"},"EnterpriseServerUserAccountEmailEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountemail"},Object(c.b)("code",null,"EnterpriseServerUserAccountEmail"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountsupload"},"EnterpriseServerUserAccountsUpload"),Object(c.b)("p",null,"A user accounts upload from an Enterprise Server installation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise to which this upload belongs."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseServerInstallation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserverinstallation"},Object(c.b)("code",null,"EnterpriseServerInstallation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Enterprise Server installation for which this upload was generated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the file uploaded."))),Object(c.b)("tr",null,Object(c.b)("td",null,"syncState",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseserveruseraccountsuploadsyncstate"},Object(c.b)("code",null,"EnterpriseServerUserAccountsUploadSyncState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The synchronization state of the upload"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountsuploadconnection"},"EnterpriseServerUserAccountsUploadConnection"),Object(c.b)("p",null,"The connection type for EnterpriseServerUserAccountsUpload."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountsuploadedge"},Object(c.b)("code",null,"[EnterpriseServerUserAccountsUploadEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountsupload"},Object(c.b)("code",null,"[EnterpriseServerUserAccountsUpload]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseserveruseraccountsuploadedge"},"EnterpriseServerUserAccountsUploadEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseserveruseraccountsupload"},Object(c.b)("code",null,"EnterpriseServerUserAccountsUpload"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"enterpriseuseraccount"},"EnterpriseUserAccount"),Object(c.b)("p",null,"An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},"Actor")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the enterprise user account's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise in which this user account exists."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An identifier for the enterprise user account, a login or email address"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the enterprise user account"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseorganizationmembershipconnection"},Object(c.b)("code",null,"EnterpriseOrganizationMembershipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of enterprise organizations this user is a member of."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#organizationorder"},Object(c.b)("code",null,"OrganizationOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for organizations returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#enterpriseuseraccountmembershiprole"},Object(c.b)("code",null,"EnterpriseUserAccountMembershipRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role of the user in the enterprise organization."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user within the enterprise."))))),Object(c.b)("h2",{id:"enterpriseuseraccountconnection"},"EnterpriseUserAccountConnection"),Object(c.b)("p",null,"The connection type for EnterpriseUserAccount."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseuseraccountedge"},Object(c.b)("code",null,"[EnterpriseUserAccountEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseuseraccount"},Object(c.b)("code",null,"[EnterpriseUserAccount]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"enterpriseuseraccountedge"},"EnterpriseUserAccountEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseuseraccount"},Object(c.b)("code",null,"EnterpriseUserAccount"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"externalidentity"},"ExternalIdentity"),Object(c.b)("p",null,"An external identity provisioned by SAML SSO or SCIM."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"guid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GUID for this identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationInvitation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitation"},Object(c.b)("code",null,"OrganizationInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"Organization invitation for this SCIM-provisioned external identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"samlIdentity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentitysamlattributes"},Object(c.b)("code",null,"ExternalIdentitySamlAttributes"))),Object(c.b)("td",null,Object(c.b)("p",null,"SAML Identity attributes"))),Object(c.b)("tr",null,Object(c.b)("td",null,"scimIdentity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentityscimattributes"},Object(c.b)("code",null,"ExternalIdentityScimAttributes"))),Object(c.b)("td",null,Object(c.b)("p",null,"SCIM Identity attributes"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member."))))),Object(c.b)("h2",{id:"externalidentityconnection"},"ExternalIdentityConnection"),Object(c.b)("p",null,"The connection type for ExternalIdentity."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentityedge"},Object(c.b)("code",null,"[ExternalIdentityEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentity"},Object(c.b)("code",null,"[ExternalIdentity]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"externalidentityedge"},"ExternalIdentityEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentity"},Object(c.b)("code",null,"ExternalIdentity"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"externalidentitysamlattributes"},"ExternalIdentitySamlAttributes"),Object(c.b)("p",null,"SAML attributes for the External Identity"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"emails",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#useremailmetadata"},Object(c.b)("code",null,"[UserEmailMetadata!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The emails associated with the SAML identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"familyName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Family name of the SAML identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"givenName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Given name of the SAML identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"groups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The groups linked to this identity in IDP"))),Object(c.b)("tr",null,Object(c.b)("td",null,"nameId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The NameID of the SAML identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"username",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The userName of the SAML identity"))))),Object(c.b)("h2",{id:"externalidentityscimattributes"},"ExternalIdentityScimAttributes"),Object(c.b)("p",null,"SCIM attributes for the External Identity"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"emails",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#useremailmetadata"},Object(c.b)("code",null,"[UserEmailMetadata!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The emails associated with the SCIM identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"familyName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Family name of the SCIM identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"givenName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Given name of the SCIM identity"))),Object(c.b)("tr",null,Object(c.b)("td",null,"groups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The groups linked to this identity in IDP"))),Object(c.b)("tr",null,Object(c.b)("td",null,"username",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The userName of the SCIM identity"))))),Object(c.b)("h2",{id:"followerconnection"},"FollowerConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#useredge"},Object(c.b)("code",null,"[UserEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"followingconnection"},"FollowingConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#useredge"},Object(c.b)("code",null,"[UserEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"followuserpayload"},"FollowUserPayload"),Object(c.b)("p",null,"Autogenerated return type of FollowUser"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user that was followed."))))),Object(c.b)("h2",{id:"fundinglink"},"FundingLink"),Object(c.b)("p",null,"A funding platform link for a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"platform",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#fundingplatform"},Object(c.b)("code",null,"FundingPlatform!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The funding platform this link is for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The configured URL for this funding link."))))),Object(c.b)("h2",{id:"generichovercardcontext"},"GenericHovercardContext"),Object(c.b)("p",null,"A generic hovercard context with a message and icon"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#hovercardcontext"},"HovercardContext"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string describing this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"octicon",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An octicon to accompany this context"))))),Object(c.b)("h2",{id:"gist"},"Gist"),Object(c.b)("p",null,"A Gist."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#starrable"},"Starrable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistcommentconnection"},Object(c.b)("code",null,"GistCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of comments associated with the gist"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"files",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistfile"},Object(c.b)("code",null,"[GistFile]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The files in this gist."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"limit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The maximum number of files to return."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The oid of the files to return"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"forks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistconnection"},Object(c.b)("code",null,"GistConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of forks associated with the gist"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#gistorder"},Object(c.b)("code",null,"GistOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for gists returned from the connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isFork",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the gist is a fork."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPublic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the gist is public or not."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryowner"},Object(c.b)("code",null,"RepositoryOwner"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pushedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the gist was last pushed to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTML path to this resource."))),Object(c.b)("tr",null,Object(c.b)("td",null,"stargazerCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a count of how many stargazers there are on this object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"stargazers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#stargazerconnection"},Object(c.b)("code",null,"StargazerConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who have starred this starrable."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#starorder"},Object(c.b)("code",null,"StarOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Gist."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasStarred",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a boolean indicating whether the viewing user has starred this starrable."))))),Object(c.b)("h2",{id:"gistcomment"},"GistComment"),Object(c.b)("p",null,"Represents a comment on an Gist."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#minimizable"},"Minimizable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the gist."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the comment body."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"gist",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gist"},Object(c.b)("code",null,"Gist!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The associated gist."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isMinimized",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not a comment has been minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"minimizedReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns why the comment was minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanMinimize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can minimize this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"gistcommentconnection"},"GistCommentConnection"),Object(c.b)("p",null,"The connection type for GistComment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistcommentedge"},Object(c.b)("code",null,"[GistCommentEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistcomment"},Object(c.b)("code",null,"[GistComment]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"gistcommentedge"},"GistCommentEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistcomment"},Object(c.b)("code",null,"GistComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"gistconnection"},"GistConnection"),Object(c.b)("p",null,"The connection type for Gist."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistedge"},Object(c.b)("code",null,"[GistEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gist"},Object(c.b)("code",null,"[Gist]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"gistedge"},"GistEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gist"},Object(c.b)("code",null,"Gist"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"gistfile"},"GistFile"),Object(c.b)("p",null,"A file in a gist."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"encodedName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The file name encoded to remove characters that are invalid in URL paths."))),Object(c.b)("tr",null,Object(c.b)("td",null,"encoding",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist file encoding."))),Object(c.b)("tr",null,Object(c.b)("td",null,"extension",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The file extension from the file name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isImage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if this file is an image."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isTruncated",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the file's contents were truncated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"language",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#language"},Object(c.b)("code",null,"Language"))),Object(c.b)("td",null,Object(c.b)("p",null,"The programming language this file is written in."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist file name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist file size in bytes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"text",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"UTF8 text data or null if the file is binary"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"truncate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Optionally truncate the returned file to this length."))))))))),Object(c.b)("h2",{id:"gitactor"},"GitActor"),Object(c.b)("p",null,"Represents an actor in a Git commit (ie. an author or committer)."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the author's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"date",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gittimestamp"},Object(c.b)("code",null,"GitTimestamp"))),Object(c.b)("td",null,Object(c.b)("p",null,"The timestamp of the Git action (authoring or committing)."))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email in the Git commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name in the Git commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub user corresponding to the email field. Null if no such user exists."))))),Object(c.b)("h2",{id:"gitactorconnection"},"GitActorConnection"),Object(c.b)("p",null,"The connection type for GitActor."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactoredge"},Object(c.b)("code",null,"[GitActorEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactor"},Object(c.b)("code",null,"[GitActor]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"gitactoredge"},"GitActorEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactor"},Object(c.b)("code",null,"GitActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"githubmetadata"},"GitHubMetadata"),Object(c.b)("p",null,"Represents information about the GitHub instance."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"gitHubServicesSha",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a String that's a SHA of ",Object(c.b)("code",null,"github-services")))),Object(c.b)("tr",null,Object(c.b)("td",null,"gitIpAddresses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"IP addresses that users connect to for git operations"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hookIpAddresses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"IP addresses that service hooks are sent from"))),Object(c.b)("tr",null,Object(c.b)("td",null,"importerIpAddresses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"IP addresses that the importer connects from"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPasswordAuthenticationVerifiable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not users are verified"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pagesIpAddresses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"IP addresses for GitHub Pages' A records"))))),Object(c.b)("h2",{id:"gpgsignature"},"GpgSignature"),Object(c.b)("p",null,"Represents a GPG signature on a Commit or Tag."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitsignature"},"GitSignature"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Email used to sign this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isValid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature is valid and verified by GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"keyId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Hex-encoded ID of the key that signed this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"payload",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Payload for GPG signing object. Raw ODB object without the signature header."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signature",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ASCII-armored signature header from object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"GitHub user corresponding to the email signing this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#gitsignaturestate"},Object(c.b)("code",null,"GitSignatureState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of this signature. ",Object(c.b)("code",null,"VALID")," if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."))),Object(c.b)("tr",null,Object(c.b)("td",null,"wasSignedByGitHub",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature was made with GitHub's signing key."))))),Object(c.b)("h2",{id:"headrefdeletedevent"},"HeadRefDeletedEvent"),Object(c.b)("p",null,"Represents a 'head_ref_deleted' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRef",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the Ref associated with the ",Object(c.b)("code",null,"head_ref_deleted")," event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the Ref associated with the ",Object(c.b)("code",null,"head_ref_deleted")," event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"headrefforcepushedevent"},"HeadRefForcePushedEvent"),Object(c.b)("p",null,"Represents a 'head_ref_force_pushed' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"afterCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the after commit SHA for the 'head_ref_force_pushed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"beforeCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the before commit SHA for the 'head_ref_force_pushed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the fully qualified ref name for the 'head_ref_force_pushed' event."))))),Object(c.b)("h2",{id:"headrefrestoredevent"},"HeadRefRestoredEvent"),Object(c.b)("p",null,"Represents a 'head_ref_restored' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))))),Object(c.b)("h2",{id:"hovercard"},"Hovercard"),Object(c.b)("p",null,"Detail needed to display a hovercard for a user"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#hovercardcontext"},Object(c.b)("code",null,"[HovercardContext!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Each of the contexts for this hovercard"))))),Object(c.b)("h2",{id:"importprojectpayload"},"ImportProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of ImportProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new Project!"))))),Object(c.b)("h2",{id:"inviteenterpriseadminpayload"},"InviteEnterpriseAdminPayload"),Object(c.b)("p",null,"Autogenerated return type of InviteEnterpriseAdmin"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"invitation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseadministratorinvitation"},Object(c.b)("code",null,"EnterpriseAdministratorInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The created enterprise administrator invitation."))))),Object(c.b)("h2",{id:"ipallowlistentry"},"IpAllowListEntry"),Object(c.b)("p",null,"An IP address or range of addresses that is allowed to access an owner's resources."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"allowListValue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A single IP address or range of IP addresses in CIDR notation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isActive",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the entry is currently active."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the IP allow list entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#ipallowlistowner"},Object(c.b)("code",null,"IpAllowListOwner!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The owner of the IP allow list entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"ipallowlistentryconnection"},"IpAllowListEntryConnection"),Object(c.b)("p",null,"The connection type for IpAllowListEntry."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentryedge"},Object(c.b)("code",null,"[IpAllowListEntryEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentry"},Object(c.b)("code",null,"[IpAllowListEntry]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"ipallowlistentryedge"},"IpAllowListEntryEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentry"},Object(c.b)("code",null,"IpAllowListEntry"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"issue"},"Issue"),Object(c.b)("p",null,"An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#assignable"},"Assignable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#closable"},"Closable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},"Labelable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#lockable"},"Lockable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},"Subscribable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"activeLockReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#lockreason"},Object(c.b)("code",null,"LockReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reason that the conversation was locked."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assignees",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Users assigned to this object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the body of the issue."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The http path for this issue body"))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the body of the issue rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The http URL for this issue body"))),Object(c.b)("tr",null,Object(c.b)("td",null,"closed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the object is closed (definition of closed may depend on type)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"closedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was closed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecommentconnection"},Object(c.b)("code",null,"IssueCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of comments associated with the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuecommentorder"},Object(c.b)("code",null,"IssueCommentOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issue comments returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hovercard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#hovercard"},Object(c.b)("code",null,"Hovercard!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The hovercard information for this issue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"includeNotificationContexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to include notification contexts"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPinned",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether or not this issue is currently pinned to the repository issues list"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isReadByViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is this issue read by the viewer"))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#labelconnection"},Object(c.b)("code",null,"LabelConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of labels associated with the object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#labelorder"},Object(c.b)("code",null,"LabelOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for labels returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"locked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the object is locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"milestone",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestone"},Object(c.b)("code",null,"Milestone"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the milestone associated with the issue."))),Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the issue number."))),Object(c.b)("tr",null,Object(c.b)("td",null,"participants",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Users that are participating in the Issue conversation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCards",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardconnection"},Object(c.b)("code",null,"ProjectCardConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of project cards associated with this issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"archivedStates",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectcardarchivedstate"},Object(c.b)("code",null,"[ProjectCardArchivedState]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of archived states to filter the cards by"))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this issue"))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#issuestate"},Object(c.b)("code",null,"IssueState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the state of the issue."))),Object(c.b)("tr",null,Object(c.b)("td",null,"timeline",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuetimelineconnection"},Object(c.b)("code",null,"IssueTimelineConnection!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: `timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC."),Object(c.b)("p",null,"A list of events, comments, commits, etc. associated with the issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"since",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering timeline events by a ",Object(c.b)("code",null,"since")," timestamp."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"timelineItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuetimelineitemsconnection"},Object(c.b)("code",null,"IssueTimelineItemsConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of events, comments, commits, etc. associated with the issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"itemTypes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#issuetimelineitemsitemtype"},Object(c.b)("code",null,"[IssueTimelineItemsItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter timeline items by type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"since",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter timeline items by a ",Object(c.b)("code",null,"since")," timestamp."))),Object(c.b)("tr",null,Object(c.b)("td",null,"skip",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Skips the first ",Object(c.b)("em",null,"n")," elements in the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the issue title."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this issue"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSubscribe",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerSubscription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))))),Object(c.b)("h2",{id:"issuecomment"},"IssueComment"),Object(c.b)("p",null,"Represents a comment on an Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#minimizable"},"Minimizable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body as Markdown."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isMinimized",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not a comment has been minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the issue associated with the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"minimizedReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns why the comment was minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the pull request associated with the comment, if this comment was made on a pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this issue comment"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this issue comment"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanMinimize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can minimize this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"issuecommentconnection"},"IssueCommentConnection"),Object(c.b)("p",null,"The connection type for IssueComment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecommentedge"},Object(c.b)("code",null,"[IssueCommentEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecomment"},Object(c.b)("code",null,"[IssueComment]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"issuecommentedge"},"IssueCommentEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecomment"},Object(c.b)("code",null,"IssueComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"issueconnection"},"IssueConnection"),Object(c.b)("p",null,"The connection type for Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issueedge"},Object(c.b)("code",null,"[IssueEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"[Issue]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"issuecontributionsbyrepository"},"IssueContributionsByRepository"),Object(c.b)("p",null,"This aggregates issues opened by a user within one repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdissuecontributionconnection"},Object(c.b)("code",null,"CreatedIssueContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue contributions."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository in which the issues were opened."))))),Object(c.b)("h2",{id:"issueedge"},"IssueEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"issuetemplate"},"IssueTemplate"),Object(c.b)("p",null,"A repository issue template."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"about",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The template purpose."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The suggested issue body."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The template name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The suggested issue title."))))),Object(c.b)("h2",{id:"issuetimelineconnection"},"IssueTimelineConnection"),Object(c.b)("p",null,"The connection type for IssueTimelineItem."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuetimelineitemedge"},Object(c.b)("code",null,"[IssueTimelineItemEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issuetimelineitem"},Object(c.b)("code",null,"[IssueTimelineItem]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"issuetimelineitemedge"},"IssueTimelineItemEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issuetimelineitem"},Object(c.b)("code",null,"IssueTimelineItem"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"issuetimelineitemsconnection"},"IssueTimelineItemsConnection"),Object(c.b)("p",null,"The connection type for IssueTimelineItems."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuetimelineitemsedge"},Object(c.b)("code",null,"[IssueTimelineItemsEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filteredCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the count of items after applying ",Object(c.b)("code",null,"before")," and ",Object(c.b)("code",null,"after")," filters."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issuetimelineitems"},Object(c.b)("code",null,"[IssueTimelineItems]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the count of items after applying ",Object(c.b)("code",null,"before"),"/",Object(c.b)("code",null,"after")," filters and ",Object(c.b)("code",null,"first"),"/",Object(c.b)("code",null,"last"),"/",Object(c.b)("code",null,"skip")," slicing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the timeline was last updated."))))),Object(c.b)("h2",{id:"issuetimelineitemsedge"},"IssueTimelineItemsEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issuetimelineitems"},Object(c.b)("code",null,"IssueTimelineItems"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"joinedgithubcontribution"},"JoinedGitHubContribution"),Object(c.b)("p",null,"Represents a user signing up for a GitHub account."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"label"},"Label"),Object(c.b)("p",null,"A label for categorizing Issues or Milestones with a given Repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"color",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the label color."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the label was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A brief description of this label."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isDefault",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether or not this is a default label."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issues",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issueconnection"},Object(c.b)("code",null,"IssueConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of issues associated with this label."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filterBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuefilters"},Object(c.b)("code",null,"IssueFilters"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filtering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#issuestate"},Object(c.b)("code",null,"[IssueState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the issues by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the label name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pull requests associated with this label."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The base ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"[PullRequestState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the pull requests by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this label."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this label."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the label was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this label."))))),Object(c.b)("h2",{id:"labelconnection"},"LabelConnection"),Object(c.b)("p",null,"The connection type for Label."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#labeledge"},Object(c.b)("code",null,"[LabelEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"[Label]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"labeledevent"},"LabeledEvent"),Object(c.b)("p",null,"Represents a 'labeled' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"label",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"Label!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the label associated with the 'labeled' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labelable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},Object(c.b)("code",null,"Labelable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the ",Object(c.b)("code",null,"Labelable")," associated with the event."))))),Object(c.b)("h2",{id:"labeledge"},"LabelEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"Label"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"language"},"Language"),Object(c.b)("p",null,"Represents a given language found in repositories."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"color",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The color defined for the current language."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the current language."))))),Object(c.b)("h2",{id:"languageconnection"},"LanguageConnection"),Object(c.b)("p",null,"A list of languages associated with the parent."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#languageedge"},Object(c.b)("code",null,"[LanguageEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#language"},Object(c.b)("code",null,"[Language]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalSize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The total size in bytes of files written in that language."))))),Object(c.b)("h2",{id:"languageedge"},"LanguageEdge"),Object(c.b)("p",null,"Represents the language of a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#language"},Object(c.b)("code",null,"Language!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of bytes of code written in the language."))))),Object(c.b)("h2",{id:"license"},"License"),Object(c.b)("p",null,"A repository's open source license"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The full text of the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"conditions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#licenserule"},Object(c.b)("code",null,"[LicenseRule]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The conditions set by the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A human-readable description of the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"featured",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the license should be featured"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hidden",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the license should be displayed in license pickers"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"implementation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Instructions on how to implement the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"key",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The lowercased SPDX ID of the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"limitations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#licenserule"},Object(c.b)("code",null,"[LicenseRule]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The limitations set by the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The license full name specified by ",Object(c.b)("a",{href:"https://spdx.org/licenses"},"https://spdx.org/licenses")))),Object(c.b)("tr",null,Object(c.b)("td",null,"nickname",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Customary short name if applicable (e.g, GPLv3)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"permissions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#licenserule"},Object(c.b)("code",null,"[LicenseRule]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permissions set by the license"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pseudoLicense",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the license is a pseudo-license placeholder (e.g., other, no-license)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"spdxId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Short identifier specified by ",Object(c.b)("a",{href:"https://spdx.org/licenses"},"https://spdx.org/licenses")))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the license on ",Object(c.b)("a",{href:"https://choosealicense.com"},"https://choosealicense.com")))))),Object(c.b)("h2",{id:"licenserule"},"LicenseRule"),Object(c.b)("p",null,"Describes a License's conditions, permissions, and limitations"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A description of the rule"))),Object(c.b)("tr",null,Object(c.b)("td",null,"key",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The machine-readable rule key"))),Object(c.b)("tr",null,Object(c.b)("td",null,"label",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The human-readable rule label"))))),Object(c.b)("h2",{id:"linkrepositorytoprojectpayload"},"LinkRepositoryToProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of LinkRepositoryToProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The linked Project."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The linked Repository."))))),Object(c.b)("h2",{id:"lockedevent"},"LockedEvent"),Object(c.b)("p",null,"Represents a 'locked' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"lockReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#lockreason"},Object(c.b)("code",null,"LockReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reason that the conversation was locked (optional)."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lockable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#lockable"},Object(c.b)("code",null,"Lockable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object that was locked."))))),Object(c.b)("h2",{id:"locklockablepayload"},"LockLockablePayload"),Object(c.b)("p",null,"Autogenerated return type of LockLockable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lockedRecord",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#lockable"},Object(c.b)("code",null,"Lockable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item that was locked."))))),Object(c.b)("h2",{id:"mannequin"},"Mannequin"),Object(c.b)("p",null,"A placeholder user for attribution of imported data on GitHub."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},"Actor")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the GitHub App's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The mannequin's email on the source instance."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTML path to this resource."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL to this resource."))))),Object(c.b)("h2",{id:"markedasduplicateevent"},"MarkedAsDuplicateEvent"),Object(c.b)("p",null,"Represents a 'marked_as_duplicate' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"canonical",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issueorpullrequest"},Object(c.b)("code",null,"IssueOrPullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The authoritative issue or pull request which has been duplicated by another."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"duplicate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issueorpullrequest"},Object(c.b)("code",null,"IssueOrPullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue or pull request which has been marked as a duplicate of another."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Canonical and duplicate belong to different repositories."))))),Object(c.b)("h2",{id:"marketplacecategory"},"MarketplaceCategory"),Object(c.b)("p",null,"A public description of a Marketplace category."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The category's description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"howItWorks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The technical description of how apps listed in this category work with GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The category's name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"primaryListingCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many Marketplace listings have this as their primary category."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Marketplace category."))),Object(c.b)("tr",null,Object(c.b)("td",null,"secondaryListingCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many Marketplace listings have this as their secondary category."))),Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The short name of the category used in its URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Marketplace category."))))),Object(c.b)("h2",{id:"marketplacelisting"},"MarketplaceListing"),Object(c.b)("p",null,"A listing in the GitHub integration marketplace."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"app",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#app"},Object(c.b)("code",null,"App"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub App this listing represents."))),Object(c.b)("tr",null,Object(c.b)("td",null,"companyUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the listing owner's company site."))),Object(c.b)("tr",null,Object(c.b)("td",null,"configurationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for configuring access to the listing's integration or OAuth app"))),Object(c.b)("tr",null,Object(c.b)("td",null,"configurationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for configuring access to the listing's integration or OAuth app"))),Object(c.b)("tr",null,Object(c.b)("td",null,"documentationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the listing's documentation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"extendedDescription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's detailed description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"extendedDescriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's detailed description rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fullDescription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's introductory description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fullDescriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's introductory description rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasPublishedFreeTrialPlans",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Does this listing have any plans with a free trial?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasTermsOfService",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Does this listing have a terms of service link?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasVerifiedOwner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the creator of the app is a verified org"))),Object(c.b)("tr",null,Object(c.b)("td",null,"howItWorks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A technical description of how this app works with GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"howItWorksHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's technical description rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"installationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to install the product to the viewer's account or organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"installedForViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing's app has been installed for the current viewer"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isArchived",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing has been removed from the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isDraft",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPaid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the product this listing represents is available as part of a paid plan."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPublic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing has been approved for display in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isRejected",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing has been rejected by GitHub for display in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUnverified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing has been approved for unverified display in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUnverifiedPending",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerificationPendingFromDraft",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerificationPendingFromUnverified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this listing has been approved for verified display in the Marketplace."))),Object(c.b)("tr",null,Object(c.b)("td",null,"logoBackgroundColor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The hex color code, without the leading '#', for the logo background."))),Object(c.b)("tr",null,Object(c.b)("td",null,"logoUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL for the listing's logo image."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size in pixels of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's full name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"normalizedShortDescription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's very short description without a trailing period or ampersands."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pricingUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the listing's detailed pricing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"primaryCategory",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#marketplacecategory"},Object(c.b)("code",null,"MarketplaceCategory!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The category that best describes the listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacyPolicyUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"screenshotUrls",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URLs for the listing's screenshots."))),Object(c.b)("tr",null,Object(c.b)("td",null,"secondaryCategory",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#marketplacecategory"},Object(c.b)("code",null,"MarketplaceCategory"))),Object(c.b)("td",null,Object(c.b)("p",null,"An alternate category that describes the listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"shortDescription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's very short description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The short name of the listing used in its URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"statusUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the listing's status page."))),Object(c.b)("tr",null,Object(c.b)("td",null,"supportEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"An email address for support for this listing's app."))),Object(c.b)("tr",null,Object(c.b)("td",null,"supportUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"termsOfServiceUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to the listing's terms of service."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanAddPlans",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer add plans for this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanApprove",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer approve this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelist",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer delist this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer edit this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanEditCategories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer edit the primary and secondary category of this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanEditPlans",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer edit the plans for this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanRedraft",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer return this Marketplace listing to draft state so it becomes editable again."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer reject this Marketplace listing by returning it to an editable draft state or rejecting it entirely."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanRequestApproval",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer request this listing be reviewed for display in the Marketplace as verified."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasPurchased",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the current user has an active subscription to this Marketplace listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasPurchasedForAllOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the current user has purchased a subscription to this Marketplace listing for all of the organizations the user owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerIsListingAdmin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Does the current viewer role allow them to administer this Marketplace listing."))))),Object(c.b)("h2",{id:"marketplacelistingconnection"},"MarketplaceListingConnection"),Object(c.b)("p",null,"Look up Marketplace Listings"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#marketplacelistingedge"},Object(c.b)("code",null,"[MarketplaceListingEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#marketplacelisting"},Object(c.b)("code",null,"[MarketplaceListing]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"marketplacelistingedge"},"MarketplaceListingEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#marketplacelisting"},Object(c.b)("code",null,"MarketplaceListing"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"markfileasviewedpayload"},"MarkFileAsViewedPayload"),Object(c.b)("p",null,"Autogenerated return type of MarkFileAsViewed"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated pull request."))))),Object(c.b)("h2",{id:"markpullrequestreadyforreviewpayload"},"MarkPullRequestReadyForReviewPayload"),Object(c.b)("p",null,"Autogenerated return type of MarkPullRequestReadyForReview"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that is ready for review."))))),Object(c.b)("h2",{id:"memberscandeletereposclearauditentry"},"MembersCanDeleteReposClearAuditEntry"),Object(c.b)("p",null,"Audit log entry for a members_can_delete_repos.clear event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"memberscandeletereposdisableauditentry"},"MembersCanDeleteReposDisableAuditEntry"),Object(c.b)("p",null,"Audit log entry for a members_can_delete_repos.disable event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"memberscandeletereposenableauditentry"},"MembersCanDeleteReposEnableAuditEntry"),Object(c.b)("p",null,"Audit log entry for a members_can_delete_repos.enable event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"mentionedevent"},"MentionedEvent"),Object(c.b)("p",null,"Represents a 'mentioned' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)))),Object(c.b)("h2",{id:"mergebranchpayload"},"MergeBranchPayload"),Object(c.b)("p",null,"Autogenerated return type of MergeBranch"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The resulting merge Commit."))))),Object(c.b)("h2",{id:"mergedevent"},"MergedEvent"),Object(c.b)("p",null,"Represents a 'merged' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit associated with the ",Object(c.b)("code",null,"merge")," event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeRef",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the Ref associated with the ",Object(c.b)("code",null,"merge")," event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the Ref associated with the ",Object(c.b)("code",null,"merge")," event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this merged event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this merged event."))))),Object(c.b)("h2",{id:"mergepullrequestpayload"},"MergePullRequestPayload"),Object(c.b)("p",null,"Autogenerated return type of MergePullRequest"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that was merged."))))),Object(c.b)("h2",{id:"milestone"},"Milestone"),Object(c.b)("p",null,"Represents a Milestone object on a given repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#closable"},"Closable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"closed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the object is closed (definition of closed may depend on type)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"closedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was closed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who created the milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the description of the milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dueOn",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the due date of the milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issues",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issueconnection"},Object(c.b)("code",null,"IssueConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of issues associated with the milestone."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filterBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuefilters"},Object(c.b)("code",null,"IssueFilters"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filtering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#issuestate"},Object(c.b)("code",null,"[IssueState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the issues by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the number of the milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"progressPercentage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the percentage complete for the milestone"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pull requests associated with the milestone."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The base ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"[PullRequestState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the pull requests by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this milestone"))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#milestonestate"},Object(c.b)("code",null,"MilestoneState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the state of the milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the title of the milestone."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this milestone"))))),Object(c.b)("h2",{id:"milestoneconnection"},"MilestoneConnection"),Object(c.b)("p",null,"The connection type for Milestone."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestoneedge"},Object(c.b)("code",null,"[MilestoneEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestone"},Object(c.b)("code",null,"[Milestone]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"milestonedevent"},"MilestonedEvent"),Object(c.b)("p",null,"Represents a 'milestoned' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"milestoneTitle",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the milestone title associated with the 'milestoned' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#milestoneitem"},Object(c.b)("code",null,"MilestoneItem!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object referenced by event."))))),Object(c.b)("h2",{id:"milestoneedge"},"MilestoneEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestone"},Object(c.b)("code",null,"Milestone"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"minimizecommentpayload"},"MinimizeCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of MinimizeComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"minimizedComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#minimizable"},Object(c.b)("code",null,"Minimizable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comment that was minimized."))))),Object(c.b)("h2",{id:"movedcolumnsinprojectevent"},"MovedColumnsInProjectEvent"),Object(c.b)("p",null,"Represents a 'moved_columns_in_project' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"previousProjectColumnName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Column name the issue or pull request was moved from."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"ProjectCard"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project card referenced by this project event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectColumnName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Column name the issue or pull request was moved to."))))),Object(c.b)("h2",{id:"moveprojectcardpayload"},"MoveProjectCardPayload"),Object(c.b)("p",null,"Autogenerated return type of MoveProjectCard"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cardEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardedge"},Object(c.b)("code",null,"ProjectCardEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new edge of the moved card."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"moveprojectcolumnpayload"},"MoveProjectColumnPayload"),Object(c.b)("p",null,"Autogenerated return type of MoveProjectColumn"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"columnEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumnedge"},Object(c.b)("code",null,"ProjectColumnEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new edge of the moved column."))))),Object(c.b)("h2",{id:"oauthapplicationcreateauditentry"},"OauthApplicationCreateAuditEntry"),Object(c.b)("p",null,"Audit log entry for a oauth_application.create event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#oauthapplicationauditentrydata"},"OauthApplicationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"applicationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The application URL of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"callbackUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The callback URL of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"rateLimit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The rate limit of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#oauthapplicationcreateauditentrystate"},Object(c.b)("code",null,"OauthApplicationCreateAuditEntryState"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgaddbillingmanagerauditentry"},"OrgAddBillingManagerAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.add_billing_manager"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"invitationEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email address used to invite a billing manager for the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgaddmemberauditentry"},"OrgAddMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.add_member"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgaddmemberauditentrypermission"},Object(c.b)("code",null,"OrgAddMemberAuditEntryPermission"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permission level of the member added to the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"organization"},"Organization"),Object(c.b)("p",null,"An account on GitHub, with one or more owners, that has repositories, members and teams."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},"Actor")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#memberstatusable"},"MemberStatusable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#packageowner"},"PackageOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#profileowner"},"ProfileOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#projectowner"},"ProjectOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryowner"},"RepositoryOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#sponsorable"},"Sponsorable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"anyPinnableItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if this repository owner has any items that can be pinned to their profile."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"type",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"PinnableItemType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter to only a particular kind of pinnable item."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"auditLog",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationauditentryconnection"},Object(c.b)("code",null,"OrganizationAuditEntryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Audit log entries of the organization"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#auditlogorder"},Object(c.b)("code",null,"AuditLogOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for the returned audit log entries."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The query string to filter audit entries"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the organization's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's public profile description."))),Object(c.b)("tr",null,Object(c.b)("td",null,"descriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's public profile description rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"domains",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomainconnection"},Object(c.b)("code",null,"VerifiableDomainConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of domains owned by the organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter by if the domain is verified."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#verifiabledomainorder"},Object(c.b)("code",null,"VerifiableDomainOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for verifiable domains returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's public email."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasSponsorsListing",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if this user/organization has a GitHub Sponsors listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"interactionAbility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinteractionability"},Object(c.b)("code",null,"RepositoryInteractionAbility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The interaction ability settings for this organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEnabledSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#ipallowlistenabledsettingvalue"},Object(c.b)("code",null,"IpAllowListEnabledSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The setting value for whether the organization has an IP allow list enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEntries",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentryconnection"},Object(c.b)("code",null,"IpAllowListEntryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP addresses that are allowed to access resources owned by the organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#ipallowlistentryorder"},Object(c.b)("code",null,"IpAllowListEntryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for IP allow list entries returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSponsoredBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the given account is sponsoring this user/organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"accountLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The target account's login."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSponsoringViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the viewer is sponsored by this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the organization has verified its profile email and website."))),Object(c.b)("tr",null,Object(c.b)("td",null,"itemShowcase",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#profileitemshowcase"},Object(c.b)("code",null,"ProfileItemShowcase!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"location",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's public profile location."))),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's login name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"memberStatuses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatusconnection"},Object(c.b)("code",null,"UserStatusConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Get the status messages members of this entity have set that are either public or visible only to the organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#userstatusorder"},Object(c.b)("code",null,"UserStatusOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for user statuses returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersWithRole",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationmemberconnection"},Object(c.b)("code",null,"OrganizationMemberConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who are members of this organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's public profile name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"newTeamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path creating a new team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"newTeamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL creating a new team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"notificationDeliveryRestrictionEnabledSetting",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#notificationrestrictionsettingvalue"},Object(c.b)("code",null,"NotificationRestrictionSettingValue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if email notification delivery for this organization is restricted to verified domains."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationBillingEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The billing email for the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packages",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageconnection"},Object(c.b)("code",null,"PackageConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of packages under the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"names",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages by their names."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#packageorder"},Object(c.b)("code",null,"PackageOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering of the returned packages."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#packagetype"},Object(c.b)("code",null,"PackageType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter registry package by type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages in a repository by ID."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pendingMembers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who have been invited to join this organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnableItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories and gists this profile owner can pin to their profile."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"types",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"[PinnableItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter the types of pinnable items that are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnedItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories and gists this profile owner has pinned to their profile"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"types",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"[PinnableItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter the types of pinned items that are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnedItemsRemaining",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns how many more items this profile owner can pin to their profile."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find project by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project number to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projects",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectconnection"},Object(c.b)("code",null,"ProjectConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of projects under the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#projectorder"},Object(c.b)("code",null,"ProjectOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for projects returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"search",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Query to search projects by, currently only searching by name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectstate"},Object(c.b)("code",null,"[ProjectState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the projects by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path listing organization's projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL listing organization's projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories that the user owns."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"affiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isFork",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they are forks of another repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLocked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they have been locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"ownerAffiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryprivacy"},Object(c.b)("code",null,"RepositoryPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to privacy"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find Repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Name of Repository to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresTwoFactorAuthentication",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"samlIdentityProvider",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationidentityprovider"},Object(c.b)("code",null,"OrganizationIdentityProvider"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization's SAML identity providers"))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorsListing",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorslisting"},Object(c.b)("code",null,"SponsorsListing"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub Sponsors listing for this user or organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorshipForViewerAsSponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorship"},Object(c.b)("code",null,"Sponsorship"))),Object(c.b)("td",null,Object(c.b)("p",null,"The viewer's sponsorship of this entity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorshipsAsMaintainer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This object's sponsorships as the maintainer."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"includePrivate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to include private sponsorships in the result set"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorshipsAsSponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This object's sponsorships as the sponsor."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find an organization's team by its slug."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name or slug of the team to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"teams",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamconnection"},Object(c.b)("code",null,"TeamConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of teams in this organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ldapMapped",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If true, filters teams that are mapped to an LDAP Group (Enterprise only)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#teamorder"},Object(c.b)("code",null,"TeamOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for teams returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teamprivacy"},Object(c.b)("code",null,"TeamPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters teams according to privacy"))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters teams with query on team name and team slug"))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teamrole"},Object(c.b)("code",null,"TeamRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters teams according to whether the viewer is an admin or member on team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"rootTeamsOnly",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If true, restrict to only root teams"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogins",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"User logins to filter by"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path listing organization's teams"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL listing organization's teams"))),Object(c.b)("tr",null,Object(c.b)("td",null,"twitterUsername",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's Twitter username."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanAdminister",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Organization is adminable by the viewer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanChangePinnedItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the viewer pin repositories and gists to the profile?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanCreateProjects",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer create new projects on this owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanCreateRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Viewer can create repositories on this organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanCreateTeams",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Viewer can create teams on this organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer is able to sponsor this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerIsAMember",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Viewer is an active member of this organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerIsSponsoring",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the viewer is sponsoring this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"websiteUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization's public profile URL."))))),Object(c.b)("h2",{id:"organizationauditentryconnection"},"OrganizationAuditEntryConnection"),Object(c.b)("p",null,"The connection type for OrganizationAuditEntry."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationauditentryedge"},Object(c.b)("code",null,"[OrganizationAuditEntryEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#organizationauditentry"},Object(c.b)("code",null,"[OrganizationAuditEntry]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"organizationauditentryedge"},"OrganizationAuditEntryEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#organizationauditentry"},Object(c.b)("code",null,"OrganizationAuditEntry"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"organizationconnection"},"OrganizationConnection"),Object(c.b)("p",null,"The connection type for Organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationedge"},Object(c.b)("code",null,"[OrganizationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"[Organization]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"organizationedge"},"OrganizationEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"organizationidentityprovider"},"OrganizationIdentityProvider"),Object(c.b)("p",null,"An Identity Provider configured to provision SAML and SCIM identities for Organizations"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"digestMethod",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The digest algorithm used to sign SAML requests for the Identity Provider."))),Object(c.b)("tr",null,Object(c.b)("td",null,"externalIdentities",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#externalidentityconnection"},Object(c.b)("code",null,"ExternalIdentityConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"External Identities provisioned by this Identity Provider"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"idpCertificate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#x509certificate"},Object(c.b)("code",null,"X509Certificate"))),Object(c.b)("td",null,Object(c.b)("p",null,"The x509 certificate used by the Identity Provider to sign assertions and responses."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issuer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Issuer Entity ID for the SAML Identity Provider"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"Organization this Identity Provider belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"signatureMethod",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The signature algorithm used to sign SAML requests for the Identity Provider."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ssoUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL endpoint for the Identity Provider's SAML SSO."))))),Object(c.b)("h2",{id:"organizationinvitation"},"OrganizationInvitation"),Object(c.b)("p",null,"An Invitation for a user to an organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email address of the user invited to the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"invitationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#organizationinvitationtype"},Object(c.b)("code",null,"OrganizationInvitationType!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The type of invitation that was sent (e.g. email, user)."))),Object(c.b)("tr",null,Object(c.b)("td",null,"invitee",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who was invited to the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"inviter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who created the invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization the invite is for"))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#organizationinvitationrole"},Object(c.b)("code",null,"OrganizationInvitationRole!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's pending role in the organization (e.g. member, owner)."))))),Object(c.b)("h2",{id:"organizationinvitationconnection"},"OrganizationInvitationConnection"),Object(c.b)("p",null,"The connection type for OrganizationInvitation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitationedge"},Object(c.b)("code",null,"[OrganizationInvitationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitation"},Object(c.b)("code",null,"[OrganizationInvitation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"organizationinvitationedge"},"OrganizationInvitationEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitation"},Object(c.b)("code",null,"OrganizationInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"organizationmemberconnection"},"OrganizationMemberConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationmemberedge"},Object(c.b)("code",null,"[OrganizationMemberEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"organizationmemberedge"},"OrganizationMemberEdge"),Object(c.b)("p",null,"Represents a user within an organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasTwoFactorEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#organizationmemberrole"},Object(c.b)("code",null,"OrganizationMemberRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role this user has in the organization."))))),Object(c.b)("h2",{id:"organizationshovercardcontext"},"OrganizationsHovercardContext"),Object(c.b)("p",null,"An organization list hovercard context"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#hovercardcontext"},"HovercardContext"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string describing this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"octicon",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An octicon to accompany this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"relevantOrganizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Organizations this user is a member of that are relevant"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalOrganizationCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The total number of organizations this user is in"))))),Object(c.b)("h2",{id:"organizationteamshovercardcontext"},"OrganizationTeamsHovercardContext"),Object(c.b)("p",null,"An organization teams hovercard context"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#hovercardcontext"},"HovercardContext"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string describing this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"octicon",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An octicon to accompany this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"relevantTeams",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamconnection"},Object(c.b)("code",null,"TeamConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Teams in this organization the user is a member of that are relevant"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path for the full team list for this user"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL for the full team list for this user"))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalTeamCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The total number of teams the user is on in the organization"))))),Object(c.b)("h2",{id:"orgblockuserauditentry"},"OrgBlockUserAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.block_user"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUser",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUserName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUserResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUserUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgconfigdisablecollaboratorsonlyauditentry"},"OrgConfigDisableCollaboratorsOnlyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.config.disable_collaborators_only event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgconfigenablecollaboratorsonlyauditentry"},"OrgConfigEnableCollaboratorsOnlyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.config.enable_collaborators_only event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgcreateauditentry"},"OrgCreateAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.create event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"billingPlan",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgcreateauditentrybillingplan"},Object(c.b)("code",null,"OrgCreateAuditEntryBillingPlan"))),Object(c.b)("td",null,Object(c.b)("p",null,"The billing plan for the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgdisableoauthapprestrictionsauditentry"},"OrgDisableOauthAppRestrictionsAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.disable_oauth_app_restrictions event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgdisablesamlauditentry"},"OrgDisableSamlAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.disable_saml event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"digestMethodUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's digest algorithm URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issuerUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's issuer URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"signatureMethodUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's signature algorithm URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"singleSignOnUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's single sign-on URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgdisabletwofactorrequirementauditentry"},"OrgDisableTwoFactorRequirementAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.disable_two_factor_requirement event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgenableoauthapprestrictionsauditentry"},"OrgEnableOauthAppRestrictionsAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.enable_oauth_app_restrictions event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgenablesamlauditentry"},"OrgEnableSamlAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.enable_saml event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"digestMethodUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's digest algorithm URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issuerUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's issuer URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"signatureMethodUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's signature algorithm URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"singleSignOnUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SAML provider's single sign-on URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgenabletwofactorrequirementauditentry"},"OrgEnableTwoFactorRequirementAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.enable_two_factor_requirement event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orginvitememberauditentry"},"OrgInviteMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.invite_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email address of the organization invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationInvitation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitation"},Object(c.b)("code",null,"OrganizationInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orginvitetobusinessauditentry"},"OrgInviteToBusinessAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.invite_to_business event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgoauthappaccessapprovedauditentry"},"OrgOauthAppAccessApprovedAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.oauth_app_access_approved event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#oauthapplicationauditentrydata"},"OauthApplicationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgoauthappaccessdeniedauditentry"},"OrgOauthAppAccessDeniedAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.oauth_app_access_denied event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#oauthapplicationauditentrydata"},"OauthApplicationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgoauthappaccessrequestedauditentry"},"OrgOauthAppAccessRequestedAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.oauth_app_access_requested event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#oauthapplicationauditentrydata"},"OauthApplicationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oauthApplicationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgremovebillingmanagerauditentry"},"OrgRemoveBillingManagerAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.remove_billing_manager event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgremovebillingmanagerauditentryreason"},Object(c.b)("code",null,"OrgRemoveBillingManagerAuditEntryReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason for the billing manager being removed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgremovememberauditentry"},"OrgRemoveMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.remove_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"membershipTypes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgremovememberauditentrymembershiptype"},Object(c.b)("code",null,"[OrgRemoveMemberAuditEntryMembershipType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The types of membership the member has with the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgremovememberauditentryreason"},Object(c.b)("code",null,"OrgRemoveMemberAuditEntryReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason for the member being removed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgremoveoutsidecollaboratorauditentry"},"OrgRemoveOutsideCollaboratorAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.remove_outside_collaborator event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"membershipTypes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgremoveoutsidecollaboratorauditentrymembershiptype"},Object(c.b)("code",null,"[OrgRemoveOutsideCollaboratorAuditEntryMembershipType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"The types of membership the outside collaborator has with the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgremoveoutsidecollaboratorauditentryreason"},Object(c.b)("code",null,"OrgRemoveOutsideCollaboratorAuditEntryReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason for the outside collaborator being removed from the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgrestorememberauditentry"},"OrgRestoreMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.restore_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredCustomEmailRoutingsCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of custom email routings for the restored member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredIssueAssignmentsCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of issue assignments for the restored member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredMemberships",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#orgrestorememberauditentrymembership"},Object(c.b)("code",null,"[OrgRestoreMemberAuditEntryMembership!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Restored organization membership objects."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredMembershipsCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of restored memberships."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredRepositoriesCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of repositories of the restored member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredRepositoryStarsCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of starred repositories for the restored member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"restoredRepositoryWatchesCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of watched repositories for the restored member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgrestoremembermembershiporganizationauditentrydata"},"OrgRestoreMemberMembershipOrganizationAuditEntryData"),Object(c.b)("p",null,"Metadata for an organization membership for org.restore_member actions"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))))),Object(c.b)("h2",{id:"orgrestoremembermembershiprepositoryauditentrydata"},"OrgRestoreMemberMembershipRepositoryAuditEntryData"),Object(c.b)("p",null,"Metadata for a repository membership for org.restore_member actions"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))))),Object(c.b)("h2",{id:"orgrestoremembermembershipteamauditentrydata"},"OrgRestoreMemberMembershipTeamAuditEntryData"),Object(c.b)("p",null,"Metadata for a team membership for org.restore_member actions"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#teamauditentrydata"},"TeamAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))))),Object(c.b)("h2",{id:"orgunblockuserauditentry"},"OrgUnblockUserAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.unblock_user"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUser",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user being unblocked by the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUserName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUserResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockedUserUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the blocked user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgupdatedefaultrepositorypermissionauditentry"},"OrgUpdateDefaultRepositoryPermissionAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.update_default_repository_permission"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgupdatedefaultrepositorypermissionauditentrypermission"},Object(c.b)("code",null,"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new default repository permission level for the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permissionWas",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgupdatedefaultrepositorypermissionauditentrypermission"},Object(c.b)("code",null,"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission"))),Object(c.b)("td",null,Object(c.b)("p",null,"The former default repository permission level for the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgupdatememberauditentry"},"OrgUpdateMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.update_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgupdatememberauditentrypermission"},Object(c.b)("code",null,"OrgUpdateMemberAuditEntryPermission"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new member permission level for the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permissionWas",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgupdatememberauditentrypermission"},Object(c.b)("code",null,"OrgUpdateMemberAuditEntryPermission"))),Object(c.b)("td",null,Object(c.b)("p",null,"The former member permission level for the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"orgupdatememberrepositorycreationpermissionauditentry"},"OrgUpdateMemberRepositoryCreationPermissionAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.update_member_repository_creation_permission event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"canCreateRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can members create repositories in the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orgupdatememberrepositorycreationpermissionauditentryvisibility"},Object(c.b)("code",null,"OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permission for visibility level of repositories for this organization."))))),Object(c.b)("h2",{id:"orgupdatememberrepositoryinvitationpermissionauditentry"},"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry"),Object(c.b)("p",null,"Audit log entry for a org.update_member_repository_invitation_permission event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"canInviteOutsideCollaboratorsToRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can outside collaborators be invited to repositories in the organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"package"},"Package"),Object(c.b)("p",null,"Information for an uploaded package."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"latestVersion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversion"},Object(c.b)("code",null,"PackageVersion"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find the latest version for the package."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the package."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#packagetype"},Object(c.b)("code",null,"PackageType!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the type of the package."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository this package belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"statistics",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packagestatistics"},Object(c.b)("code",null,"PackageStatistics"))),Object(c.b)("td",null,Object(c.b)("p",null,"Statistics about package activity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"version",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversion"},Object(c.b)("code",null,"PackageVersion"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find package version by version string."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"version",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The package version."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"versions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversionconnection"},Object(c.b)("code",null,"PackageVersionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"list of versions for this package"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#packageversionorder"},Object(c.b)("code",null,"PackageVersionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering of the returned packages."))))))))),Object(c.b)("h2",{id:"packageconnection"},"PackageConnection"),Object(c.b)("p",null,"The connection type for Package."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageedge"},Object(c.b)("code",null,"[PackageEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#package"},Object(c.b)("code",null,"[Package]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"packageedge"},"PackageEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#package"},Object(c.b)("code",null,"Package"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"packagefile"},"PackageFile"),Object(c.b)("p",null,"A file in a package version."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"md5",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"MD5 hash of the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Name of the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageVersion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversion"},Object(c.b)("code",null,"PackageVersion"))),Object(c.b)("td",null,Object(c.b)("p",null,"The package version this file belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sha1",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"SHA1 hash of the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sha256",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"SHA256 hash of the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Size of the file in bytes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"URL to download the asset."))))),Object(c.b)("h2",{id:"packagefileconnection"},"PackageFileConnection"),Object(c.b)("p",null,"The connection type for PackageFile."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packagefileedge"},Object(c.b)("code",null,"[PackageFileEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packagefile"},Object(c.b)("code",null,"[PackageFile]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"packagefileedge"},"PackageFileEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packagefile"},Object(c.b)("code",null,"PackageFile"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"packagestatistics"},"PackageStatistics"),Object(c.b)("p",null,"Represents a object that contains package activity statistics such as downloads."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"downloadsTotalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Number of times the package was downloaded since it was created."))))),Object(c.b)("h2",{id:"packagetag"},"PackageTag"),Object(c.b)("p",null,"A version tag contains the mapping between a tag name and a version."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the tag name of the version."))),Object(c.b)("tr",null,Object(c.b)("td",null,"version",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversion"},Object(c.b)("code",null,"PackageVersion"))),Object(c.b)("td",null,Object(c.b)("p",null,"Version that the tag is associated with."))))),Object(c.b)("h2",{id:"packageversion"},"PackageVersion"),Object(c.b)("p",null,"Information about a specific package version."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"files",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packagefileconnection"},Object(c.b)("code",null,"PackageFileConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of files associated with this package version"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#packagefileorder"},Object(c.b)("code",null,"PackageFileOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering of the returned package files."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"package",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#package"},Object(c.b)("code",null,"Package"))),Object(c.b)("td",null,Object(c.b)("p",null,"The package associated with this version."))),Object(c.b)("tr",null,Object(c.b)("td",null,"platform",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The platform this version was built for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"preRelease",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this version is a pre-release."))),Object(c.b)("tr",null,Object(c.b)("td",null,"readme",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The README of this package version."))),Object(c.b)("tr",null,Object(c.b)("td",null,"release",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#release"},Object(c.b)("code",null,"Release"))),Object(c.b)("td",null,Object(c.b)("p",null,"The release associated with this package version."))),Object(c.b)("tr",null,Object(c.b)("td",null,"statistics",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversionstatistics"},Object(c.b)("code",null,"PackageVersionStatistics"))),Object(c.b)("td",null,Object(c.b)("p",null,"Statistics about package activity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"summary",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The package version summary."))),Object(c.b)("tr",null,Object(c.b)("td",null,"version",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The version string."))))),Object(c.b)("h2",{id:"packageversionconnection"},"PackageVersionConnection"),Object(c.b)("p",null,"The connection type for PackageVersion."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversionedge"},Object(c.b)("code",null,"[PackageVersionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversion"},Object(c.b)("code",null,"[PackageVersion]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"packageversionedge"},"PackageVersionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageversion"},Object(c.b)("code",null,"PackageVersion"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"packageversionstatistics"},"PackageVersionStatistics"),Object(c.b)("p",null,"Represents a object that contains package version activity statistics such as downloads."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"downloadsTotalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Number of times the package was downloaded since it was created."))))),Object(c.b)("h2",{id:"pageinfo"},"PageInfo"),Object(c.b)("p",null,"Information about pagination in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"endCursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"When paginating forwards, the cursor to continue."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasNextPage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When paginating forwards, are there more items?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasPreviousPage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When paginating backwards, are there more items?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"startCursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"When paginating backwards, the cursor to continue."))))),Object(c.b)("h2",{id:"permissionsource"},"PermissionSource"),Object(c.b)("p",null,"A level of permission and source for a user's access to a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization the repository belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#defaultrepositorypermissionfield"},Object(c.b)("code",null,"DefaultRepositoryPermissionField!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The level of access this source has granted to the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"source",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#permissiongranter"},Object(c.b)("code",null,"PermissionGranter!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The source of this permission."))))),Object(c.b)("h2",{id:"pinissuepayload"},"PinIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of PinIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was pinned"))))),Object(c.b)("h2",{id:"pinnableitemconnection"},"PinnableItemConnection"),Object(c.b)("p",null,"The connection type for PinnableItem."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemedge"},Object(c.b)("code",null,"[PinnableItemEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pinnableitem"},Object(c.b)("code",null,"[PinnableItem]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pinnableitemedge"},"PinnableItemEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pinnableitem"},Object(c.b)("code",null,"PinnableItem"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pinnedevent"},"PinnedEvent"),Object(c.b)("p",null,"Represents a 'pinned' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the issue associated with the event."))))),Object(c.b)("h2",{id:"pinnedissue"},"PinnedIssue"),Object(c.b)("p",null,"A Pinned Issue is a issue pinned to a repository's index page."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was pinned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnedBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor that pinned this issue."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that this issue was pinned to."))))),Object(c.b)("h2",{id:"pinnedissueconnection"},"PinnedIssueConnection"),Object(c.b)("p",null,"The connection type for PinnedIssue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnedissueedge"},Object(c.b)("code",null,"[PinnedIssueEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnedissue"},Object(c.b)("code",null,"[PinnedIssue]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pinnedissueedge"},"PinnedIssueEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnedissue"},Object(c.b)("code",null,"PinnedIssue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"privaterepositoryforkingdisableauditentry"},"PrivateRepositoryForkingDisableAuditEntry"),Object(c.b)("p",null,"Audit log entry for a private_repository_forking.disable event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"privaterepositoryforkingenableauditentry"},"PrivateRepositoryForkingEnableAuditEntry"),Object(c.b)("p",null,"Audit log entry for a private_repository_forking.enable event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"profileitemshowcase"},"ProfileItemShowcase"),Object(c.b)("p",null,"A curatable list of repositories relating to a repository owner, which defaults\nto showing the most popular repositories they own."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"hasPinnedItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the owner has pinned any repositories or gists."))),Object(c.b)("tr",null,Object(c.b)("td",null,"items",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))))),Object(c.b)("h2",{id:"project"},"Project"),Object(c.b)("p",null,"Projects manage issues, pull requests and notes within a project owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#closable"},"Closable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project's description body."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The projects description body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"closed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the object is closed (definition of closed may depend on type)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"closedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was closed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"columns",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumnconnection"},Object(c.b)("code",null,"ProjectColumnConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of columns in the project"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who originally created the project."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project's name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project's number."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#projectowner"},Object(c.b)("code",null,"ProjectOwner!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project's owner. Currently limited to repositories, organizations, and users."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pendingCards",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardconnection"},Object(c.b)("code",null,"ProjectCardConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of pending cards in this project"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"archivedStates",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectcardarchivedstate"},Object(c.b)("code",null,"[ProjectCardArchivedState]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of archived states to filter the cards by"))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"progress",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectprogress"},Object(c.b)("code",null,"ProjectProgress!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project progress details."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this project"))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectstate"},Object(c.b)("code",null,"ProjectState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the project is open or closed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this project"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))))),Object(c.b)("h2",{id:"projectcard"},"ProjectCard"),Object(c.b)("p",null,"A card in a project."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"column",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumn"},Object(c.b)("code",null,"ProjectColumn"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project column this card is associated under. A card may only belong to one project column at a time. The column field will be null if the card is created in a pending state and has yet to be associated with a column. Once cards are associated with a column, they will not become pending in the future."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#projectcarditem"},Object(c.b)("code",null,"ProjectCardItem"))),Object(c.b)("td",null,Object(c.b)("p",null,"The card content item"))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who created this card"))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isArchived",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the card is archived"))),Object(c.b)("tr",null,Object(c.b)("td",null,"note",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The card note"))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project that contains this card."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this card"))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectcardstate"},Object(c.b)("code",null,"ProjectCardState"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of ProjectCard"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this card"))))),Object(c.b)("h2",{id:"projectcardconnection"},"ProjectCardConnection"),Object(c.b)("p",null,"The connection type for ProjectCard."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardedge"},Object(c.b)("code",null,"[ProjectCardEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"[ProjectCard]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"projectcardedge"},"ProjectCardEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"ProjectCard"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"projectcolumn"},"ProjectColumn"),Object(c.b)("p",null,"A column inside a project."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cards",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardconnection"},Object(c.b)("code",null,"ProjectCardConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of cards in the column"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"archivedStates",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectcardarchivedstate"},Object(c.b)("code",null,"[ProjectCardArchivedState]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of archived states to filter the cards by"))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project column's name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project that contains this column."))),Object(c.b)("tr",null,Object(c.b)("td",null,"purpose",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectcolumnpurpose"},Object(c.b)("code",null,"ProjectColumnPurpose"))),Object(c.b)("td",null,Object(c.b)("p",null,"The semantic purpose of the column"))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this project column"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this project column"))))),Object(c.b)("h2",{id:"projectcolumnconnection"},"ProjectColumnConnection"),Object(c.b)("p",null,"The connection type for ProjectColumn."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumnedge"},Object(c.b)("code",null,"[ProjectColumnEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumn"},Object(c.b)("code",null,"[ProjectColumn]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"projectcolumnedge"},"ProjectColumnEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumn"},Object(c.b)("code",null,"ProjectColumn"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"projectconnection"},"ProjectConnection"),Object(c.b)("p",null,"A list of projects associated with the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectedge"},Object(c.b)("code",null,"[ProjectEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"[Project]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"projectedge"},"ProjectEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"projectprogress"},"ProjectProgress"),Object(c.b)("p",null,"Project progress stats."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"doneCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of done cards."))),Object(c.b)("tr",null,Object(c.b)("td",null,"donePercentage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The percentage of done cards."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether progress tracking is enabled and cards with purpose exist for this project"))),Object(c.b)("tr",null,Object(c.b)("td",null,"inProgressCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of in-progress cards."))),Object(c.b)("tr",null,Object(c.b)("td",null,"inProgressPercentage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The percentage of in-progress cards."))),Object(c.b)("tr",null,Object(c.b)("td",null,"todoCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of to do cards."))),Object(c.b)("tr",null,Object(c.b)("td",null,"todoPercentage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#float"},Object(c.b)("code",null,"Float!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The percentage of to do cards."))))),Object(c.b)("h2",{id:"publickey"},"PublicKey"),Object(c.b)("p",null,"A user's public key."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"accessedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The last time this authorization was used to perform an action. Values will be null for keys not owned by the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fingerprint",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The fingerprint for this PublicKey."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isReadOnly",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"key",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The public key string."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user."))))),Object(c.b)("h2",{id:"publickeyconnection"},"PublicKeyConnection"),Object(c.b)("p",null,"The connection type for PublicKey."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#publickeyedge"},Object(c.b)("code",null,"[PublicKeyEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#publickey"},Object(c.b)("code",null,"[PublicKey]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"publickeyedge"},"PublicKeyEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#publickey"},Object(c.b)("code",null,"PublicKey"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequest"},"PullRequest"),Object(c.b)("p",null,"A repository pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#assignable"},"Assignable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#closable"},"Closable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},"Labelable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#lockable"},"Lockable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},"Subscribable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"activeLockReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#lockreason"},Object(c.b)("code",null,"LockReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reason that the conversation was locked."))),Object(c.b)("tr",null,Object(c.b)("td",null,"additions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of additions in this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assignees",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Users assigned to this object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"autoMergeRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#automergerequest"},Object(c.b)("code",null,"AutoMergeRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the auto-merge request object if one exists for this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRef",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the base Ref associated with the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this pull request's base Ref."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body as Markdown."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"canBeRebased",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the pull request is rebaseable."))),Object(c.b)("tr",null,Object(c.b)("td",null,"changedFiles",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of changed files in this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"checksResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the checks of this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"checksUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the checks of this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"closed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the pull request is closed"))),Object(c.b)("tr",null,Object(c.b)("td",null,"closedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was closed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecommentconnection"},Object(c.b)("code",null,"IssueCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of comments associated with the pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuecommentorder"},Object(c.b)("code",null,"IssueCommentOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issue comments returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestcommitconnection"},Object(c.b)("code",null,"PullRequestCommitConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of commits present in this pull request's head branch not present in the base branch."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of deletions in this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited this pull request's body."))),Object(c.b)("tr",null,Object(c.b)("td",null,"files",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestchangedfileconnection"},Object(c.b)("code",null,"PullRequestChangedFileConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"Lists the files changed within this pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRef",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the head Ref associated with the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this pull request's head Ref."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRepositoryOwner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryowner"},Object(c.b)("code",null,"RepositoryOwner"))),Object(c.b)("td",null,Object(c.b)("p",null,"The owner of the repository associated with this pull request's head Ref."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hovercard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#hovercard"},Object(c.b)("code",null,"Hovercard!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The hovercard information for this issue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"includeNotificationContexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to include notification contexts"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head and base repositories are different."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isDraft",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the pull request is a draft."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isReadByViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is this pull request read by the viewer"))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#labelconnection"},Object(c.b)("code",null,"LabelConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of labels associated with the object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#labelorder"},Object(c.b)("code",null,"LabelOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for labels returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"latestOpinionatedReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewconnection"},Object(c.b)("code",null,"PullRequestReviewConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of latest reviews per user associated with the pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"writersOnly",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Only return reviews from user who have write access to the repository"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"latestReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewconnection"},Object(c.b)("code",null,"PullRequestReviewConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of latest reviews per user associated with the pull request that are not also pending review."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"locked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the pull request is locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"maintainerCanModify",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether maintainers can modify the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit that was created when this pull request was merged."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeStateStatus",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#mergestatestatus"},Object(c.b)("code",null,"MergeStateStatus!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Detailed information about the current pull request merge state status."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#mergeablestate"},Object(c.b)("code",null,"MergeableState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the pull request can be merged based on the existence of merge conflicts."))),Object(c.b)("tr",null,Object(c.b)("td",null,"merged",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the pull request was merged."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The date and time that the pull request was merged."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergedBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who merged the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"milestone",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestone"},Object(c.b)("code",null,"Milestone"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the milestone associated with the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the pull request number."))),Object(c.b)("tr",null,Object(c.b)("td",null,"participants",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Users that are participating in the Pull Request conversation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"permalink",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permalink to the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"potentialMergeCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the",Object(c.b)("code",null,"mergeable")," field for more details on the mergeability of the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCards",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcardconnection"},Object(c.b)("code",null,"ProjectCardConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of project cards associated with this pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"archivedStates",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectcardarchivedstate"},Object(c.b)("code",null,"[ProjectCardArchivedState]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of archived states to filter the cards by"))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"revertResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for reverting this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"revertUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for reverting this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewDecision",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestreviewdecision"},Object(c.b)("code",null,"PullRequestReviewDecision"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current status of this pull request with respect to code review."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewrequestconnection"},Object(c.b)("code",null,"ReviewRequestConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of review requests associated with the pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewThreads",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthreadconnection"},Object(c.b)("code",null,"PullRequestReviewThreadConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The list of all review threads for this pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewconnection"},Object(c.b)("code",null,"PullRequestReviewConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reviews associated with the pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter by author of the review."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestreviewstate"},Object(c.b)("code",null,"[PullRequestReviewState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the reviews."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"PullRequestState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the state of the pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"suggestedReviewers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#suggestedreviewer"},Object(c.b)("code",null,"[SuggestedReviewer]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reviewer suggestions based on commit history and past review comments."))),Object(c.b)("tr",null,Object(c.b)("td",null,"timeline",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequesttimelineconnection"},Object(c.b)("code",null,"PullRequestTimelineConnection!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: `timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC."),Object(c.b)("p",null,"A list of events, comments, commits, etc. associated with the pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"since",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering timeline events by a ",Object(c.b)("code",null,"since")," timestamp."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"timelineItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequesttimelineitemsconnection"},Object(c.b)("code",null,"PullRequestTimelineItemsConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of events, comments, commits, etc. associated with the pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"itemTypes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequesttimelineitemsitemtype"},Object(c.b)("code",null,"[PullRequestTimelineItemsItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter timeline items by type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"since",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter timeline items by a ",Object(c.b)("code",null,"since")," timestamp."))),Object(c.b)("tr",null,Object(c.b)("td",null,"skip",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Skips the first ",Object(c.b)("em",null,"n")," elements in the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the pull request title."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanApplySuggestion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer can apply suggestion."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDeleteHeadRef",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer can restore the deleted head ref."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDisableAutoMerge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer can disable auto-merge"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanEnableAutoMerge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer can enable auto-merge"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSubscribe",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerLatestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The latest review given from the viewer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerLatestReviewRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewrequest"},Object(c.b)("code",null,"ReviewRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The person who has requested the viewer for review on this pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerMergeBodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merge body text for the viewer and method."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"mergeType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestmergemethod"},Object(c.b)("code",null,"PullRequestMergeMethod"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merge method for the message."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerMergeHeadlineText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merge headline text for the viewer and method."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"mergeType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestmergemethod"},Object(c.b)("code",null,"PullRequestMergeMethod"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merge method for the message."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerSubscription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))))),Object(c.b)("h2",{id:"pullrequestchangedfile"},"PullRequestChangedFile"),Object(c.b)("p",null,"A file changed in a pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"additions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of additions to the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of deletions to the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path of the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerViewedState",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#fileviewedstate"},Object(c.b)("code",null,"FileViewedState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of the file for the viewer."))))),Object(c.b)("h2",{id:"pullrequestchangedfileconnection"},"PullRequestChangedFileConnection"),Object(c.b)("p",null,"The connection type for PullRequestChangedFile."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestchangedfileedge"},Object(c.b)("code",null,"[PullRequestChangedFileEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestchangedfile"},Object(c.b)("code",null,"[PullRequestChangedFile]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequestchangedfileedge"},"PullRequestChangedFileEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestchangedfile"},Object(c.b)("code",null,"PullRequestChangedFile"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequestcommit"},"PullRequestCommit"),Object(c.b)("p",null,"Represents a Git commit part of a pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git commit object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request this commit belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this pull request commit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this pull request commit"))))),Object(c.b)("h2",{id:"pullrequestcommitcommentthread"},"PullRequestCommitCommentThread"),Object(c.b)("p",null,"Represents a commit comment thread part of a pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcommentconnection"},Object(c.b)("code",null,"CommitCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comments that exist in this thread."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit the comments were made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The file the comments were made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"position",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The position in the diff for the commit that the comment was made on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request this commit comment thread belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))))),Object(c.b)("h2",{id:"pullrequestcommitconnection"},"PullRequestCommitConnection"),Object(c.b)("p",null,"The connection type for PullRequestCommit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestcommitedge"},Object(c.b)("code",null,"[PullRequestCommitEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestcommit"},Object(c.b)("code",null,"[PullRequestCommit]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequestcommitedge"},"PullRequestCommitEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestcommit"},Object(c.b)("code",null,"PullRequestCommit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequestconnection"},"PullRequestConnection"),Object(c.b)("p",null,"The connection type for PullRequest."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestedge"},Object(c.b)("code",null,"[PullRequestEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"[PullRequest]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequestcontributionsbyrepository"},"PullRequestContributionsByRepository"),Object(c.b)("p",null,"This aggregates pull requests opened by a user within one repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestcontributionconnection"},Object(c.b)("code",null,"CreatedPullRequestContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request contributions."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository in which the pull requests were opened."))))),Object(c.b)("h2",{id:"pullrequestedge"},"PullRequestEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequestreview"},"PullRequestReview"),Object(c.b)("p",null,"A review object for a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorCanPushToRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the author of this review has push access to the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the pull request review body."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body of this review rendered as plain text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcommentconnection"},Object(c.b)("code",null,"PullRequestReviewCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of review comments for the current pull request review."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit associated with this pull request review."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"onBehalfOf",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamconnection"},Object(c.b)("code",null,"TeamConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of teams that this review was made on behalf of."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the pull request associated with this pull request review."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path permalink for this PullRequestReview."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestreviewstate"},Object(c.b)("code",null,"PullRequestReviewState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the current state of the pull request review."))),Object(c.b)("tr",null,Object(c.b)("td",null,"submittedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the Pull Request Review was submitted"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL permalink for this PullRequestReview."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"pullrequestreviewcomment"},"PullRequestReviewComment"),Object(c.b)("p",null,"A review comment associated with a given repository pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#minimizable"},"Minimizable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comment body of this review comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comment body of this review comment rendered as plain text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit associated with the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"diffHunk",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The diff hunk to which the comment applies."))),Object(c.b)("tr",null,Object(c.b)("td",null,"draftedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was created in a draft state."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isMinimized",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not a comment has been minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"minimizedReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns why the comment was minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,"originalCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the original commit associated with the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"originalPosition",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The original line index in the diff to which the comment applies."))),Object(c.b)("tr",null,Object(c.b)("td",null,"outdated",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment body is outdated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path to which the comment applies."))),Object(c.b)("tr",null,Object(c.b)("td",null,"position",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The line index in the diff to which the comment applies."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request associated with this review comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request review associated with this review comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"replyTo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcomment"},Object(c.b)("code",null,"PullRequestReviewComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comment this is a reply to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path permalink for this review comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestreviewcommentstate"},Object(c.b)("code",null,"PullRequestReviewCommentState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the state of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL permalink for this review comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanMinimize",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can minimize this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"pullrequestreviewcommentconnection"},"PullRequestReviewCommentConnection"),Object(c.b)("p",null,"The connection type for PullRequestReviewComment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcommentedge"},Object(c.b)("code",null,"[PullRequestReviewCommentEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcomment"},Object(c.b)("code",null,"[PullRequestReviewComment]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequestreviewcommentedge"},"PullRequestReviewCommentEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcomment"},Object(c.b)("code",null,"PullRequestReviewComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequestreviewconnection"},"PullRequestReviewConnection"),Object(c.b)("p",null,"The connection type for PullRequestReview."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewedge"},Object(c.b)("code",null,"[PullRequestReviewEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"[PullRequestReview]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequestreviewcontributionsbyrepository"},"PullRequestReviewContributionsByRepository"),Object(c.b)("p",null,"This aggregates pull request reviews made by a user within one repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contributions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#createdpullrequestreviewcontributionconnection"},Object(c.b)("code",null,"CreatedPullRequestReviewContributionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request review contributions."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#contributionorder"},Object(c.b)("code",null,"ContributionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for contributions returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository in which the pull request reviews were made."))))),Object(c.b)("h2",{id:"pullrequestreviewedge"},"PullRequestReviewEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequestreviewthread"},"PullRequestReviewThread"),Object(c.b)("p",null,"A threaded list of comments for a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcommentconnection"},Object(c.b)("code",null,"PullRequestReviewCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pull request comments associated with the thread."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"skip",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Skips the first ",Object(c.b)("em",null,"n")," elements in the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"diffSide",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#diffside"},Object(c.b)("code",null,"DiffSide!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The side of the diff on which this thread was placed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCollapsed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the thread has been collapsed (outdated or resolved)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isOutdated",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether this thread was outdated by newer changes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isResolved",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this thread has been resolved"))),Object(c.b)("tr",null,Object(c.b)("td",null,"line",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The line in the file to which this thread refers"))),Object(c.b)("tr",null,Object(c.b)("td",null,"originalLine",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The original line in the file to which this thread refers."))),Object(c.b)("tr",null,Object(c.b)("td",null,"originalStartLine",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The original start line in the file to which this thread refers (multi-line only)."))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the file path of this thread."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the pull request associated with this thread."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the repository associated with this thread."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resolvedBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who resolved this thread"))),Object(c.b)("tr",null,Object(c.b)("td",null,"startDiffSide",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#diffside"},Object(c.b)("code",null,"DiffSide"))),Object(c.b)("td",null,Object(c.b)("p",null,"The side of the diff that the first line of the thread starts on (multi-line only)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"startLine",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The start line in the file to which this thread refers (multi-line only)"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReply",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the current viewer can reply to this thread."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanResolve",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer can resolve this thread"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUnresolve",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer can unresolve this thread"))))),Object(c.b)("h2",{id:"pullrequestreviewthreadconnection"},"PullRequestReviewThreadConnection"),Object(c.b)("p",null,"Review comment threads for a pull request review."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthreadedge"},Object(c.b)("code",null,"[PullRequestReviewThreadEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthread"},Object(c.b)("code",null,"[PullRequestReviewThread]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequestreviewthreadedge"},"PullRequestReviewThreadEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthread"},Object(c.b)("code",null,"PullRequestReviewThread"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequestrevisionmarker"},"PullRequestRevisionMarker"),Object(c.b)("p",null,"Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastSeenCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The last commit the viewer has seen."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request to which the marker belongs."))))),Object(c.b)("h2",{id:"pullrequesttimelineconnection"},"PullRequestTimelineConnection"),Object(c.b)("p",null,"The connection type for PullRequestTimelineItem."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequesttimelineitemedge"},Object(c.b)("code",null,"[PullRequestTimelineItemEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pullrequesttimelineitem"},Object(c.b)("code",null,"[PullRequestTimelineItem]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pullrequesttimelineitemedge"},"PullRequestTimelineItemEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pullrequesttimelineitem"},Object(c.b)("code",null,"PullRequestTimelineItem"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"pullrequesttimelineitemsconnection"},"PullRequestTimelineItemsConnection"),Object(c.b)("p",null,"The connection type for PullRequestTimelineItems."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequesttimelineitemsedge"},Object(c.b)("code",null,"[PullRequestTimelineItemsEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filteredCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the count of items after applying ",Object(c.b)("code",null,"before")," and ",Object(c.b)("code",null,"after")," filters."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pullrequesttimelineitems"},Object(c.b)("code",null,"[PullRequestTimelineItems]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the count of items after applying ",Object(c.b)("code",null,"before"),"/",Object(c.b)("code",null,"after")," filters and ",Object(c.b)("code",null,"first"),"/",Object(c.b)("code",null,"last"),"/",Object(c.b)("code",null,"skip")," slicing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the timeline was last updated."))))),Object(c.b)("h2",{id:"pullrequesttimelineitemsedge"},"PullRequestTimelineItemsEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pullrequesttimelineitems"},Object(c.b)("code",null,"PullRequestTimelineItems"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"push"},"Push"),Object(c.b)("p",null,"A Git push."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"nextSha",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SHA after the push"))),Object(c.b)("tr",null,Object(c.b)("td",null,"permalink",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permalink for this push."))),Object(c.b)("tr",null,Object(c.b)("td",null,"previousSha",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SHA before the push"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pusher",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who pushed"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that was pushed to"))))),Object(c.b)("h2",{id:"pushallowance"},"PushAllowance"),Object(c.b)("p",null,"A team, user or app who has the ability to push to a protected branch."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#pushallowanceactor"},Object(c.b)("code",null,"PushAllowanceActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor that can push."))),Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the branch protection rule associated with the allowed user or team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)))),Object(c.b)("h2",{id:"pushallowanceconnection"},"PushAllowanceConnection"),Object(c.b)("p",null,"The connection type for PushAllowance."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pushallowanceedge"},Object(c.b)("code",null,"[PushAllowanceEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pushallowance"},Object(c.b)("code",null,"[PushAllowance]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"pushallowanceedge"},"PushAllowanceEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pushallowance"},Object(c.b)("code",null,"PushAllowance"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"ratelimit"},"RateLimit"),Object(c.b)("p",null,"Represents the client's rate limit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cost",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The point cost for the current query counting against the rate limit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"limit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The maximum number of points the client is permitted to consume in a 60 minute window."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodeCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The maximum number of nodes this query may return"))),Object(c.b)("tr",null,Object(c.b)("td",null,"remaining",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of points remaining in the current rate limit window."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resetAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time at which the current rate limit window resets in UTC epoch seconds."))),Object(c.b)("tr",null,Object(c.b)("td",null,"used",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of points used in the current rate limit window."))))),Object(c.b)("h2",{id:"reactinguserconnection"},"ReactingUserConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactinguseredge"},Object(c.b)("code",null,"[ReactingUserEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"reactinguseredge"},"ReactingUserEdge"),Object(c.b)("p",null,"Represents a user that's made a reaction."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"reactedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment when the user made the reaction."))))),Object(c.b)("h2",{id:"reaction"},"Reaction"),Object(c.b)("p",null,"An emoji reaction to a particular piece of content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the emoji reaction."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"reactable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},Object(c.b)("code",null,"Reactable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reactable piece of content"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the user who created this reaction."))))),Object(c.b)("h2",{id:"reactionconnection"},"ReactionConnection"),Object(c.b)("p",null,"A list of reactions that have been left on the subject."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionedge"},Object(c.b)("code",null,"[ReactionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reaction"},Object(c.b)("code",null,"[Reaction]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasReacted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the authenticated user has left a reaction on the subject."))))),Object(c.b)("h2",{id:"reactionedge"},"ReactionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reaction"},Object(c.b)("code",null,"Reaction"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"reactiongroup"},"ReactionGroup"),Object(c.b)("p",null,"A group of emoji reactions to a particular piece of content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the emoji reaction."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the reaction was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},Object(c.b)("code",null,"Reactable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The subject that was reacted to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"users",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactinguserconnection"},Object(c.b)("code",null,"ReactingUserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Users who have reacted to the reaction subject with the emotion represented by this reaction group"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasReacted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the authenticated user has left a reaction on the subject."))))),Object(c.b)("h2",{id:"readyforreviewevent"},"ReadyForReviewEvent"),Object(c.b)("p",null,"Represents a 'ready_for_review' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this ready for review event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this ready for review event."))))),Object(c.b)("h2",{id:"ref"},"Ref"),Object(c.b)("p",null,"Represents a Git reference."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"associatedPullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pull requests with this ref as the head ref."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The base ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"[PullRequestState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the pull requests by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"Branch protection rules for this ref"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ref name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"prefix",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ref's prefix, such as ",Object(c.b)("code",null,"refs/heads/")," or ",Object(c.b)("code",null,"refs/tags/"),"."))),Object(c.b)("tr",null,Object(c.b)("td",null,"refUpdateRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#refupdaterule"},Object(c.b)("code",null,"RefUpdateRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"Branch protection rules that are viewable by non-admins"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository the ref belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"target",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},Object(c.b)("code",null,"GitObject"))),Object(c.b)("td",null,Object(c.b)("p",null,"The object the ref points to. Returns null when object does not exist."))))),Object(c.b)("h2",{id:"refconnection"},"RefConnection"),Object(c.b)("p",null,"The connection type for Ref."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#refedge"},Object(c.b)("code",null,"[RefEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"[Ref]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"refedge"},"RefEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"referencedevent"},"ReferencedEvent"),Object(c.b)("p",null,"Represents a 'referenced' event on a given ",Object(c.b)("inlineCode",{parentName:"p"},"ReferencedSubject"),"."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit associated with the 'referenced' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the repository associated with the 'referenced' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reference originated in a different repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isDirectReference",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#referencedsubject"},Object(c.b)("code",null,"ReferencedSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object referenced by event."))))),Object(c.b)("h2",{id:"refupdaterule"},"RefUpdateRule"),Object(c.b)("p",null,"A ref update rules for a viewer."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"allowsDeletions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can this branch be deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"allowsForcePushes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are force pushes allowed on this branch."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pattern",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the protection rule pattern."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiredApprovingReviewCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Number of approving reviews required to update matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiredStatusCheckContexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of required status check contexts that must pass for commits to be accepted to matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresCodeOwnerReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are reviews from code owners required to update matching branches."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresLinearHistory",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are merge commits prohibited from being pushed to this branch."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requiresSignatures",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Are commits required to be signed."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerAllowedToDismissReviews",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is the viewer allowed to dismiss reviews."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanPush",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the viewer push to the branch"))))),Object(c.b)("h2",{id:"regenerateenterpriseidentityproviderrecoverycodespayload"},"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload"),Object(c.b)("p",null,"Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"identityProvider",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseidentityprovider"},Object(c.b)("code",null,"EnterpriseIdentityProvider"))),Object(c.b)("td",null,Object(c.b)("p",null,"The identity provider for the enterprise."))))),Object(c.b)("h2",{id:"regenerateverifiabledomaintokenpayload"},"RegenerateVerifiableDomainTokenPayload"),Object(c.b)("p",null,"Autogenerated return type of RegenerateVerifiableDomainToken"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"verificationToken",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The verification token that was generated."))))),Object(c.b)("h2",{id:"release"},"Release"),Object(c.b)("p",null,"A release contains the content for a release."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The author of the release"))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the release."))),Object(c.b)("tr",null,Object(c.b)("td",null,"descriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of this release rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isDraft",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the release is a draft"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLatest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the release is the latest releast"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPrerelease",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the release is a prerelease"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The title of the release."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the release was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"releaseAssets",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#releaseassetconnection"},Object(c.b)("code",null,"ReleaseAssetConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of releases assets which are dependent on this release."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of names to filter the assets by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that the release belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this issue"))),Object(c.b)("tr",null,Object(c.b)("td",null,"shortDescriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML"))),Object(c.b)("td",null,Object(c.b)("p",null,"A description of the release, rendered to HTML without any links in it."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"limit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many characters to return."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"tag",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git tag the release points to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"tagCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The tag commit for this release."))),Object(c.b)("tr",null,Object(c.b)("td",null,"tagName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the release's Git tag"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this issue"))))),Object(c.b)("h2",{id:"releaseasset"},"ReleaseAsset"),Object(c.b)("p",null,"A release asset contains the content for a release asset."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"contentType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The asset's content-type"))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"downloadCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of times this asset was downloaded"))),Object(c.b)("tr",null,Object(c.b)("td",null,"downloadUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the URL where you can download the release asset via the browser."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the title of the release asset."))),Object(c.b)("tr",null,Object(c.b)("td",null,"release",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#release"},Object(c.b)("code",null,"Release"))),Object(c.b)("td",null,Object(c.b)("p",null,"Release that the asset is associated with"))),Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size (in bytes) of the asset"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"uploadedBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user that performed the upload"))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the URL of the release asset."))))),Object(c.b)("h2",{id:"releaseassetconnection"},"ReleaseAssetConnection"),Object(c.b)("p",null,"The connection type for ReleaseAsset."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#releaseassetedge"},Object(c.b)("code",null,"[ReleaseAssetEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#releaseasset"},Object(c.b)("code",null,"[ReleaseAsset]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"releaseassetedge"},"ReleaseAssetEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#releaseasset"},Object(c.b)("code",null,"ReleaseAsset"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"releaseconnection"},"ReleaseConnection"),Object(c.b)("p",null,"The connection type for Release."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#releaseedge"},Object(c.b)("code",null,"[ReleaseEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#release"},Object(c.b)("code",null,"[Release]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"releaseedge"},"ReleaseEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#release"},Object(c.b)("code",null,"Release"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"removeassigneesfromassignablepayload"},"RemoveAssigneesFromAssignablePayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveAssigneesFromAssignable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"assignable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#assignable"},Object(c.b)("code",null,"Assignable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item that was unassigned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"removedfromprojectevent"},"RemovedFromProjectEvent"),Object(c.b)("p",null,"Represents a 'removed_from_project' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Project referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectColumnName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Column name referenced by this project event."))))),Object(c.b)("h2",{id:"removeenterpriseadminpayload"},"RemoveEnterpriseAdminPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveEnterpriseAdmin"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"admin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who was removed as an administrator."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of removing an administrator."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The viewer performing the mutation."))))),Object(c.b)("h2",{id:"removeenterpriseidentityproviderpayload"},"RemoveEnterpriseIdentityProviderPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveEnterpriseIdentityProvider"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"identityProvider",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseidentityprovider"},Object(c.b)("code",null,"EnterpriseIdentityProvider"))),Object(c.b)("td",null,Object(c.b)("p",null,"The identity provider that was removed from the enterprise."))))),Object(c.b)("h2",{id:"removeenterpriseorganizationpayload"},"RemoveEnterpriseOrganizationPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveEnterpriseOrganization"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization that was removed from the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The viewer performing the mutation."))))),Object(c.b)("h2",{id:"removeenterprisesupportentitlementpayload"},"RemoveEnterpriseSupportEntitlementPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveEnterpriseSupportEntitlement"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of removing the support entitlement."))))),Object(c.b)("h2",{id:"removelabelsfromlabelablepayload"},"RemoveLabelsFromLabelablePayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveLabelsFromLabelable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labelable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},Object(c.b)("code",null,"Labelable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Labelable the labels were removed from."))))),Object(c.b)("h2",{id:"removeoutsidecollaboratorpayload"},"RemoveOutsideCollaboratorPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveOutsideCollaborator"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"removedUser",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user that was removed as an outside collaborator."))))),Object(c.b)("h2",{id:"removereactionpayload"},"RemoveReactionPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveReaction"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reaction",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reaction"},Object(c.b)("code",null,"Reaction"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reaction object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},Object(c.b)("code",null,"Reactable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reactable subject."))))),Object(c.b)("h2",{id:"removestarpayload"},"RemoveStarPayload"),Object(c.b)("p",null,"Autogenerated return type of RemoveStar"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"starrable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#starrable"},Object(c.b)("code",null,"Starrable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The starrable."))))),Object(c.b)("h2",{id:"renamedtitleevent"},"RenamedTitleEvent"),Object(c.b)("p",null,"Represents a 'renamed' event on a given issue or pull request"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"currentTitle",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the current title of the issue or pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"previousTitle",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the previous title of the issue or pull request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#renamedtitlesubject"},Object(c.b)("code",null,"RenamedTitleSubject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Subject that was renamed."))))),Object(c.b)("h2",{id:"reopenedevent"},"ReopenedEvent"),Object(c.b)("p",null,"Represents a 'reopened' event on any ",Object(c.b)("inlineCode",{parentName:"p"},"Closable"),"."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"closable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#closable"},Object(c.b)("code",null,"Closable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object that was reopened."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)))),Object(c.b)("h2",{id:"reopenissuepayload"},"ReopenIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of ReopenIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was opened."))))),Object(c.b)("h2",{id:"reopenpullrequestpayload"},"ReopenPullRequestPayload"),Object(c.b)("p",null,"Autogenerated return type of ReopenPullRequest"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that was reopened."))))),Object(c.b)("h2",{id:"repoaccessauditentry"},"RepoAccessAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.access event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repoaccessauditentryvisibility"},Object(c.b)("code",null,"RepoAccessAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The visibility of the repository"))))),Object(c.b)("h2",{id:"repoaddmemberauditentry"},"RepoAddMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.add_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repoaddmemberauditentryvisibility"},Object(c.b)("code",null,"RepoAddMemberAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The visibility of the repository"))))),Object(c.b)("h2",{id:"repoaddtopicauditentry"},"RepoAddTopicAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.add_topic event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#topicauditentrydata"},"TopicAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"topic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"Topic"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the topic added to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"topicName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the topic added to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoarchivedauditentry"},"RepoArchivedAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.archived event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repoarchivedauditentryvisibility"},Object(c.b)("code",null,"RepoArchivedAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The visibility of the repository"))))),Object(c.b)("h2",{id:"repochangemergesettingauditentry"},"RepoChangeMergeSettingAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.change_merge_setting event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the change was to enable (true) or disable (false) the merge type"))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repochangemergesettingauditentrymergetype"},Object(c.b)("code",null,"RepoChangeMergeSettingAuditEntryMergeType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The merge method affected by the change"))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigdisableanonymousgitaccessauditentry"},"RepoConfigDisableAnonymousGitAccessAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.disable_anonymous_git_access event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigdisablecollaboratorsonlyauditentry"},"RepoConfigDisableCollaboratorsOnlyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.disable_collaborators_only event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigdisablecontributorsonlyauditentry"},"RepoConfigDisableContributorsOnlyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.disable_contributors_only event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigdisablesockpuppetdisallowedauditentry"},"RepoConfigDisableSockpuppetDisallowedAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.disable_sockpuppet_disallowed event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigenableanonymousgitaccessauditentry"},"RepoConfigEnableAnonymousGitAccessAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.enable_anonymous_git_access event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigenablecollaboratorsonlyauditentry"},"RepoConfigEnableCollaboratorsOnlyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.enable_collaborators_only event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigenablecontributorsonlyauditentry"},"RepoConfigEnableContributorsOnlyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.enable_contributors_only event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigenablesockpuppetdisallowedauditentry"},"RepoConfigEnableSockpuppetDisallowedAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.enable_sockpuppet_disallowed event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfiglockanonymousgitaccessauditentry"},"RepoConfigLockAnonymousGitAccessAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.lock_anonymous_git_access event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repoconfigunlockanonymousgitaccessauditentry"},"RepoConfigUnlockAnonymousGitAccessAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.config.unlock_anonymous_git_access event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repocreateauditentry"},"RepoCreateAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.create event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"forkParentName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the parent repository for this forked repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"forkSourceName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the root repository for this network."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repocreateauditentryvisibility"},Object(c.b)("code",null,"RepoCreateAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The visibility of the repository"))))),Object(c.b)("h2",{id:"repodestroyauditentry"},"RepoDestroyAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.destroy event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repodestroyauditentryvisibility"},Object(c.b)("code",null,"RepoDestroyAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The visibility of the repository"))))),Object(c.b)("h2",{id:"reporemovememberauditentry"},"RepoRemoveMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.remove_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"visibility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reporemovememberauditentryvisibility"},Object(c.b)("code",null,"RepoRemoveMemberAuditEntryVisibility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The visibility of the repository"))))),Object(c.b)("h2",{id:"reporemovetopicauditentry"},"RepoRemoveTopicAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repo.remove_topic event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#topicauditentrydata"},"TopicAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"topic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"Topic"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the topic added to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"topicName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the topic added to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repository"},"Repository"),Object(c.b)("p",null,"A repository contains the content for a project."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#packageowner"},"PackageOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#projectowner"},"ProjectOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryinfo"},"RepositoryInfo")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#starrable"},"Starrable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},"Subscribable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"assignableUsers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users that can be assigned to issues in this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters users with query on user name and login"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRules",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionruleconnection"},Object(c.b)("code",null,"BranchProtectionRuleConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of branch protection rules for this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"codeOfConduct",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#codeofconduct"},Object(c.b)("code",null,"CodeOfConduct"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the code of conduct for this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"collaborators",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorycollaboratorconnection"},Object(c.b)("code",null,"RepositoryCollaboratorConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of collaborators associated with the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"affiliation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#collaboratoraffiliation"},Object(c.b)("code",null,"CollaboratorAffiliation"))),Object(c.b)("td",null,Object(c.b)("p",null,"Collaborators affiliation level with a repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters users with query on user name and login"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitComments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcommentconnection"},Object(c.b)("code",null,"CommitCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of commit comments associated with the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"contactLinks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorycontactlink"},Object(c.b)("code",null,"[RepositoryContactLink!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a list of contact links associated to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"defaultBranchRef",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Ref associated with the repository's default branch."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deleteBranchOnMerge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not branches are automatically deleted when merged in this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dependencyGraphManifests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#dependencygraphmanifestconnection"},Object(c.b)("code",null,"DependencyGraphManifestConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of dependency manifests contained in the repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dependenciesAfter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Cursor to paginate dependencies"))),Object(c.b)("tr",null,Object(c.b)("td",null,"dependenciesFirst",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Number of dependencies to fetch"))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"withDependencies",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Flag to scope to only manifests with dependencies"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployKeys",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploykeyconnection"},Object(c.b)("code",null,"DeployKeyConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of deploy keys that are on this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"deployments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#deploymentconnection"},Object(c.b)("code",null,"DeploymentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Deployments associated with the repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"environments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Environments to list deployments for"))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#deploymentorder"},Object(c.b)("code",null,"DeploymentOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for deployments returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"descriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the repository rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"diskUsage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of kilobytes this repository occupies on disk."))),Object(c.b)("tr",null,Object(c.b)("td",null,"forkCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns how many forks there are of this repository in the whole network."))),Object(c.b)("tr",null,Object(c.b)("td",null,"forks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of direct forked repositories."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"affiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLocked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they have been locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"ownerAffiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryprivacy"},Object(c.b)("code",null,"RepositoryPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to privacy"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"fundingLinks",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#fundinglink"},Object(c.b)("code",null,"[FundingLink!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The funding links for this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasIssuesEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has issues feature enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasProjectsEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has the Projects feature enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasWikiEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has wiki feature enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"homepageUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"interactionAbility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinteractionability"},Object(c.b)("code",null,"RepositoryInteractionAbility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The interaction ability settings for this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isArchived",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository is unmaintained."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isBlankIssuesEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns true if blank issue creation is allowed"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isDisabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not this repository disabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isEmpty",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not this repository is empty."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isFork",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is a fork."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isInOrganization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if a repository is either owned by an organization, or is a private fork of an organization repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLocked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has been locked or not."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isMirror",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is a mirror."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPrivate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is private or internal."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSecurityPolicyEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns true if this repository has a security policy"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isTemplate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is a template that can be used to generate new repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isUserConfigurationRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is this repository a user configuration repository?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a single issue from the current repository by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number for the issue to be returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueOrPullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issueorpullrequest"},Object(c.b)("code",null,"IssueOrPullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a single issue-like object from the current repository by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number for the issue to be returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueTemplates",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuetemplate"},Object(c.b)("code",null,"[IssueTemplate!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a list of issue templates associated to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"issues",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issueconnection"},Object(c.b)("code",null,"IssueConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of issues that have been opened in the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filterBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuefilters"},Object(c.b)("code",null,"IssueFilters"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filtering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#issuestate"},Object(c.b)("code",null,"[IssueState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the issues by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"label",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"Label"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a single label by name"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Label name"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#labelconnection"},Object(c.b)("code",null,"LabelConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of labels associated with the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#labelorder"},Object(c.b)("code",null,"LabelOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for labels returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"If provided, searches labels by name and description."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"languages",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#languageconnection"},Object(c.b)("code",null,"LanguageConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list containing a breakdown of the language composition of the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#languageorder"},Object(c.b)("code",null,"LanguageOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"latestRelease",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#release"},Object(c.b)("code",null,"Release"))),Object(c.b)("td",null,Object(c.b)("p",null,"Get the latest release for the repository if one exists."))),Object(c.b)("tr",null,Object(c.b)("td",null,"licenseInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#license"},Object(c.b)("code",null,"License"))),Object(c.b)("td",null,Object(c.b)("p",null,"The license associated with the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"lockReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorylockreason"},Object(c.b)("code",null,"RepositoryLockReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason the repository has been locked."))),Object(c.b)("tr",null,Object(c.b)("td",null,"mentionableUsers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Users that can be mentioned in the context of the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters users with query on user name and login"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"mergeCommitAllowed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not PRs are merged with a merge commit on this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"milestone",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestone"},Object(c.b)("code",null,"Milestone"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a single milestone from the current repository by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number for the milestone to be returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"milestones",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#milestoneconnection"},Object(c.b)("code",null,"MilestoneConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of milestones associated with the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#milestoneorder"},Object(c.b)("code",null,"MilestoneOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for milestones."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters milestones with a query on the title"))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#milestonestate"},Object(c.b)("code",null,"[MilestoneState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter by the state of the milestones."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"mirrorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's original mirror URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nameWithOwner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's name with owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,"object",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},Object(c.b)("code",null,"GitObject"))),Object(c.b)("td",null,Object(c.b)("p",null,"A Git object in the repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"expression",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A Git revision expression suitable for rev-parse"))),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object ID"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"openGraphImageUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The image used to represent this repository in Open Graph data."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryowner"},Object(c.b)("code",null,"RepositoryOwner!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The User owner of the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packages",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageconnection"},Object(c.b)("code",null,"PackageConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of packages under the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"names",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages by their names."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#packageorder"},Object(c.b)("code",null,"PackageOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering of the returned packages."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#packagetype"},Object(c.b)("code",null,"PackageType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter registry package by type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages in a repository by ID."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"parent",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository parent, if this is a fork."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnedIssues",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnedissueconnection"},Object(c.b)("code",null,"PinnedIssueConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pinned issues for this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"primaryLanguage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#language"},Object(c.b)("code",null,"Language"))),Object(c.b)("td",null,Object(c.b)("p",null,"The primary language of the repository's code."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find project by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project number to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projects",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectconnection"},Object(c.b)("code",null,"ProjectConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of projects under the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#projectorder"},Object(c.b)("code",null,"ProjectOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for projects returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"search",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Query to search projects by, currently only searching by name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectstate"},Object(c.b)("code",null,"[ProjectState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the projects by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path listing the repository's projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL listing the repository's projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a single pull request from the current repository by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number for the pull request to be returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pull requests that have been opened in the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The base ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"[PullRequestState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the pull requests by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pushedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the repository was last pushed to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"rebaseMergeAllowed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not rebase-merging is enabled on this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"Fetch a given ref from the repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"qualifiedName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ref to retrieve. Fully qualified matches are checked in order (",Object(c.b)("code",null,"refs/heads/master"),") before falling back onto checks for short name matches (",Object(c.b)("code",null,"master"),")."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"refs",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#refconnection"},Object(c.b)("code",null,"RefConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"Fetch a list of refs from the repository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"direction",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#orderdirection"},Object(c.b)("code",null,"OrderDirection"))),Object(c.b)("td",null,Object(c.b)("p",null,"DEPRECATED: use orderBy. The ordering direction."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reforder"},Object(c.b)("code",null,"RefOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for refs returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters refs with query on name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"refPrefix",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A ref name prefix like ",Object(c.b)("code",null,"refs/heads/"),", ",Object(c.b)("code",null,"refs/tags/"),", etc."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"release",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#release"},Object(c.b)("code",null,"Release"))),Object(c.b)("td",null,Object(c.b)("p",null,"Lookup a single release given various criteria."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"tagName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Tag the Release was created from"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"releases",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#releaseconnection"},Object(c.b)("code",null,"ReleaseConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of releases which are dependent on this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#releaseorder"},Object(c.b)("code",null,"ReleaseOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryTopics",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorytopicconnection"},Object(c.b)("code",null,"RepositoryTopicConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of applied repository-topic associations for this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"securityPolicyUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The security policy URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,"shortDescriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A description of the repository, rendered to HTML without any links in it."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"limit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many characters to return."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"squashMergeAllowed",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not squash-merging is enabled on this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sshUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitsshremote"},Object(c.b)("code",null,"GitSSHRemote!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The SSH URL to clone this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"stargazerCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a count of how many stargazers there are on this object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"stargazers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#stargazerconnection"},Object(c.b)("code",null,"StargazerConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who have starred this starrable."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#starorder"},Object(c.b)("code",null,"StarOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"submodules",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#submoduleconnection"},Object(c.b)("code",null,"SubmoduleConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"tempCloneToken",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Temporary authentication token for cloning this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"templateRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository from which this repository was generated, if any."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"usesCustomOpenGraphImage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanAdminister",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the viewer has admin permissions on this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanCreateProjects",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer create new projects on this owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSubscribe",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdateTopics",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates whether the viewer can update the topics of this repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDefaultCommitEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The last commit email for the viewer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDefaultMergeMethod",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestmergemethod"},Object(c.b)("code",null,"PullRequestMergeMethod!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The last used merge method by the viewer or the default for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasStarred",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a boolean indicating whether the viewing user has starred this starrable."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerPermission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorypermission"},Object(c.b)("code",null,"RepositoryPermission"))),Object(c.b)("td",null,Object(c.b)("p",null,"The users permission level on the repository. Will return null if authenticated as an GitHub App."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerPossibleCommitEmails",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of emails this viewer can commit with."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerSubscription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"vulnerabilityAlerts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryvulnerabilityalertconnection"},Object(c.b)("code",null,"RepositoryVulnerabilityAlertConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of vulnerability alerts that are on this repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"watchers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users watching the repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))))),Object(c.b)("h2",{id:"repositorycollaboratorconnection"},"RepositoryCollaboratorConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorycollaboratoredge"},Object(c.b)("code",null,"[RepositoryCollaboratorEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"repositorycollaboratoredge"},"RepositoryCollaboratorEdge"),Object(c.b)("p",null,"Represents a user who is a collaborator of a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorypermission"},Object(c.b)("code",null,"RepositoryPermission!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permission the user has on the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permissionSources",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#permissionsource"},Object(c.b)("code",null,"[PermissionSource!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of sources for the user's access to the repository."))))),Object(c.b)("h2",{id:"repositoryconnection"},"RepositoryConnection"),Object(c.b)("p",null,"A list of repositories owned by the subject."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryedge"},Object(c.b)("code",null,"[RepositoryEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"[Repository]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalDiskUsage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The total size in kilobytes of all repositories in the connection."))))),Object(c.b)("h2",{id:"repositorycontactlink"},"RepositoryContactLink"),Object(c.b)("p",null,"A repository contact link."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"about",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The contact link purpose."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The contact link name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The contact link URL."))))),Object(c.b)("h2",{id:"repositoryedge"},"RepositoryEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"repositoryinteractionability"},"RepositoryInteractionAbility"),Object(c.b)("p",null,"Repository interaction limit that applies to this object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"expiresAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the currently active limit expires."))),Object(c.b)("tr",null,Object(c.b)("td",null,"limit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryinteractionlimit"},Object(c.b)("code",null,"RepositoryInteractionLimit!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current limit that is enabled on this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"origin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryinteractionlimitorigin"},Object(c.b)("code",null,"RepositoryInteractionLimitOrigin!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The origin of the currently active interaction limit."))))),Object(c.b)("h2",{id:"repositoryinvitation"},"RepositoryInvitation"),Object(c.b)("p",null,"An invitation for a user to be added to a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The email address that received the invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"invitee",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who received the invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"inviter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who created the invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permalink",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permalink for this repository invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorypermission"},Object(c.b)("code",null,"RepositoryPermission!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permission granted on this repository by this invitation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryinfo"},Object(c.b)("code",null,"RepositoryInfo"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository the user is invited to."))))),Object(c.b)("h2",{id:"repositoryinvitationconnection"},"RepositoryInvitationConnection"),Object(c.b)("p",null,"The connection type for RepositoryInvitation."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinvitationedge"},Object(c.b)("code",null,"[RepositoryInvitationEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinvitation"},Object(c.b)("code",null,"[RepositoryInvitation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"repositoryinvitationedge"},"RepositoryInvitationEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinvitation"},Object(c.b)("code",null,"RepositoryInvitation"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"repositorytopic"},"RepositoryTopic"),Object(c.b)("p",null,"A repository-topic connects a repository to a topic."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this repository-topic."))),Object(c.b)("tr",null,Object(c.b)("td",null,"topic",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"Topic!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The topic."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this repository-topic."))))),Object(c.b)("h2",{id:"repositorytopicconnection"},"RepositoryTopicConnection"),Object(c.b)("p",null,"The connection type for RepositoryTopic."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorytopicedge"},Object(c.b)("code",null,"[RepositoryTopicEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorytopic"},Object(c.b)("code",null,"[RepositoryTopic]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"repositorytopicedge"},"RepositoryTopicEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositorytopic"},Object(c.b)("code",null,"RepositoryTopic"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"repositoryvisibilitychangedisableauditentry"},"RepositoryVisibilityChangeDisableAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repository_visibility_change.disable event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repositoryvisibilitychangeenableauditentry"},"RepositoryVisibilityChangeEnableAuditEntry"),Object(c.b)("p",null,"Audit log entry for a repository_visibility_change.enable event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#enterpriseauditentrydata"},"EnterpriseAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterpriseUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"repositoryvulnerabilityalert"},"RepositoryVulnerabilityAlert"),Object(c.b)("p",null,"A alert for a repository with an affected vulnerability."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositorynode"},"RepositoryNode"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When was the alert created?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"dismissReason",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason the alert was dismissed"))),Object(c.b)("tr",null,Object(c.b)("td",null,"dismissedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"When was the alert dismissed?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"dismisser",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who dismissed the alert"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The associated repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"securityAdvisory",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisory"},Object(c.b)("code",null,"SecurityAdvisory"))),Object(c.b)("td",null,Object(c.b)("p",null,"The associated security advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"securityVulnerability",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityvulnerability"},Object(c.b)("code",null,"SecurityVulnerability"))),Object(c.b)("td",null,Object(c.b)("p",null,"The associated security vulnerability"))),Object(c.b)("tr",null,Object(c.b)("td",null,"vulnerableManifestFilename",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The vulnerable manifest filename"))),Object(c.b)("tr",null,Object(c.b)("td",null,"vulnerableManifestPath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The vulnerable manifest path"))),Object(c.b)("tr",null,Object(c.b)("td",null,"vulnerableRequirements",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The vulnerable requirements"))))),Object(c.b)("h2",{id:"repositoryvulnerabilityalertconnection"},"RepositoryVulnerabilityAlertConnection"),Object(c.b)("p",null,"The connection type for RepositoryVulnerabilityAlert."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryvulnerabilityalertedge"},Object(c.b)("code",null,"[RepositoryVulnerabilityAlertEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryvulnerabilityalert"},Object(c.b)("code",null,"[RepositoryVulnerabilityAlert]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"repositoryvulnerabilityalertedge"},"RepositoryVulnerabilityAlertEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryvulnerabilityalert"},Object(c.b)("code",null,"RepositoryVulnerabilityAlert"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"requestreviewspayload"},"RequestReviewsPayload"),Object(c.b)("p",null,"Autogenerated return type of RequestReviews"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The pull request that is getting requests."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requestedReviewersEdge",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#useredge"},Object(c.b)("code",null,"UserEdge"))),Object(c.b)("td",null,Object(c.b)("p",null,"The edge from the pull request to the requested reviewers."))))),Object(c.b)("h2",{id:"rerequestchecksuitepayload"},"RerequestCheckSuitePayload"),Object(c.b)("p",null,"Autogenerated return type of RerequestCheckSuite"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"checkSuite",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checksuite"},Object(c.b)("code",null,"CheckSuite"))),Object(c.b)("td",null,Object(c.b)("p",null,"The requested check suite."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"resolvereviewthreadpayload"},"ResolveReviewThreadPayload"),Object(c.b)("p",null,"Autogenerated return type of ResolveReviewThread"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"thread",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthread"},Object(c.b)("code",null,"PullRequestReviewThread"))),Object(c.b)("td",null,Object(c.b)("p",null,"The thread to resolve."))))),Object(c.b)("h2",{id:"restrictedcontribution"},"RestrictedContribution"),Object(c.b)("p",null,"Represents a private contribution a user made on GitHub."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#contribution"},"Contribution"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isRestricted",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,"occurredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"reviewdismissalallowance"},"ReviewDismissalAllowance"),Object(c.b)("p",null,"A team or user who has the ability to dismiss a review on a protected branch."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#reviewdismissalallowanceactor"},Object(c.b)("code",null,"ReviewDismissalAllowanceActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor that can dismiss."))),Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the branch protection rule associated with the allowed user or team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)))),Object(c.b)("h2",{id:"reviewdismissalallowanceconnection"},"ReviewDismissalAllowanceConnection"),Object(c.b)("p",null,"The connection type for ReviewDismissalAllowance."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewdismissalallowanceedge"},Object(c.b)("code",null,"[ReviewDismissalAllowanceEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewdismissalallowance"},Object(c.b)("code",null,"[ReviewDismissalAllowance]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"reviewdismissalallowanceedge"},"ReviewDismissalAllowanceEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewdismissalallowance"},Object(c.b)("code",null,"ReviewDismissalAllowance"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"reviewdismissedevent"},"ReviewDismissedEvent"),Object(c.b)("p",null,"Represents a 'review_dismissed' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dismissalMessage",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the optional message associated with the 'review_dismissed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dismissalMessageHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the optional message associated with the event, rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"previousReviewState",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestreviewstate"},Object(c.b)("code",null,"PullRequestReviewState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the previous state of the review with the 'review_dismissed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestCommit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestcommit"},Object(c.b)("code",null,"PullRequestCommit"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the commit which caused the review to become stale."))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this review dismissed event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"review",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the review associated with the 'review_dismissed' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this review dismissed event."))))),Object(c.b)("h2",{id:"reviewrequest"},"ReviewRequest"),Object(c.b)("p",null,"A request for a user to review a pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"asCodeOwner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this request was created for a code owner"))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the pull request associated with this review request."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requestedReviewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#requestedreviewer"},Object(c.b)("code",null,"RequestedReviewer"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reviewer that is requested."))))),Object(c.b)("h2",{id:"reviewrequestconnection"},"ReviewRequestConnection"),Object(c.b)("p",null,"The connection type for ReviewRequest."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewrequestedge"},Object(c.b)("code",null,"[ReviewRequestEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewrequest"},Object(c.b)("code",null,"[ReviewRequest]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"reviewrequestedevent"},"ReviewRequestedEvent"),Object(c.b)("p",null,"Represents an 'review_requested' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requestedReviewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#requestedreviewer"},Object(c.b)("code",null,"RequestedReviewer"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the reviewer whose review was requested."))))),Object(c.b)("h2",{id:"reviewrequestedge"},"ReviewRequestEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reviewrequest"},Object(c.b)("code",null,"ReviewRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"reviewrequestremovedevent"},"ReviewRequestRemovedEvent"),Object(c.b)("p",null,"Represents an 'review_request_removed' event on a given pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest!"))),Object(c.b)("td",null,Object(c.b)("p",null,"PullRequest referenced by event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"requestedReviewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#requestedreviewer"},Object(c.b)("code",null,"RequestedReviewer"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the reviewer whose review request was removed."))))),Object(c.b)("h2",{id:"reviewstatushovercardcontext"},"ReviewStatusHovercardContext"),Object(c.b)("p",null,"A hovercard context with a message describing the current code review state of the pull\nrequest."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#hovercardcontext"},"HovercardContext"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string describing this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"octicon",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An octicon to accompany this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewDecision",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequestreviewdecision"},Object(c.b)("code",null,"PullRequestReviewDecision"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current status of the pull request with respect to code review."))))),Object(c.b)("h2",{id:"savedreply"},"SavedReply"),Object(c.b)("p",null,"A Saved Reply is text a user can use to reply quickly."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body of the saved reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The saved reply body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The title of the saved reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user that saved this reply."))))),Object(c.b)("h2",{id:"savedreplyconnection"},"SavedReplyConnection"),Object(c.b)("p",null,"The connection type for SavedReply."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#savedreplyedge"},Object(c.b)("code",null,"[SavedReplyEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#savedreply"},Object(c.b)("code",null,"[SavedReply]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"savedreplyedge"},"SavedReplyEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#savedreply"},Object(c.b)("code",null,"SavedReply"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"searchresultitemconnection"},"SearchResultItemConnection"),Object(c.b)("p",null,"A list of results that matched against a search query."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"codeCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of pieces of code that matched the search query."))),Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#searchresultitemedge"},Object(c.b)("code",null,"[SearchResultItemEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of issues that matched the search query."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#searchresultitem"},Object(c.b)("code",null,"[SearchResultItem]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of repositories that matched the search query."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of users that matched the search query."))),Object(c.b)("tr",null,Object(c.b)("td",null,"wikiCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of wiki pages that matched the search query."))))),Object(c.b)("h2",{id:"searchresultitemedge"},"SearchResultItemEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#searchresultitem"},Object(c.b)("code",null,"SearchResultItem"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))),Object(c.b)("tr",null,Object(c.b)("td",null,"textMatches",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#textmatch"},Object(c.b)("code",null,"[TextMatch]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Text matches on the result found."))))),Object(c.b)("h2",{id:"securityadvisory"},"SecurityAdvisory"),Object(c.b)("p",null,"A GitHub Security Advisory"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cvss",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#cvss"},Object(c.b)("code",null,"CVSS!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The CVSS associated with this advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"cwes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#cweconnection"},Object(c.b)("code",null,"CWEConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"CWEs associated with this Advisory"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This is a long plaintext description of the advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"ghsaId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub Security Advisory ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"identifiers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisoryidentifier"},Object(c.b)("code",null,"[SecurityAdvisoryIdentifier!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of identifiers for this advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"notificationsPermalink",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permalink for the advisory's dependabot alerts page"))),Object(c.b)("tr",null,Object(c.b)("td",null,"origin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization that originated the advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"permalink",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permalink for the advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When the advisory was published"))),Object(c.b)("tr",null,Object(c.b)("td",null,"references",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisoryreference"},Object(c.b)("code",null,"[SecurityAdvisoryReference!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of references for this advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"severity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#securityadvisoryseverity"},Object(c.b)("code",null,"SecurityAdvisorySeverity!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The severity of the advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"summary",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A short plaintext summary of the advisory"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When the advisory was last updated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"vulnerabilities",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityvulnerabilityconnection"},Object(c.b)("code",null,"SecurityVulnerabilityConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Vulnerabilities associated with this Advisory"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ecosystem",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#securityadvisoryecosystem"},Object(c.b)("code",null,"SecurityAdvisoryEcosystem"))),Object(c.b)("td",null,Object(c.b)("p",null,"An ecosystem to filter vulnerabilities by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#securityvulnerabilityorder"},Object(c.b)("code",null,"SecurityVulnerabilityOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for the returned topics."))),Object(c.b)("tr",null,Object(c.b)("td",null,"package",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A package name to filter vulnerabilities by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"severities",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#securityadvisoryseverity"},Object(c.b)("code",null,"[SecurityAdvisorySeverity!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of severities to filter vulnerabilities by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"withdrawnAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"When the advisory was withdrawn, if it has been withdrawn"))))),Object(c.b)("h2",{id:"securityadvisoryconnection"},"SecurityAdvisoryConnection"),Object(c.b)("p",null,"The connection type for SecurityAdvisory."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisoryedge"},Object(c.b)("code",null,"[SecurityAdvisoryEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisory"},Object(c.b)("code",null,"[SecurityAdvisory]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"securityadvisoryedge"},"SecurityAdvisoryEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisory"},Object(c.b)("code",null,"SecurityAdvisory"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"securityadvisoryidentifier"},"SecurityAdvisoryIdentifier"),Object(c.b)("p",null,"A GitHub Security Advisory Identifier"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"type",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The identifier type, e.g. GHSA, CVE"))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The identifier"))))),Object(c.b)("h2",{id:"securityadvisorypackage"},"SecurityAdvisoryPackage"),Object(c.b)("p",null,"An individual package"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"ecosystem",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#securityadvisoryecosystem"},Object(c.b)("code",null,"SecurityAdvisoryEcosystem!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ecosystem the package belongs to, e.g. RUBYGEMS, NPM"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The package name"))))),Object(c.b)("h2",{id:"securityadvisorypackageversion"},"SecurityAdvisoryPackageVersion"),Object(c.b)("p",null,"An individual package version"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"identifier",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The package name or version"))))),Object(c.b)("h2",{id:"securityadvisoryreference"},"SecurityAdvisoryReference"),Object(c.b)("p",null,"A GitHub Security Advisory Reference"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A publicly accessible reference"))))),Object(c.b)("h2",{id:"securityvulnerability"},"SecurityVulnerability"),Object(c.b)("p",null,"An individual vulnerability within an Advisory"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"advisory",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisory"},Object(c.b)("code",null,"SecurityAdvisory!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Advisory associated with this Vulnerability"))),Object(c.b)("tr",null,Object(c.b)("td",null,"firstPatchedVersion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisorypackageversion"},Object(c.b)("code",null,"SecurityAdvisoryPackageVersion"))),Object(c.b)("td",null,Object(c.b)("p",null,"The first version containing a fix for the vulnerability"))),Object(c.b)("tr",null,Object(c.b)("td",null,"package",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityadvisorypackage"},Object(c.b)("code",null,"SecurityAdvisoryPackage!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A description of the vulnerable package"))),Object(c.b)("tr",null,Object(c.b)("td",null,"severity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#securityadvisoryseverity"},Object(c.b)("code",null,"SecurityAdvisorySeverity!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The severity of the vulnerability within this package"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When the vulnerability was last updated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"vulnerableVersionRange",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string that describes the vulnerable package versions. This string follows a basic syntax with a few forms."),Object(c.b)("ul",null,Object(c.b)("li",null,Object(c.b)("code",null,"= 0.2.0")," denotes a single vulnerable version."),Object(c.b)("li",null,Object(c.b)("code",null,"<= 1.0.8")," denotes a version range up to and including the specified version"),Object(c.b)("li",null,Object(c.b)("code",null,"< 0.1.11")," denotes a version range up to, but excluding, the specified version"),Object(c.b)("li",null,Object(c.b)("code",null,">= 4.3.0, < 4.3.5")," denotes a version range with a known minimum and maximum version."),Object(c.b)("li",null,Object(c.b)("code",null,">= 0.0.1")," denotes a version range with a known minimum, but no known maximum")))))),Object(c.b)("h2",{id:"securityvulnerabilityconnection"},"SecurityVulnerabilityConnection"),Object(c.b)("p",null,"The connection type for SecurityVulnerability."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityvulnerabilityedge"},Object(c.b)("code",null,"[SecurityVulnerabilityEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityvulnerability"},Object(c.b)("code",null,"[SecurityVulnerability]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"securityvulnerabilityedge"},"SecurityVulnerabilityEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#securityvulnerability"},Object(c.b)("code",null,"SecurityVulnerability"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"setenterpriseidentityproviderpayload"},"SetEnterpriseIdentityProviderPayload"),Object(c.b)("p",null,"Autogenerated return type of SetEnterpriseIdentityProvider"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"identityProvider",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterpriseidentityprovider"},Object(c.b)("code",null,"EnterpriseIdentityProvider"))),Object(c.b)("td",null,Object(c.b)("p",null,"The identity provider for the enterprise."))))),Object(c.b)("h2",{id:"setorganizationinteractionlimitpayload"},"SetOrganizationInteractionLimitPayload"),Object(c.b)("p",null,"Autogenerated return type of SetOrganizationInteractionLimit"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization that the interaction limit was set for."))))),Object(c.b)("h2",{id:"setrepositoryinteractionlimitpayload"},"SetRepositoryInteractionLimitPayload"),Object(c.b)("p",null,"Autogenerated return type of SetRepositoryInteractionLimit"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that the interaction limit was set for."))))),Object(c.b)("h2",{id:"setuserinteractionlimitpayload"},"SetUserInteractionLimitPayload"),Object(c.b)("p",null,"Autogenerated return type of SetUserInteractionLimit"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user that the interaction limit was set for."))))),Object(c.b)("h2",{id:"smimesignature"},"SmimeSignature"),Object(c.b)("p",null,"Represents an S/MIME signature on a Commit or Tag."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitsignature"},"GitSignature"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Email used to sign this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isValid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature is valid and verified by GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"payload",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Payload for GPG signing object. Raw ODB object without the signature header."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signature",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ASCII-armored signature header from object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"GitHub user corresponding to the email signing this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#gitsignaturestate"},Object(c.b)("code",null,"GitSignatureState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of this signature. ",Object(c.b)("code",null,"VALID")," if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."))),Object(c.b)("tr",null,Object(c.b)("td",null,"wasSignedByGitHub",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature was made with GitHub's signing key."))))),Object(c.b)("h2",{id:"sponsorableitemconnection"},"SponsorableItemConnection"),Object(c.b)("p",null,"The connection type for SponsorableItem."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorableitemedge"},Object(c.b)("code",null,"[SponsorableItemEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#sponsorableitem"},Object(c.b)("code",null,"[SponsorableItem]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"sponsorableitemedge"},"SponsorableItemEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#sponsorableitem"},Object(c.b)("code",null,"SponsorableItem"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"sponsorsgoal"},"SponsorsGoal"),Object(c.b)("p",null,"A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A description of the goal from the maintainer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"kind",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#sponsorsgoalkind"},Object(c.b)("code",null,"SponsorsGoalKind!"))),Object(c.b)("td",null,Object(c.b)("p",null,"What the objective of this goal is."))),Object(c.b)("tr",null,Object(c.b)("td",null,"percentComplete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The percentage representing how complete this goal is, between 0-100."))),Object(c.b)("tr",null,Object(c.b)("td",null,"targetValue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"What the goal amount is. Represents a dollar amount for monthly sponsorship amount goals. Represents a count of unique sponsors for total sponsors count goals."))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A brief summary of the kind and target value of this goal."))))),Object(c.b)("h2",{id:"sponsorship"},"Sponsorship"),Object(c.b)("p",null,"A sponsorship relationship between a sponsor and a maintainer"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isOneTimePayment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this sponsorship represents a one-time payment versus a recurring sponsorship."))),Object(c.b)("tr",null,Object(c.b)("td",null,"maintainer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: `Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC."),Object(c.b)("p",null,"The entity that is being sponsored"))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacyLevel",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#sponsorshipprivacy"},Object(c.b)("code",null,"SponsorshipPrivacy!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The privacy level for this sponsorship."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: `Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC."),Object(c.b)("p",null,"The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorEntity",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#sponsor"},Object(c.b)("code",null,"Sponsor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user or organization that is sponsoring, if you have permission to view them."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#sponsorable"},Object(c.b)("code",null,"Sponsorable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The entity that is being sponsored"))),Object(c.b)("tr",null,Object(c.b)("td",null,"tier",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstier"},Object(c.b)("code",null,"SponsorsTier"))),Object(c.b)("td",null,Object(c.b)("p",null,"The associated sponsorship tier"))),Object(c.b)("tr",null,Object(c.b)("td",null,"tierSelectedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the current tier was chosen for this sponsorship."))))),Object(c.b)("h2",{id:"sponsorshipconnection"},"SponsorshipConnection"),Object(c.b)("p",null,"The connection type for Sponsorship."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipedge"},Object(c.b)("code",null,"[SponsorshipEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorship"},Object(c.b)("code",null,"[Sponsorship]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"sponsorshipedge"},"SponsorshipEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorship"},Object(c.b)("code",null,"Sponsorship"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"sponsorslisting"},"SponsorsListing"),Object(c.b)("p",null,"A GitHub Sponsors listing."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"activeGoal",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorsgoal"},Object(c.b)("code",null,"SponsorsGoal"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current goal the maintainer is trying to reach with GitHub Sponsors, if any."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fullDescription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The full description of the listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fullDescriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The full description of the listing rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The listing's full name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"shortDescription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The short description of the listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The short name of the listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"tiers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstierconnection"},Object(c.b)("code",null,"SponsorsTierConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"The published tiers for this GitHub Sponsors listing."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorstierorder"},Object(c.b)("code",null,"SponsorsTierOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for Sponsors tiers returned from the connection."))))))))),Object(c.b)("h2",{id:"sponsorstier"},"SponsorsTier"),Object(c.b)("p",null,"A GitHub Sponsors tier associated with a GitHub Sponsors listing."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"adminInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstieradmininfo"},Object(c.b)("code",null,"SponsorsTierAdminInfo"))),Object(c.b)("td",null,Object(c.b)("p",null,"SponsorsTier information only visible to users that can administer the associated Sponsors listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"closestLesserValueTier",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstier"},Object(c.b)("code",null,"SponsorsTier"))),Object(c.b)("td",null,Object(c.b)("p",null,"Get a different tier for this tier's maintainer that is at the same frequency as this tier but with a lesser cost. Returns the published tier with the monthly price closest to this tier's without going over."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the tier."))),Object(c.b)("tr",null,Object(c.b)("td",null,"descriptionHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The tier description rendered to HTML"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCustomAmount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this tier was chosen at checkout time by the sponsor rather than defined ahead of time by the maintainer who manages the Sponsors listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isOneTime",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this tier is only for use with one-time sponsorships."))),Object(c.b)("tr",null,Object(c.b)("td",null,"monthlyPriceInCents",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How much this tier costs per month in cents."))),Object(c.b)("tr",null,Object(c.b)("td",null,"monthlyPriceInDollars",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"How much this tier costs per month in dollars."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the tier."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorsListing",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorslisting"},Object(c.b)("code",null,"SponsorsListing!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The sponsors listing that this tier belongs to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"sponsorstieradmininfo"},"SponsorsTierAdminInfo"),Object(c.b)("p",null,"SponsorsTier information only visible to users that can administer the associated Sponsors listing."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorships",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The sponsorships associated with this tier."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"includePrivate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to include private sponsorships in the result set"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))))),Object(c.b)("h2",{id:"sponsorstierconnection"},"SponsorsTierConnection"),Object(c.b)("p",null,"The connection type for SponsorsTier."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstieredge"},Object(c.b)("code",null,"[SponsorsTierEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstier"},Object(c.b)("code",null,"[SponsorsTier]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"sponsorstieredge"},"SponsorsTierEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorstier"},Object(c.b)("code",null,"SponsorsTier"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"stargazerconnection"},"StargazerConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#stargazeredge"},Object(c.b)("code",null,"[StargazerEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"stargazeredge"},"StargazerEdge"),Object(c.b)("p",null,"Represents a user that's starred a repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"starredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the item was starred."))))),Object(c.b)("h2",{id:"starredrepositoryconnection"},"StarredRepositoryConnection"),Object(c.b)("p",null,"The connection type for Repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#starredrepositoryedge"},Object(c.b)("code",null,"[StarredRepositoryEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isOverLimit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is the list of stars for this user truncated? This is true for users that have many stars."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"[Repository]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"starredrepositoryedge"},"StarredRepositoryEdge"),Object(c.b)("p",null,"Represents a starred repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"starredAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the item was starred."))))),Object(c.b)("h2",{id:"status"},"Status"),Object(c.b)("p",null,"Represents a commit status."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"combinedContexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#statuscheckrollupcontextconnection"},Object(c.b)("code",null,"StatusCheckRollupContextConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of status contexts and check runs for this commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit this status is attached to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"context",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#statuscontext"},Object(c.b)("code",null,"StatusContext"))),Object(c.b)("td",null,Object(c.b)("p",null,"Looks up an individual status context by context name."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The context name."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"contexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#statuscontext"},Object(c.b)("code",null,"[StatusContext!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The individual status contexts for this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#statusstate"},Object(c.b)("code",null,"StatusState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The combined commit status."))))),Object(c.b)("h2",{id:"statuscheckrollup"},"StatusCheckRollup"),Object(c.b)("p",null,"Represents the rollup for both the check runs and status for a commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit the status and check runs are attached to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contexts",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#statuscheckrollupcontextconnection"},Object(c.b)("code",null,"StatusCheckRollupContextConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of status contexts and check runs for this commit."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#statusstate"},Object(c.b)("code",null,"StatusState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The combined status for the commit."))))),Object(c.b)("h2",{id:"statuscheckrollupcontextconnection"},"StatusCheckRollupContextConnection"),Object(c.b)("p",null,"The connection type for StatusCheckRollupContext."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#statuscheckrollupcontextedge"},Object(c.b)("code",null,"[StatusCheckRollupContextEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#statuscheckrollupcontext"},Object(c.b)("code",null,"[StatusCheckRollupContext]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"statuscheckrollupcontextedge"},"StatusCheckRollupContextEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#statuscheckrollupcontext"},Object(c.b)("code",null,"StatusCheckRollupContext"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"statuscontext"},"StatusContext"),Object(c.b)("p",null,"Represents an individual commit status context"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#requirablebypullrequest"},"RequirableByPullRequest"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The avatar of the OAuth application or the user that created the status"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commit"},Object(c.b)("code",null,"Commit"))),Object(c.b)("td",null,Object(c.b)("p",null,"This commit this status context is attached to."))),Object(c.b)("tr",null,Object(c.b)("td",null,"context",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of this status context."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"creator",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who created this status context."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description for this status context."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isRequired",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this is required to pass before merging for a specific pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The id of the pull request this is required for"))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestNumber",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of the pull request this is required for"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#statusstate"},Object(c.b)("code",null,"StatusState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of this status context."))),Object(c.b)("tr",null,Object(c.b)("td",null,"targetUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL for this status context."))))),Object(c.b)("h2",{id:"submitpullrequestreviewpayload"},"SubmitPullRequestReviewPayload"),Object(c.b)("p",null,"Autogenerated return type of SubmitPullRequestReview"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The submitted pull request review."))))),Object(c.b)("h2",{id:"submodule"},"Submodule"),Object(c.b)("p",null,"A pointer to a repository at a specific revision embedded inside another repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"branch",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The branch of the upstream submodule for tracking updates"))),Object(c.b)("tr",null,Object(c.b)("td",null,"gitUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The git URL of the submodule repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the submodule in .gitmodules"))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The path in the superproject that this submodule is located in"))),Object(c.b)("tr",null,Object(c.b)("td",null,"subprojectCommitOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The commit revision of the subproject repository being tracked by the submodule"))))),Object(c.b)("h2",{id:"submoduleconnection"},"SubmoduleConnection"),Object(c.b)("p",null,"The connection type for Submodule."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#submoduleedge"},Object(c.b)("code",null,"[SubmoduleEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#submodule"},Object(c.b)("code",null,"[Submodule]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"submoduleedge"},"SubmoduleEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#submodule"},Object(c.b)("code",null,"Submodule"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"subscribedevent"},"SubscribedEvent"),Object(c.b)("p",null,"Represents a 'subscribed' event on a given ",Object(c.b)("inlineCode",{parentName:"p"},"Subscribable"),"."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"subscribable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},Object(c.b)("code",null,"Subscribable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object referenced by event."))))),Object(c.b)("h2",{id:"suggestedreviewer"},"SuggestedReviewer"),Object(c.b)("p",null,"A suggestion to review a pull request based on a user's commit history and review comments."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"isAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is this suggestion based on past commits?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isCommenter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Is this suggestion based on past review comments?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the user suggested to review the pull request."))))),Object(c.b)("h2",{id:"tag"},"Tag"),Object(c.b)("p",null,"Represents a Git tag."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},"GitObject")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"abbreviatedOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An abbreviated version of the Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git tag message."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git tag name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository the Git object belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"tagger",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gitactor"},Object(c.b)("code",null,"GitActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Details about the tag author."))),Object(c.b)("tr",null,Object(c.b)("td",null,"target",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},Object(c.b)("code",null,"GitObject!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object the tag points to."))))),Object(c.b)("h2",{id:"team"},"Team"),Object(c.b)("p",null,"A team of users in an organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#memberstatusable"},"MemberStatusable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},"Subscribable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"ancestors",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamconnection"},Object(c.b)("code",null,"TeamConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of teams that are ancestors of this team."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the team's avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size in pixels of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"childTeams",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamconnection"},Object(c.b)("code",null,"TeamConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"List of child teams belonging to this team"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"immediateOnly",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether to list immediate child teams or all descendant child teams."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#teamorder"},Object(c.b)("code",null,"TeamOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogins",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"User logins to filter by"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"combinedSlug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug corresponding to the organization and team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"description",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"discussion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussion"},Object(c.b)("code",null,"TeamDiscussion"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find a team discussion by its number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The sequence number of the discussion to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"discussions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussionconnection"},Object(c.b)("code",null,"TeamDiscussionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of team discussions."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPinned",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If provided, filters discussions according to whether or not they are pinned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#teamdiscussionorder"},Object(c.b)("code",null,"TeamDiscussionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"discussionsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for team discussions"))),Object(c.b)("tr",null,Object(c.b)("td",null,"discussionsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for team discussions"))),Object(c.b)("tr",null,Object(c.b)("td",null,"editTeamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for editing this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"editTeamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for editing this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"invitations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationinvitationconnection"},Object(c.b)("code",null,"OrganizationInvitationConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pending invitations for users to this team"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"memberStatuses",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatusconnection"},Object(c.b)("code",null,"UserStatusConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Get the status messages members of this entity have set that are either public or visible only to the organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#userstatusorder"},Object(c.b)("code",null,"UserStatusOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for user statuses returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"members",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teammemberconnection"},Object(c.b)("code",null,"TeamMemberConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who are members of this team."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"membership",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teammembershiptype"},Object(c.b)("code",null,"TeamMembershipType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter by membership type"))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#teammemberorder"},Object(c.b)("code",null,"TeamMemberOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teammemberrole"},Object(c.b)("code",null,"TeamMemberRole"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter by team member role"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the team' members"))),Object(c.b)("tr",null,Object(c.b)("td",null,"membersUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the team' members"))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"newTeamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path creating a new team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"newTeamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL creating a new team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization that owns this team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeam",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The parent team of the team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teamprivacy"},Object(c.b)("code",null,"TeamPrivacy!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The level of privacy the team has."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamrepositoryconnection"},Object(c.b)("code",null,"TeamRepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories this team has access to."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#teamrepositoryorder"},Object(c.b)("code",null,"TeamRepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"query",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The search string to look for."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoriesResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team's repositories"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoriesUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team's repositories"))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewRequestDelegationAlgorithm",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teamreviewassignmentalgorithm"},Object(c.b)("code",null,"TeamReviewAssignmentAlgorithm"))),Object(c.b)("td",null,Object(c.b)("p",null,"What algorithm is used for review assignment for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewRequestDelegationEnabled",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if review assignment is enabled for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewRequestDelegationMemberCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many team members are required for review assignment for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"reviewRequestDelegationNotifyTeam",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When assigning team members via delegation, whether the entire team should be notified as well."))),Object(c.b)("tr",null,Object(c.b)("td",null,"slug",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug corresponding to the team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team's teams"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team's teams"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanAdminister",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Team is adminable by the viewer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSubscribe",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerSubscription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))))),Object(c.b)("h2",{id:"teamaddmemberauditentry"},"TeamAddMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a team.add_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#teamauditentrydata"},"TeamAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isLdapMapped",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the team was mapped to an LDAP Group."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"teamaddrepositoryauditentry"},"TeamAddRepositoryAuditEntry"),Object(c.b)("p",null,"Audit log entry for a team.add_repository event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#teamauditentrydata"},"TeamAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isLdapMapped",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the team was mapped to an LDAP Group."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"teamchangeparentteamauditentry"},"TeamChangeParentTeamAuditEntry"),Object(c.b)("p",null,"Audit log entry for a team.change_parent_team event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#teamauditentrydata"},"TeamAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isLdapMapped",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the team was mapped to an LDAP Group."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeam",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The new parent team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the new parent team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamNameWas",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the former parent team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the parent team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the parent team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamWas",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The former parent team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamWasResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the previous parent team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"parentTeamWasUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the previous parent team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"teamconnection"},"TeamConnection"),Object(c.b)("p",null,"The connection type for Team."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamedge"},Object(c.b)("code",null,"[TeamEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"[Team]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"teamdiscussion"},"TeamDiscussion"),Object(c.b)("p",null,"A team discussion."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},"Subscribable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the discussion's team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body as Markdown."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyVersion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the discussion body hash."))),Object(c.b)("tr",null,Object(c.b)("td",null,"comments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussioncommentconnection"},Object(c.b)("code",null,"TeamDiscussionCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of comments on this discussion."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fromComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"When provided, filters the connection such that results begin with the comment with this number."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#teamdiscussioncommentorder"},Object(c.b)("code",null,"TeamDiscussionCommentOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"commentsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for discussion comments"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commentsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for discussion comments"))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPinned",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the discussion is pinned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isPrivate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the discussion is only visible to team members and org admins."))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the discussion within its team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this discussion"))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team that defines the context of this discussion."))),Object(c.b)("tr",null,Object(c.b)("td",null,"title",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The title of the discussion"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this discussion"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanPin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the current viewer can pin this discussion."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSubscribe",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerSubscription",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))))),Object(c.b)("h2",{id:"teamdiscussioncomment"},"TeamDiscussionComment"),Object(c.b)("p",null,"A comment on a team discussion."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#comment"},"Comment")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#deletable"},"Deletable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#reactable"},"Reactable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatable"},"Updatable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#updatablecomment"},"UpdatableComment"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"author",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"authorAssociation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the comment's team."))),Object(c.b)("tr",null,Object(c.b)("td",null,"body",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body as Markdown."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyText",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bodyVersion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current version of the body content."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdViaEmail",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"discussion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussion"},Object(c.b)("code",null,"TeamDiscussion!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The discussion this comment is about."))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"includesCreatedEdit",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,"lastEditedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the comment number."))),Object(c.b)("tr",null,Object(c.b)("td",null,"publishedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactionGroups",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,"reactions",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"content",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this comment"))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this comment"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userContentEdits",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanDelete",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanReact",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanUpdate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCannotUpdateReasons",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerDidAuthor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"teamdiscussioncommentconnection"},"TeamDiscussionCommentConnection"),Object(c.b)("p",null,"The connection type for TeamDiscussionComment."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussioncommentedge"},Object(c.b)("code",null,"[TeamDiscussionCommentEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussioncomment"},Object(c.b)("code",null,"[TeamDiscussionComment]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"teamdiscussioncommentedge"},"TeamDiscussionCommentEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussioncomment"},Object(c.b)("code",null,"TeamDiscussionComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"teamdiscussionconnection"},"TeamDiscussionConnection"),Object(c.b)("p",null,"The connection type for TeamDiscussion."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussionedge"},Object(c.b)("code",null,"[TeamDiscussionEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussion"},Object(c.b)("code",null,"[TeamDiscussion]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"teamdiscussionedge"},"TeamDiscussionEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussion"},Object(c.b)("code",null,"TeamDiscussion"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"teamedge"},"TeamEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"teammemberconnection"},"TeamMemberConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teammemberedge"},Object(c.b)("code",null,"[TeamMemberEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"teammemberedge"},"TeamMemberEdge"),Object(c.b)("p",null,"Represents a user who is a member of a team."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"memberAccessResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path to the organization's member access page."))),Object(c.b)("tr",null,Object(c.b)("td",null,"memberAccessUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL to the organization's member access page."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"role",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#teammemberrole"},Object(c.b)("code",null,"TeamMemberRole!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The role the member has on the team."))))),Object(c.b)("h2",{id:"teamremovememberauditentry"},"TeamRemoveMemberAuditEntry"),Object(c.b)("p",null,"Audit log entry for a team.remove_member event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#teamauditentrydata"},"TeamAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isLdapMapped",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the team was mapped to an LDAP Group."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"teamremoverepositoryauditentry"},"TeamRemoveRepositoryAuditEntry"),Object(c.b)("p",null,"Audit log entry for a team.remove_repository event."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#auditentry"},"AuditEntry")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#organizationauditentrydata"},"OrganizationAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryauditentrydata"},"RepositoryAuditEntryData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#teamauditentrydata"},"TeamAuditEntryData"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"action",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorIp",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLocation",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"actorUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isLdapMapped",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether the team was mapped to an LDAP Group."))),Object(c.b)("tr",null,Object(c.b)("td",null,"operationType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,"userLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"userUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"teamrepositoryconnection"},"TeamRepositoryConnection"),Object(c.b)("p",null,"The connection type for Repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamrepositoryedge"},Object(c.b)("code",null,"[TeamRepositoryEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"[Repository]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"teamrepositoryedge"},"TeamRepositoryEdge"),Object(c.b)("p",null,"Represents a team repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"permission",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorypermission"},Object(c.b)("code",null,"RepositoryPermission!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The permission level the team has on the repository"))))),Object(c.b)("h2",{id:"textmatch"},"TextMatch"),Object(c.b)("p",null,"A text match within a search result."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"fragment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The specific text fragment within the property matched on."))),Object(c.b)("tr",null,Object(c.b)("td",null,"highlights",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#textmatchhighlight"},Object(c.b)("code",null,"[TextMatchHighlight!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Highlights within the matched fragment."))),Object(c.b)("tr",null,Object(c.b)("td",null,"property",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The property matched on."))))),Object(c.b)("h2",{id:"textmatchhighlight"},"TextMatchHighlight"),Object(c.b)("p",null,"Represents a single highlight in a search result match."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"beginIndice",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The indice in the fragment where the matched text begins."))),Object(c.b)("tr",null,Object(c.b)("td",null,"endIndice",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The indice in the fragment where the matched text ends."))),Object(c.b)("tr",null,Object(c.b)("td",null,"text",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The text matched."))))),Object(c.b)("h2",{id:"topic"},"Topic"),Object(c.b)("p",null,"A topic aggregates entities that are related to a subject."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#starrable"},"Starrable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The topic's name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"relatedTopics",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"[Topic!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of related topics, including aliases of this topic, sorted with the most relevant first. Returns up to 10 Topics."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many topics to return."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"stargazerCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a count of how many stargazers there are on this object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"stargazers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#stargazerconnection"},Object(c.b)("code",null,"StargazerConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who have starred this starrable."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#starorder"},Object(c.b)("code",null,"StarOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerHasStarred",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a boolean indicating whether the viewing user has starred this starrable."))))),Object(c.b)("h2",{id:"transferissuepayload"},"TransferIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of TransferIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was transferred"))))),Object(c.b)("h2",{id:"transferredevent"},"TransferredEvent"),Object(c.b)("p",null,"Represents a 'transferred' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"fromRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository this came from"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the issue associated with the event."))))),Object(c.b)("h2",{id:"tree"},"Tree"),Object(c.b)("p",null,"Represents a Git tree."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},"GitObject")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"abbreviatedOid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An abbreviated version of the Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,"entries",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#treeentry"},Object(c.b)("code",null,"[TreeEntry!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of tree entries."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository the Git object belongs to"))))),Object(c.b)("h2",{id:"treeentry"},"TreeEntry"),Object(c.b)("p",null,"Represents a Git tree entry."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"extension",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The extension of the file"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isGenerated",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this tree entry is generated"))),Object(c.b)("tr",null,Object(c.b)("td",null,"mode",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Entry file mode."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Entry file name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"object",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitobject"},Object(c.b)("code",null,"GitObject"))),Object(c.b)("td",null,Object(c.b)("p",null,"Entry file object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"oid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Entry file Git object ID."))),Object(c.b)("tr",null,Object(c.b)("td",null,"path",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The full path of the file."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository the tree entry belongs to"))),Object(c.b)("tr",null,Object(c.b)("td",null,"submodule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#submodule"},Object(c.b)("code",null,"Submodule"))),Object(c.b)("td",null,Object(c.b)("p",null,"If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule"))),Object(c.b)("tr",null,Object(c.b)("td",null,"type",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Entry file type."))))),Object(c.b)("h2",{id:"unarchiverepositorypayload"},"UnarchiveRepositoryPayload"),Object(c.b)("p",null,"Autogenerated return type of UnarchiveRepository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository that was unarchived."))))),Object(c.b)("h2",{id:"unassignedevent"},"UnassignedEvent"),Object(c.b)("p",null,"Represents an 'unassigned' event on any assignable object."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assignable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#assignable"},Object(c.b)("code",null,"Assignable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the assignable associated with the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"assignee",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#assignee"},Object(c.b)("code",null,"Assignee"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the user or mannequin that was unassigned."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("blockquote",null,"Deprecated: Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC."),Object(c.b)("p",null,"Identifies the subject (user) who was unassigned."))))),Object(c.b)("h2",{id:"unfollowuserpayload"},"UnfollowUserPayload"),Object(c.b)("p",null,"Autogenerated return type of UnfollowUser"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user that was unfollowed."))))),Object(c.b)("h2",{id:"unknownsignature"},"UnknownSignature"),Object(c.b)("p",null,"Represents an unknown signature on a Commit or Tag."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#gitsignature"},"GitSignature"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Email used to sign this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isValid",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature is valid and verified by GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"payload",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Payload for GPG signing object. Raw ODB object without the signature header."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signature",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ASCII-armored signature header from object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"signer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"GitHub user corresponding to the email signing this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,"state",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#gitsignaturestate"},Object(c.b)("code",null,"GitSignatureState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of this signature. ",Object(c.b)("code",null,"VALID")," if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."))),Object(c.b)("tr",null,Object(c.b)("td",null,"wasSignedByGitHub",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature was made with GitHub's signing key."))))),Object(c.b)("h2",{id:"unlabeledevent"},"UnlabeledEvent"),Object(c.b)("p",null,"Represents an 'unlabeled' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"label",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"Label!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the label associated with the 'unlabeled' event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labelable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#labelable"},Object(c.b)("code",null,"Labelable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the ",Object(c.b)("code",null,"Labelable")," associated with the event."))))),Object(c.b)("h2",{id:"unlinkrepositoryfromprojectpayload"},"UnlinkRepositoryFromProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of UnlinkRepositoryFromProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The linked Project."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The linked Repository."))))),Object(c.b)("h2",{id:"unlockedevent"},"UnlockedEvent"),Object(c.b)("p",null,"Represents an 'unlocked' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"lockable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#lockable"},Object(c.b)("code",null,"Lockable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object that was unlocked."))))),Object(c.b)("h2",{id:"unlocklockablepayload"},"UnlockLockablePayload"),Object(c.b)("p",null,"Autogenerated return type of UnlockLockable"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"unlockedRecord",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#lockable"},Object(c.b)("code",null,"Lockable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item that was unlocked."))))),Object(c.b)("h2",{id:"unmarkedasduplicateevent"},"UnmarkedAsDuplicateEvent"),Object(c.b)("p",null,"Represents an 'unmarked_as_duplicate' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"canonical",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issueorpullrequest"},Object(c.b)("code",null,"IssueOrPullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The authoritative issue or pull request which has been duplicated by another."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"duplicate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issueorpullrequest"},Object(c.b)("code",null,"IssueOrPullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue or pull request which has been marked as a duplicate of another."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isCrossRepository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Canonical and duplicate belong to different repositories."))))),Object(c.b)("h2",{id:"unmarkfileasviewedpayload"},"UnmarkFileAsViewedPayload"),Object(c.b)("p",null,"Autogenerated return type of UnmarkFileAsViewed"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated pull request."))))),Object(c.b)("h2",{id:"unmarkissueasduplicatepayload"},"UnmarkIssueAsDuplicatePayload"),Object(c.b)("p",null,"Autogenerated return type of UnmarkIssueAsDuplicate"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"duplicate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#issueorpullrequest"},Object(c.b)("code",null,"IssueOrPullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue or pull request that was marked as a duplicate."))))),Object(c.b)("h2",{id:"unminimizecommentpayload"},"UnminimizeCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of UnminimizeComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"unminimizedComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#minimizable"},Object(c.b)("code",null,"Minimizable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The comment that was unminimized."))))),Object(c.b)("h2",{id:"unpinissuepayload"},"UnpinIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of UnpinIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue that was unpinned"))))),Object(c.b)("h2",{id:"unpinnedevent"},"UnpinnedEvent"),Object(c.b)("p",null,"Represents an 'unpinned' event on a given issue or pull request."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the issue associated with the event."))))),Object(c.b)("h2",{id:"unresolvereviewthreadpayload"},"UnresolveReviewThreadPayload"),Object(c.b)("p",null,"Autogenerated return type of UnresolveReviewThread"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"thread",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewthread"},Object(c.b)("code",null,"PullRequestReviewThread"))),Object(c.b)("td",null,Object(c.b)("p",null,"The thread to resolve."))))),Object(c.b)("h2",{id:"unsubscribedevent"},"UnsubscribedEvent"),Object(c.b)("p",null,"Represents an 'unsubscribed' event on a given ",Object(c.b)("inlineCode",{parentName:"p"},"Subscribable"),"."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"subscribable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},Object(c.b)("code",null,"Subscribable!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Object referenced by event."))))),Object(c.b)("h2",{id:"updatebranchprotectionrulepayload"},"UpdateBranchProtectionRulePayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateBranchProtectionRule"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"branchProtectionRule",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#branchprotectionrule"},Object(c.b)("code",null,"BranchProtectionRule"))),Object(c.b)("td",null,Object(c.b)("p",null,"The newly created BranchProtectionRule."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"updatecheckrunpayload"},"UpdateCheckRunPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateCheckRun"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"checkRun",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#checkrun"},Object(c.b)("code",null,"CheckRun"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated check run."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"updatechecksuitepreferencespayload"},"UpdateCheckSuitePreferencesPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateCheckSuitePreferences"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated repository."))))),Object(c.b)("h2",{id:"updateenterpriseadministratorrolepayload"},"UpdateEnterpriseAdministratorRolePayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseAdministratorRole"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of changing the administrator's role."))))),Object(c.b)("h2",{id:"updateenterpriseallowprivaterepositoryforkingsettingpayload"},"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated allow private repository forking setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the allow private repository forking setting."))))),Object(c.b)("h2",{id:"updateenterprisedefaultrepositorypermissionsettingpayload"},"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated default repository permission setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the default repository permission setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscanchangerepositoryvisibilitysettingpayload"},"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can change repository visibility setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can change repository visibility setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscancreaterepositoriessettingpayload"},"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can create repositories setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can create repositories setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscandeleteissuessettingpayload"},"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can delete issues setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can delete issues setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscandeleterepositoriessettingpayload"},"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can delete repositories setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can delete repositories setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscaninvitecollaboratorssettingpayload"},"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can invite collaborators setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can invite collaborators setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscanmakepurchasessettingpayload"},"UpdateEnterpriseMembersCanMakePurchasesSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can make purchases setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can make purchases setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscanupdateprotectedbranchessettingpayload"},"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can update protected branches setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can update protected branches setting."))))),Object(c.b)("h2",{id:"updateenterprisememberscanviewdependencyinsightssettingpayload"},"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated members can view dependency insights setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the members can view dependency insights setting."))))),Object(c.b)("h2",{id:"updateenterpriseorganizationprojectssettingpayload"},"UpdateEnterpriseOrganizationProjectsSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated organization projects setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the organization projects setting."))))),Object(c.b)("h2",{id:"updateenterpriseprofilepayload"},"UpdateEnterpriseProfilePayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseProfile"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated enterprise."))))),Object(c.b)("h2",{id:"updateenterpriserepositoryprojectssettingpayload"},"UpdateEnterpriseRepositoryProjectsSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated repository projects setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the repository projects setting."))))),Object(c.b)("h2",{id:"updateenterpriseteamdiscussionssettingpayload"},"UpdateEnterpriseTeamDiscussionsSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated team discussions setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the team discussions setting."))))),Object(c.b)("h2",{id:"updateenterprisetwofactorauthenticationrequiredsettingpayload"},"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"enterprise",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#enterprise"},Object(c.b)("code",null,"Enterprise"))),Object(c.b)("td",null,Object(c.b)("p",null,"The enterprise with the updated two factor authentication required setting."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A message confirming the result of updating the two factor authentication required setting."))))),Object(c.b)("h2",{id:"updateipallowlistenabledsettingpayload"},"UpdateIpAllowListEnabledSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateIpAllowListEnabledSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#ipallowlistowner"},Object(c.b)("code",null,"IpAllowListOwner"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP allow list owner on which the setting was updated."))))),Object(c.b)("h2",{id:"updateipallowlistentrypayload"},"UpdateIpAllowListEntryPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateIpAllowListEntry"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ipAllowListEntry",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ipallowlistentry"},Object(c.b)("code",null,"IpAllowListEntry"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP allow list entry that was updated."))))),Object(c.b)("h2",{id:"updateissuecommentpayload"},"UpdateIssueCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateIssueComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecomment"},Object(c.b)("code",null,"IssueComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated comment."))))),Object(c.b)("h2",{id:"updateissuepayload"},"UpdateIssuePayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateIssue"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issue",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issue"},Object(c.b)("code",null,"Issue"))),Object(c.b)("td",null,Object(c.b)("p",null,"The issue."))))),Object(c.b)("h2",{id:"updatelabelpayload"},"UpdateLabelPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateLabel"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"label",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#label"},Object(c.b)("code",null,"Label"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated label."))))),Object(c.b)("h2",{id:"updatenotificationrestrictionsettingpayload"},"UpdateNotificationRestrictionSettingPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateNotificationRestrictionSetting"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#verifiabledomainowner"},Object(c.b)("code",null,"VerifiableDomainOwner"))),Object(c.b)("td",null,Object(c.b)("p",null,"The owner on which the setting was updated."))))),Object(c.b)("h2",{id:"updateprojectcardpayload"},"UpdateProjectCardPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateProjectCard"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectCard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcard"},Object(c.b)("code",null,"ProjectCard"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated ProjectCard."))))),Object(c.b)("h2",{id:"updateprojectcolumnpayload"},"UpdateProjectColumnPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateProjectColumn"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectColumn",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectcolumn"},Object(c.b)("code",null,"ProjectColumn"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated project column."))))),Object(c.b)("h2",{id:"updateprojectpayload"},"UpdateProjectPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateProject"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated project."))))),Object(c.b)("h2",{id:"updatepullrequestpayload"},"UpdatePullRequestPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdatePullRequest"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequest",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequest"},Object(c.b)("code",null,"PullRequest"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated pull request."))))),Object(c.b)("h2",{id:"updatepullrequestreviewcommentpayload"},"UpdatePullRequestReviewCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdatePullRequestReviewComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReviewComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreviewcomment"},Object(c.b)("code",null,"PullRequestReviewComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated comment."))))),Object(c.b)("h2",{id:"updatepullrequestreviewpayload"},"UpdatePullRequestReviewPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdatePullRequestReview"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequestReview",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestreview"},Object(c.b)("code",null,"PullRequestReview"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated pull request review."))))),Object(c.b)("h2",{id:"updaterefpayload"},"UpdateRefPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateRef"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"ref",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#ref"},Object(c.b)("code",null,"Ref"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated Ref."))))),Object(c.b)("h2",{id:"updaterefspayload"},"UpdateRefsPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateRefs"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))))),Object(c.b)("h2",{id:"updaterepositorypayload"},"UpdateRepositoryPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateRepository"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated repository."))))),Object(c.b)("h2",{id:"updatesubscriptionpayload"},"UpdateSubscriptionPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateSubscription"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"subscribable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#subscribable"},Object(c.b)("code",null,"Subscribable"))),Object(c.b)("td",null,Object(c.b)("p",null,"The input subscribable entity."))))),Object(c.b)("h2",{id:"updateteamdiscussioncommentpayload"},"UpdateTeamDiscussionCommentPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateTeamDiscussionComment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamDiscussionComment",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussioncomment"},Object(c.b)("code",null,"TeamDiscussionComment"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated comment."))))),Object(c.b)("h2",{id:"updateteamdiscussionpayload"},"UpdateTeamDiscussionPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateTeamDiscussion"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"teamDiscussion",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#teamdiscussion"},Object(c.b)("code",null,"TeamDiscussion"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated discussion."))))),Object(c.b)("h2",{id:"updateteamreviewassignmentpayload"},"UpdateTeamReviewAssignmentPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateTeamReviewAssignment"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"team",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team that was modified"))))),Object(c.b)("h2",{id:"updatetopicspayload"},"UpdateTopicsPayload"),Object(c.b)("p",null,"Autogenerated return type of UpdateTopics"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"invalidTopicNames",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Names of the provided topics that are not valid."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The updated repository."))))),Object(c.b)("h2",{id:"user"},"User"),Object(c.b)("p",null,"A user is an individual's account on GitHub that owns repositories and can make new content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},"Actor")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#packageowner"},"PackageOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#profileowner"},"ProfileOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#projectowner"},"ProjectOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryowner"},"RepositoryOwner")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#sponsorable"},"Sponsorable")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#uniformresourcelocatable"},"UniformResourceLocatable"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"anyPinnableItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if this repository owner has any items that can be pinned to their profile."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"type",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"PinnableItemType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter to only a particular kind of pinnable item."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"avatarUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the user's public avatar."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"size",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"bio",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's public profile bio."))),Object(c.b)("tr",null,Object(c.b)("td",null,"bioHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's public profile bio as HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"commitComments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#commitcommentconnection"},Object(c.b)("code",null,"CommitCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of commit comments made by this user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"company",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's public profile company."))),Object(c.b)("tr",null,Object(c.b)("td",null,"companyHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's public profile company as HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contributionsCollection",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#contributionscollection"},Object(c.b)("code",null,"ContributionsCollection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The collection of contributions this user has made to different repositories."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"from",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Only contributions made at this time or later will be counted. If omitted, defaults to a year ago."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationID",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ID of the organization used to filter contributions."))),Object(c.b)("tr",null,Object(c.b)("td",null,"to",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Only contributions made before and up to and including this time will be counted. If omitted, defaults to the current time."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"email",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's publicly visible profile email."))),Object(c.b)("tr",null,Object(c.b)("td",null,"followers",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#followerconnection"},Object(c.b)("code",null,"FollowerConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users the given user is followed by."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"following",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#followingconnection"},Object(c.b)("code",null,"FollowingConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users the given user is following."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"gist",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gist"},Object(c.b)("code",null,"Gist"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find gist by repo name."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The gist name to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"gistComments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistcommentconnection"},Object(c.b)("code",null,"GistCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of gist comments made by this user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"gists",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#gistconnection"},Object(c.b)("code",null,"GistConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of the Gists the user has created."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#gistorder"},Object(c.b)("code",null,"GistOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for gists returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#gistprivacy"},Object(c.b)("code",null,"GistPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters Gists according to privacy."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasSponsorsListing",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if this user/organization has a GitHub Sponsors listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hovercard",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#hovercard"},Object(c.b)("code",null,"Hovercard!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The hovercard information for this user in a given context"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"primarySubjectId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The ID of the subject to get the hovercard in the context of"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"interactionAbility",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryinteractionability"},Object(c.b)("code",null,"RepositoryInteractionAbility"))),Object(c.b)("td",null,Object(c.b)("p",null,"The interaction ability settings for this user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isBountyHunter",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is a participant in the GitHub Security Bug Bounty."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isCampusExpert",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is a participant in the GitHub Campus Experts Program."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isDeveloperProgramMember",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is a GitHub Developer Program member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isEmployee",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is a GitHub employee."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isGitHubStar",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is a member of the GitHub Stars Program."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isHireable",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the user has marked themselves as for hire."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSiteAdmin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is a site administrator."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSponsoredBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the given account is sponsoring this user/organization."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"accountLogin",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The target account's login."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"isSponsoringViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the viewer is sponsored by this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is the viewing user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"issueComments",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issuecommentconnection"},Object(c.b)("code",null,"IssueCommentConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of issue comments made by this user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuecommentorder"},Object(c.b)("code",null,"IssueCommentOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issue comments returned from the connection."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"issues",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#issueconnection"},Object(c.b)("code",null,"IssueConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of issues associated with this user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"filterBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issuefilters"},Object(c.b)("code",null,"IssueFilters"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filtering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for issues returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#issuestate"},Object(c.b)("code",null,"[IssueState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the issues by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"itemShowcase",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#profileitemshowcase"},Object(c.b)("code",null,"ProfileItemShowcase!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"location",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's public profile location."))),Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username used to login."))),Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's public profile name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find an organization by its login that the user belongs to."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The login of the organization to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizationVerifiedDomainEmails",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Verified email addresses that match verified domains for a specified organization the user is a member of."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"login",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The login of the organization to match verified domains from."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"organizations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organizationconnection"},Object(c.b)("code",null,"OrganizationConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of organizations the user belongs to."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"packages",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageconnection"},Object(c.b)("code",null,"PackageConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of packages under the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"names",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages by their names."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#packageorder"},Object(c.b)("code",null,"PackageOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering of the returned packages."))),Object(c.b)("tr",null,Object(c.b)("td",null,"packageType",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#packagetype"},Object(c.b)("code",null,"PackageType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter registry package by type."))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoryId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages in a repository by ID."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnableItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories and gists this profile owner can pin to their profile."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"types",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"[PinnableItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter the types of pinnable items that are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnedItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories and gists this profile owner has pinned to their profile"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"types",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"[PinnableItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter the types of pinned items that are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pinnedItemsRemaining",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns how many more items this profile owner can pin to their profile."))),Object(c.b)("tr",null,Object(c.b)("td",null,"project",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find project by number."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"number",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project number to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projects",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectconnection"},Object(c.b)("code",null,"ProjectConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of projects under the owner."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#projectorder"},Object(c.b)("code",null,"ProjectOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for projects returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"search",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Query to search projects by, currently only searching by name."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectstate"},Object(c.b)("code",null,"[ProjectState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the projects by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectsResourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path listing user's projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,"projectsUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL listing user's projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,"publicKeys",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#publickeyconnection"},Object(c.b)("code",null,"PublicKeyConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of public keys associated with this user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"pullRequests",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pullrequestconnection"},Object(c.b)("code",null,"PullRequestConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of pull requests associated with this user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"baseRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The base ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"headRefName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The head ref name to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"labels",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of label names to filter the pull requests by."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#issueorder"},Object(c.b)("code",null,"IssueOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for pull requests returned from the connection."))),Object(c.b)("tr",null,Object(c.b)("td",null,"states",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pullrequeststate"},Object(c.b)("code",null,"[PullRequestState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the pull requests by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories that the user owns."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"affiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isFork",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they are forks of another repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLocked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they have been locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"ownerAffiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryprivacy"},Object(c.b)("code",null,"RepositoryPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to privacy"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repositoriesContributedTo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories that the user recently contributed to."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"contributionTypes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorycontributiontype"},Object(c.b)("code",null,"[RepositoryContributionType]"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, include only the specified types of contributions. The GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]"))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"includeUserRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If true, include user repositories"))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLocked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they have been locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryprivacy"},Object(c.b)("code",null,"RepositoryPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to privacy"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"repository",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find Repository."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"name",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Name of Repository to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"resourcePath",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this user"))),Object(c.b)("tr",null,Object(c.b)("td",null,"savedReplies",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#savedreplyconnection"},Object(c.b)("code",null,"SavedReplyConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"Replies this user has saved"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#savedreplyorder"},Object(c.b)("code",null,"SavedReplyOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"The field to order saved replies by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorsListing",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorslisting"},Object(c.b)("code",null,"SponsorsListing"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub Sponsors listing for this user or organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorshipForViewerAsSponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorship"},Object(c.b)("code",null,"Sponsorship"))),Object(c.b)("td",null,Object(c.b)("p",null,"The viewer's sponsorship of this entity."))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorshipsAsMaintainer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This object's sponsorships as the maintainer."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"includePrivate",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to include private sponsorships in the result set"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"sponsorshipsAsSponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This object's sponsorships as the sponsor."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"starredRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#starredrepositoryconnection"},Object(c.b)("code",null,"StarredRepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Repositories the user has starred."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#starorder"},Object(c.b)("code",null,"StarOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"ownedByViewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filters starred repositories to only return repositories owned by the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"status",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatus"},Object(c.b)("code",null,"UserStatus"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's description of what they're currently doing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"topRepositories",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"since",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"How far back in time to fetch contributed repositories"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"twitterUsername",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user's Twitter username."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"url",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this user"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanChangePinnedItems",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the viewer pin repositories and gists to the profile?"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanCreateProjects",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer create new projects on this owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanFollow",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer is able to follow the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerCanSponsor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer is able to sponsor this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerIsFollowing",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not this user is followed by the viewer."))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewerIsSponsoring",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the viewer is sponsoring this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,"watching",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories the given user is watching."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"affiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Affiliation options for repositories returned from the connection. If none specified, the results will include repositories for which the current viewer is an owner or collaborator, or member."))),Object(c.b)("tr",null,Object(c.b)("td",null,"after",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"before",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,"first",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isLocked",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they have been locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,"last",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,"orderBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,"ownerAffiliations",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,"privacy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryprivacy"},Object(c.b)("code",null,"RepositoryPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to privacy"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,"websiteUrl",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the user's public website/blog."))))),Object(c.b)("h2",{id:"userblockedevent"},"UserBlockedEvent"),Object(c.b)("p",null,"Represents a 'user_blocked' event on a given user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"actor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the actor who performed the event."))),Object(c.b)("tr",null,Object(c.b)("td",null,"blockDuration",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#userblockduration"},Object(c.b)("code",null,"UserBlockDuration!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Number of days that the user was blocked for."))),Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"subject",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who was blocked."))))),Object(c.b)("h2",{id:"userconnection"},"UserConnection"),Object(c.b)("p",null,"The connection type for User."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#useredge"},Object(c.b)("code",null,"[UserEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"[User]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"usercontentedit"},"UserContentEdit"),Object(c.b)("p",null,"An edit on user content"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was deleted."))),Object(c.b)("tr",null,Object(c.b)("td",null,"deletedBy",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who deleted this content"))),Object(c.b)("tr",null,Object(c.b)("td",null,"diff",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A summary of the changes for this edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,"editedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this content was edited"))),Object(c.b)("tr",null,Object(c.b)("td",null,"editor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited this content"))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))))),Object(c.b)("h2",{id:"usercontenteditconnection"},"UserContentEditConnection"),Object(c.b)("p",null,"A list of edits to content."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditedge"},Object(c.b)("code",null,"[UserContentEditEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontentedit"},Object(c.b)("code",null,"[UserContentEdit]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"usercontenteditedge"},"UserContentEditEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontentedit"},Object(c.b)("code",null,"UserContentEdit"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"useredge"},"UserEdge"),Object(c.b)("p",null,"Represents a user."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"useremailmetadata"},"UserEmailMetadata"),Object(c.b)("p",null,"Email attributes from External Identity"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"primary",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Boolean to identify primary emails"))),Object(c.b)("tr",null,Object(c.b)("td",null,"type",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Type of email"))),Object(c.b)("tr",null,Object(c.b)("td",null,"value",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Email id"))))),Object(c.b)("h2",{id:"userstatus"},"UserStatus"),Object(c.b)("p",null,"The user's description of what they're currently doing."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"emoji",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"An emoji summarizing the user's status."))),Object(c.b)("tr",null,Object(c.b)("td",null,"emojiHTML",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML"))),Object(c.b)("td",null,Object(c.b)("p",null,"The status emoji as HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,"expiresAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"If set, the status will not be shown after this date."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ID of the object."))),Object(c.b)("tr",null,Object(c.b)("td",null,"indicatesLimitedAvailability",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this status indicates the user is not fully available on GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A brief message describing what the user is doing."))),Object(c.b)("tr",null,Object(c.b)("td",null,"organization",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The organization whose members can see this status. If null, this status is publicly visible."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"user",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who has this status."))))),Object(c.b)("h2",{id:"userstatusconnection"},"UserStatusConnection"),Object(c.b)("p",null,"The connection type for UserStatus."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatusedge"},Object(c.b)("code",null,"[UserStatusEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatus"},Object(c.b)("code",null,"[UserStatus]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"userstatusedge"},"UserStatusEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatus"},Object(c.b)("code",null,"UserStatus"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"verifiabledomain"},"VerifiableDomain"),Object(c.b)("p",null,"A domain that can be verified for an organization or an enterprise."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#node"},"Node"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"createdAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,"databaseId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,"dnsHostName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The DNS host name that should be used for verification."))),Object(c.b)("tr",null,Object(c.b)("td",null,"domain",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The unicode encoded domain."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasFoundHostName",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether a TXT record for verification with the expected host name was found."))),Object(c.b)("tr",null,Object(c.b)("td",null,"hasFoundVerificationToken",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether a TXT record for verification with the expected verification token was found."))),Object(c.b)("tr",null,Object(c.b)("td",null,"id",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,"isRequiredForPolicyEnforcement",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this domain is required to exist for an organization or enterprise policy to be enforced."))),Object(c.b)("tr",null,Object(c.b)("td",null,"isVerified",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the domain is verified."))),Object(c.b)("tr",null,Object(c.b)("td",null,"owner",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#verifiabledomainowner"},Object(c.b)("code",null,"VerifiableDomainOwner!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The owner of the domain."))),Object(c.b)("tr",null,Object(c.b)("td",null,"punycodeEncodedDomain",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The punycode encoded domain."))),Object(c.b)("tr",null,Object(c.b)("td",null,"tokenExpirationTime",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time that the current verification token will expire."))),Object(c.b)("tr",null,Object(c.b)("td",null,"updatedAt",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,"verificationToken",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The current verification token for the domain."))))),Object(c.b)("h2",{id:"verifiabledomainconnection"},"VerifiableDomainConnection"),Object(c.b)("p",null,"The connection type for VerifiableDomain."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"edges",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomainedge"},Object(c.b)("code",null,"[VerifiableDomainEdge]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edges."))),Object(c.b)("tr",null,Object(c.b)("td",null,"nodes",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomain"},Object(c.b)("code",null,"[VerifiableDomain]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of nodes."))),Object(c.b)("tr",null,Object(c.b)("td",null,"pageInfo",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pageinfo"},Object(c.b)("code",null,"PageInfo!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Information to aid in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"totalCount",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the total count of items in the connection."))))),Object(c.b)("h2",{id:"verifiabledomainedge"},"VerifiableDomainEdge"),Object(c.b)("p",null,"An edge in a connection."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"cursor",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A cursor for use in pagination."))),Object(c.b)("tr",null,Object(c.b)("td",null,"node",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomain"},Object(c.b)("code",null,"VerifiableDomain"))),Object(c.b)("td",null,Object(c.b)("p",null,"The item at the end of the edge."))))),Object(c.b)("h2",{id:"verifyverifiabledomainpayload"},"VerifyVerifiableDomainPayload"),Object(c.b)("p",null,"Autogenerated return type of VerifyVerifiableDomain"),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"clientMutationId",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"A unique identifier for the client performing the mutation."))),Object(c.b)("tr",null,Object(c.b)("td",null,"domain",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#verifiabledomain"},Object(c.b)("code",null,"VerifiableDomain"))),Object(c.b)("td",null,Object(c.b)("p",null,"The verifiable domain that was verified."))))),Object(c.b)("h2",{id:"viewerhovercardcontext"},"ViewerHovercardContext"),Object(c.b)("p",null,"A hovercard context with a message describing how the viewer is related."),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Implements")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/docusaurus-plugin-content-graphql/github-example/interfaces#hovercardcontext"},"HovercardContext"))),Object(c.b)("p",{style:{marginBottom:"0.4em"}},Object(c.b)("strong",null,"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"message",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string describing this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"octicon",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An octicon to accompany this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,"viewer",Object(c.b)("br",null),Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the user who is related to this context."))))))}i.isMDXComponent=!0},87:function(e,t,l){"use strict";l.d(t,"a",(function(){return s})),l.d(t,"b",(function(){return d}));var b=l(0),n=l.n(b);function c(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function u(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,b)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?u(Object(l),!0).forEach((function(t){c(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):u(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function a(e,t){if(null==e)return{};var l,b,n=function(e,t){if(null==e)return{};var l,b,n={},c=Object.keys(e);for(b=0;b<c.length;b++)l=c[b],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(b=0;b<c.length;b++)l=c[b],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var o=n.a.createContext({}),i=function(e){var t=n.a.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},s=function(e){var t=i(e.components);return n.a.createElement(o.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},O=n.a.forwardRef((function(e,t){var l=e.components,b=e.mdxType,c=e.originalType,u=e.parentName,o=a(e,["components","mdxType","originalType","parentName"]),s=i(l),O=b,d=s["".concat(u,".").concat(O)]||s[O]||j[O]||c;return l?n.a.createElement(d,r(r({ref:t},o),{},{components:l})):n.a.createElement(d,r({ref:t},o))}));function d(e,t){var l=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var c=l.length,u=new Array(c);u[0]=O;var r={};for(var a in t)hasOwnProperty.call(t,a)&&(r[a]=t[a]);r.originalType=e,r.mdxType="string"==typeof e?e:b,u[1]=r;for(var o=2;o<c;o++)u[o]=l[o];return n.a.createElement.apply(null,u)}return n.a.createElement.apply(null,l)}O.displayName="MDXCreateElement"}}]);