(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[827],{5318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2227:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var a=t(9603),r=t(120),o=(t(7378),t(5318)),i={title:"Usage"},s={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"\x3c!--",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/docusaurus-graphql-plugin/usage",editUrl:"https://github.com/zhouzi/docusaurus-graphql-plugin/edit/main/packages/docs/docs/usage.md",version:"current",frontMatter:{title:"Usage"},sidebar:"docs",previous:{title:"Motivation",permalink:"/docusaurus-graphql-plugin/"},next:{title:"Queries",permalink:"/docusaurus-graphql-plugin/github-example/queries"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Options",id:"options",children:[]}],u={toc:l};function p(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"installation"},"Installation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"In an existing Docusaurus project, install the plugin:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn add docusaurus-graphql-plugin\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Add the plugin to your ",(0,o.kt)("inlineCode",{parentName:"li"},"docusaurus.config.js")," file:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  plugins: [\n    [\n      "docusaurus-graphql-plugin",\n      {\n        // can be a path, a glob or an URL\n        schema: "schema.graphql",\n      },\n    ],\n  ],\n};\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the command ",(0,o.kt)("inlineCode",{parentName:"p"},"npx docusaurus docs:generate:graphql"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The command will have generated files that you can now add to your ",(0,o.kt)("inlineCode",{parentName:"p"},"sidebars.js"),":"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'modules.exports = {\n  docs: {\n    API: [\n      "api/queries",\n      "api/mutations",\n      "api/objects",\n      "api/interfaces",\n      "api/enums",\n      "api/unions",\n      "api/inputObjects",\n      "api/scalars",\n    ],\n  },\n};\n')),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"You can now run ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn start")," to serve your documentation")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("h4",{id:"id"},(0,o.kt)("inlineCode",{parentName:"h4"},"id")),(0,o.kt)("p",null,"This option is common to docusaurus plugins and can be used to differentiate multiple instance of the plugin.\nFor example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  plugins: [\n    [\n      "docusaurus-graphql-plugin",\n      {\n        id: "first-api",\n        schema: "first-api.graphql",\n        // it\'s important that routeBasePath has a different\n        // value for each instance of the plugin\n        routeBasePath: "/docs/first-api",\n      },\n    ],\n    [\n      "docusaurus-graphql-plugin",\n      {\n        id: "second-api",\n        schema: "second-api.graphql",\n        // it\'s important that routeBasePath has a different\n        // value for each instance of the plugin\n        routeBasePath: "/docs/second-api",\n      },\n    ],\n  ],\n};\n')),(0,o.kt)("p",null,"With the configuration above you would end up with two different commands:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docs:generate:graphql:first-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docs:generate:graphql:second-api"))),(0,o.kt)("h4",{id:"schema"},(0,o.kt)("inlineCode",{parentName:"h4"},"schema")),(0,o.kt)("p",null,"Can be a path, a glob or an URL used to load your GraphQL schema."),(0,o.kt)("h4",{id:"routebasepath"},(0,o.kt)("inlineCode",{parentName:"h4"},"routeBasePath")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Defaults:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/api/")),(0,o.kt)("p",null,"This option is used for two things:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"To generate reference links, such as the return type of a query being linked to its corresponding object."),(0,o.kt)("li",{parentName:"ol"},"To generate the path where the files will be written to disk.")),(0,o.kt)("p",null,"So if you want the API docs to be served over ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/api-reference/")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/api/"),", you can change this option to ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/api-reference/"),". Note that you can also have more levels to the path, e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/reference/api/"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"You must change this option if you are using the docs plugin's ",(0,o.kt)("inlineCode",{parentName:"strong"},"routeBasePath"),"."),"\nFor example, if you opted for a docs only documentation, your configuration could look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  presets: [\n    [\n      "@docusaurus/preset-classic",\n      {\n        docs: {\n          // with the change below, docs are server over `/` instead of `/docs/`\n          routeBasePath: "/",\n        },\n      },\n    ],\n  ],\n  plugins: [\n    [\n      "docusaurus-graphql-plugin",\n      {\n        schema: "schema.graphql",\n\n        // routeBasePath defaults to `/docs/api/` which will not work if docs are server over `/`\n        routeBasePath: "/api/",\n      },\n    ],\n  ],\n};\n')),(0,o.kt)("h4",{id:"sidebar"},(0,o.kt)("inlineCode",{parentName:"h4"},"sidebar")),(0,o.kt)("p",null,"This option can be used to specify sidebar metadata when using auto-generated sidebar."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  plugins: [\n    [\n      "docusaurus-graphql-plugin",\n      {\n        schema: "schema.graphql",\n        sidebar: {\n          label: "My Awesome Schema",\n          position: 1,\n        },\n      },\n    ],\n  ],\n};\n')),(0,o.kt)("p",null,"The configuration above will create a ",(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/sidebar#autogenerated-sidebar-metadatas"},(0,o.kt)("inlineCode",{parentName:"a"},"_category_.json"))," file in the ",(0,o.kt)("inlineCode",{parentName:"p"},"routeBasePath")," looking like this :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "label": "My Awesome Schema",\n  "position": 1\n}\n')))}p.isMDXComponent=!0}}]);