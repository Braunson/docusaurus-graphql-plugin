(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{83:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return u})),l.d(t,"metadata",(function(){return r})),l.d(t,"toc",(function(){return a})),l.d(t,"default",(function(){return j}));var b=l(3),n=l(7),c=(l(0),l(87)),u={id:"interfaces",title:"Interfaces",slug:"interfaces"},r={unversionedId:"github-example/interfaces",id:"github-example/interfaces",isDocsHomePage:!1,title:"Interfaces",description:"Actor",source:"@site/docs/github-example/interfaces.md",slug:"/github-example/interfaces",permalink:"/docusaurus-plugin-content-graphql/github-example/interfaces",editUrl:"https://github.com/zhouzi/docusaurus-plugin-content-graphql/edit/main/packages/docs/docs/github-example/interfaces.md",version:"current",sidebar:"docs",previous:{title:"Objects",permalink:"/docusaurus-plugin-content-graphql/github-example/objects"},next:{title:"Enums",permalink:"/docusaurus-plugin-content-graphql/github-example/enums"}},a=[{value:"Actor",id:"actor",children:[]},{value:"Assignable",id:"assignable",children:[]},{value:"AuditEntry",id:"auditentry",children:[]},{value:"Closable",id:"closable",children:[]},{value:"Comment",id:"comment",children:[]},{value:"Contribution",id:"contribution",children:[]},{value:"Deletable",id:"deletable",children:[]},{value:"EnterpriseAuditEntryData",id:"enterpriseauditentrydata",children:[]},{value:"GitObject",id:"gitobject",children:[]},{value:"GitSignature",id:"gitsignature",children:[]},{value:"HovercardContext",id:"hovercardcontext",children:[]},{value:"Labelable",id:"labelable",children:[]},{value:"Lockable",id:"lockable",children:[]},{value:"MemberStatusable",id:"memberstatusable",children:[]},{value:"Minimizable",id:"minimizable",children:[]},{value:"Node",id:"node",children:[]},{value:"OauthApplicationAuditEntryData",id:"oauthapplicationauditentrydata",children:[]},{value:"OrganizationAuditEntryData",id:"organizationauditentrydata",children:[]},{value:"PackageOwner",id:"packageowner",children:[]},{value:"ProfileOwner",id:"profileowner",children:[]},{value:"ProjectOwner",id:"projectowner",children:[]},{value:"Reactable",id:"reactable",children:[]},{value:"RepositoryAuditEntryData",id:"repositoryauditentrydata",children:[]},{value:"RepositoryInfo",id:"repositoryinfo",children:[]},{value:"RepositoryNode",id:"repositorynode",children:[]},{value:"RepositoryOwner",id:"repositoryowner",children:[]},{value:"RequirableByPullRequest",id:"requirablebypullrequest",children:[]},{value:"Sponsorable",id:"sponsorable",children:[]},{value:"Starrable",id:"starrable",children:[]},{value:"Subscribable",id:"subscribable",children:[]},{value:"TeamAuditEntryData",id:"teamauditentrydata",children:[]},{value:"TopicAuditEntryData",id:"topicauditentrydata",children:[]},{value:"UniformResourceLocatable",id:"uniformresourcelocatable",children:[]},{value:"Updatable",id:"updatable",children:[]},{value:"UpdatableComment",id:"updatablecomment",children:[]}],o={toc:a};function j(e){var t=e.components,l=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(b.a)({},o,l,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"actor"},"Actor"),Object(c.b)("p",null,"Represents an object which can take actions on GitHub. Typically a User or Bot."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"avatarUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the actor's public avatar."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"size")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"login")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"resourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"url")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this actor."))))),Object(c.b)("h2",{id:"assignable"},"Assignable"),Object(c.b)("p",null,"An object that can have users assigned to it."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"assignees")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userconnection"},Object(c.b)("code",null,"UserConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Users assigned to this object."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))))),Object(c.b)("h2",{id:"auditentry"},"AuditEntry"),Object(c.b)("p",null,"An entry in the audit log."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"action")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The action name"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"actor")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/unions#auditentryactor"},Object(c.b)("code",null,"AuditEntryActor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"actorIp")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The IP address of the actor"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"actorLocation")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#actorlocation"},Object(c.b)("code",null,"ActorLocation"))),Object(c.b)("td",null,Object(c.b)("p",null,"A readable representation of the actor's location"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"actorLogin")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username of the user who initiated the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"actorResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"actorUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the actor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"createdAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#precisedatetime"},Object(c.b)("code",null,"PreciseDateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The time the action was initiated"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"operationType")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#operationtype"},Object(c.b)("code",null,"OperationType"))),Object(c.b)("td",null,Object(c.b)("p",null,"The corresponding operation type for the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"user")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user affected by the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"userLogin")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"For actions involving two users, the actor is the initiator and the user is the affected user."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"userResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the user."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"userUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the user."))))),Object(c.b)("h2",{id:"closable"},"Closable"),Object(c.b)("p",null,"An object that can be closed"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"closed")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the object is closed (definition of closed may depend on type)"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"closedAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was closed."))))),Object(c.b)("h2",{id:"comment"},"Comment"),Object(c.b)("p",null,"Represents a comment."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"author")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who authored the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"authorAssociation")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentauthorassociation"},Object(c.b)("code",null,"CommentAuthorAssociation!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Author's association with the subject of the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"body")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body as Markdown."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"bodyHTML")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"bodyText")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The body rendered to text."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"createdAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"createdViaEmail")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was created via an email reply."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"editor")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#actor"},Object(c.b)("code",null,"Actor"))),Object(c.b)("td",null,Object(c.b)("p",null,"The actor who edited the comment."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"includesCreatedEdit")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if this comment was edited and includes an edit with the creation data"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"lastEditedAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"The moment the editor made the last edit"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"publishedAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the comment was published at."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"updatedAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"userContentEdits")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#usercontenteditconnection"},Object(c.b)("code",null,"UserContentEditConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of edits to this content."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerDidAuthor")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Did the viewer author this comment."))))),Object(c.b)("h2",{id:"contribution"},"Contribution"),Object(c.b)("p",null,"Represents a contribution a user made on GitHub, such as opening an issue."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isRestricted")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this contribution is associated with a record you do not have access to. For example, your own 'first issue' contribution may have been made on a repository you can no longer access."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"occurredAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"When this contribution was made."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"resourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"url")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this contribution."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"user")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The user who made this contribution."))))),Object(c.b)("h2",{id:"deletable"},"Deletable"),Object(c.b)("p",null,"Entities that can be deleted."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanDelete")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can delete this object."))))),Object(c.b)("h2",{id:"enterpriseauditentrydata"},"EnterpriseAuditEntryData"),Object(c.b)("p",null,"Metadata for an audit entry containing enterprise account information."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"enterpriseResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"enterpriseSlug")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The slug of the enterprise."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"enterpriseUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this enterprise."))))),Object(c.b)("h2",{id:"gitobject"},"GitObject"),Object(c.b)("p",null,"Represents a Git object."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"abbreviatedOid")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An abbreviated version of the Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"commitResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"commitUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this Git object"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"oid")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#gitobjectid"},Object(c.b)("code",null,"GitObjectID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Git object ID"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repository")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Repository the Git object belongs to"))))),Object(c.b)("h2",{id:"gitsignature"},"GitSignature"),Object(c.b)("p",null,"Information about a signature (GPG or S/MIME) on a Commit or Tag."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"email")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Email used to sign this object."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isValid")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature is valid and verified by GitHub."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"payload")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Payload for GPG signing object. Raw ODB object without the signature header."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"signature")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ASCII-armored signature header from object."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"signer")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#user"},Object(c.b)("code",null,"User"))),Object(c.b)("td",null,Object(c.b)("p",null,"GitHub user corresponding to the email signing this commit."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"state")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#gitsignaturestate"},Object(c.b)("code",null,"GitSignatureState!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The state of this signature. ",Object(c.b)("code",null,"VALID")," if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"wasSignedByGitHub")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the signature was made with GitHub's signing key."))))),Object(c.b)("h2",{id:"hovercardcontext"},"HovercardContext"),Object(c.b)("p",null,"An individual line of a hovercard"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"message")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A string describing this context"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"octicon")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"An octicon to accompany this context"))))),Object(c.b)("h2",{id:"labelable"},"Labelable"),Object(c.b)("p",null,"An object that can have labels assigned to it."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"labels")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#labelconnection"},Object(c.b)("code",null,"LabelConnection"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of labels associated with the object."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#labelorder"},Object(c.b)("code",null,"LabelOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for labels returned from the connection."))))))))),Object(c.b)("h2",{id:"lockable"},"Lockable"),Object(c.b)("p",null,"An object that can be locked."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"activeLockReason")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#lockreason"},Object(c.b)("code",null,"LockReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reason that the conversation was locked."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"locked")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,Object(c.b)("code",null,"true")," if the object is locked"))))),Object(c.b)("h2",{id:"memberstatusable"},"MemberStatusable"),Object(c.b)("p",null,"Entities that have members who can set status messages."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"memberStatuses")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#userstatusconnection"},Object(c.b)("code",null,"UserStatusConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Get the status messages members of this entity have set that are either public or visible only to the organization."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#userstatusorder"},Object(c.b)("code",null,"UserStatusOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for user statuses returned from the connection."))))))))),Object(c.b)("h2",{id:"minimizable"},"Minimizable"),Object(c.b)("p",null,"Entities that can be minimized."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isMinimized")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns whether or not a comment has been minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"minimizedReason")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns why the comment was minimized."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanMinimize")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can minimize this object."))))),Object(c.b)("h2",{id:"node"},"Node"),Object(c.b)("p",null,"An object with an ID."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null,Object(c.b)("p",null,"ID of the object."))))),Object(c.b)("h2",{id:"oauthapplicationauditentrydata"},"OauthApplicationAuditEntryData"),Object(c.b)("p",null,"Metadata for an audit entry with action oauth_application.*"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"oauthApplicationName")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the OAuth Application."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"oauthApplicationResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the OAuth Application"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"oauthApplicationUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the OAuth Application"))))),Object(c.b)("h2",{id:"organizationauditentrydata"},"OrganizationAuditEntryData"),Object(c.b)("p",null,"Metadata for an audit entry with action org.*"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"organization")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#organization"},Object(c.b)("code",null,"Organization"))),Object(c.b)("td",null,Object(c.b)("p",null,"The Organization associated with the Audit Entry."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"organizationName")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the Organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"organizationResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the organization"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"organizationUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the organization"))))),Object(c.b)("h2",{id:"packageowner"},"PackageOwner"),Object(c.b)("p",null,"Represents an owner of a package."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"packages")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#packageconnection"},Object(c.b)("code",null,"PackageConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of packages under the owner."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"names")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"[String]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages by their names."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#packageorder"},Object(c.b)("code",null,"PackageOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering of the returned packages."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"packageType")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#packagetype"},Object(c.b)("code",null,"PackageType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter registry package by type."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repositoryId")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find packages in a repository by ID."))))))))),Object(c.b)("h2",{id:"profileowner"},"ProfileOwner"),Object(c.b)("p",null,"Represents any entity on GitHub that has a profile page."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"anyPinnableItems")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Determine if this repository owner has any items that can be pinned to their profile."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"type")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"PinnableItemType"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter to only a particular kind of pinnable item."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"email")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The public profile email."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"itemShowcase")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#profileitemshowcase"},Object(c.b)("code",null,"ProfileItemShowcase!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"location")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The public profile location."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"login")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username used to login."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"name")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The public profile name."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"pinnableItems")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories and gists this profile owner can pin to their profile."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"types")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"[PinnableItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter the types of pinnable items that are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"pinnedItems")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#pinnableitemconnection"},Object(c.b)("code",null,"PinnableItemConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories and gists this profile owner has pinned to their profile"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"types")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#pinnableitemtype"},Object(c.b)("code",null,"[PinnableItemType!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Filter the types of pinned items that are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"pinnedItemsRemaining")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns how many more items this profile owner can pin to their profile."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanChangePinnedItems")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the viewer pin repositories and gists to the profile?"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"websiteUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The public profile website URL."))))),Object(c.b)("h2",{id:"projectowner"},"ProjectOwner"),Object(c.b)("p",null,"Represents an owner of a Project."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"project")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#project"},Object(c.b)("code",null,"Project"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find project by number."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"number")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The project number to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"projects")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#projectconnection"},Object(c.b)("code",null,"ProjectConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of projects under the owner."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#projectorder"},Object(c.b)("code",null,"ProjectOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for projects returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"search")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Query to search projects by, currently only searching by name."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"states")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#projectstate"},Object(c.b)("code",null,"[ProjectState!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of states to filter the projects by."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"projectsResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path listing owners projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"projectsUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL listing owners projects"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanCreateProjects")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can the current viewer create new projects on this owner."))))),Object(c.b)("h2",{id:"reactable"},"Reactable"),Object(c.b)("p",null,"Represents a subject that can be reacted on."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"databaseId")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the primary key from the database."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"reactionGroups")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactiongroup"},Object(c.b)("code",null,"[ReactionGroup!]"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of reactions grouped by content left on the subject."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"reactions")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#reactionconnection"},Object(c.b)("code",null,"ReactionConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of Reactions left on the Issue."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"content")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#reactioncontent"},Object(c.b)("code",null,"ReactionContent"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows filtering Reactions by emoji."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#reactionorder"},Object(c.b)("code",null,"ReactionOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Allows specifying the order in which reactions are returned."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanReact")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Can user react to this subject"))))),Object(c.b)("h2",{id:"repositoryauditentrydata"},"RepositoryAuditEntryData"),Object(c.b)("p",null,"Metadata for an audit entry with action repo.*"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repository")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repositoryName")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repositoryResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repositoryUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the repository"))))),Object(c.b)("h2",{id:"repositoryinfo"},"RepositoryInfo"),Object(c.b)("p",null,"A subset of repository info."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"createdAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was created."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"description")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"descriptionHTML")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The description of the repository rendered to HTML."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"forkCount")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns how many forks there are of this repository in the whole network."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"hasIssuesEnabled")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has issues feature enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"hasProjectsEnabled")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has the Projects feature enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"hasWikiEnabled")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has wiki feature enabled."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"homepageUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isArchived")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository is unmaintained."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isFork")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is a fork."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isInOrganization")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if a repository is either owned by an organization, or is a private fork of an organization repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isLocked")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Indicates if the repository has been locked or not."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isMirror")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is a mirror."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isPrivate")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is private or internal."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isTemplate")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the repository is a template that can be used to generate new repositories."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"licenseInfo")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#license"},Object(c.b)("code",null,"License"))),Object(c.b)("td",null,Object(c.b)("p",null,"The license associated with the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"lockReason")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositorylockreason"},Object(c.b)("code",null,"RepositoryLockReason"))),Object(c.b)("td",null,Object(c.b)("p",null,"The reason the repository has been locked."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"mirrorUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's original mirror URL."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"name")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"nameWithOwner")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository's name with owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"openGraphImageUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The image used to represent this repository in Open Graph data."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"owner")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/interfaces#repositoryowner"},Object(c.b)("code",null,"RepositoryOwner!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The User owner of the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"pushedAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies when the repository was last pushed to."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"resourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"shortDescriptionHTML")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#html"},Object(c.b)("code",null,"HTML!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A description of the repository, rendered to HTML without any links in it."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"limit")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"How many characters to return."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"updatedAt")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#datetime"},Object(c.b)("code",null,"DateTime!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies the date and time when the object was last updated."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"url")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"usesCustomOpenGraphImage")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar."))))),Object(c.b)("h2",{id:"repositorynode"},"RepositoryNode"),Object(c.b)("p",null,"Represents a object that belongs to a repository."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repository")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The repository associated with this node."))))),Object(c.b)("h2",{id:"repositoryowner"},"RepositoryOwner"),Object(c.b)("p",null,"Represents an owner of a Repository."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"avatarUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A URL pointing to the owner's public avatar."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"size")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The size of the resulting square image."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"login")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The username used to login."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repositories")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repositoryconnection"},Object(c.b)("code",null,"RepositoryConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of repositories that the user owns."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"affiliations")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of viewer's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isFork")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they are forks of another repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isLocked")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to whether they have been locked"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#repositoryorder"},Object(c.b)("code",null,"RepositoryOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for repositories returned from the connection"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"ownerAffiliations")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryaffiliation"},Object(c.b)("code",null,"[RepositoryAffiliation]"))),Object(c.b)("td",null,Object(c.b)("p",null,"Array of owner's affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"privacy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#repositoryprivacy"},Object(c.b)("code",null,"RepositoryPrivacy"))),Object(c.b)("td",null,Object(c.b)("p",null,"If non-null, filters repositories according to privacy"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"repository")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#repository"},Object(c.b)("code",null,"Repository"))),Object(c.b)("td",null,Object(c.b)("p",null,"Find Repository."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"name")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Name of Repository to find."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"resourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the owner."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"url")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for the owner."))))),Object(c.b)("h2",{id:"requirablebypullrequest"},"RequirableByPullRequest"),Object(c.b)("p",null,"Represents a type that can be required by a pull request for merging."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isRequired")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether this is required to pass before merging for a specific pull request."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"pullRequestId")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID"))),Object(c.b)("td",null,Object(c.b)("p",null,"The id of the pull request this is required for"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"pullRequestNumber")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"The number of the pull request this is required for"))))))))),Object(c.b)("h2",{id:"sponsorable"},"Sponsorable"),Object(c.b)("p",null,"Entities that can be sponsored through GitHub Sponsors"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"hasSponsorsListing")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if this user/organization has a GitHub Sponsors listing."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isSponsoredBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the given account is sponsoring this user/organization."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"accountLogin")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The target account's login."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"isSponsoringViewer")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the viewer is sponsored by this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"sponsorsListing")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorslisting"},Object(c.b)("code",null,"SponsorsListing"))),Object(c.b)("td",null,Object(c.b)("p",null,"The GitHub Sponsors listing for this user or organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"sponsorshipForViewerAsSponsor")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorship"},Object(c.b)("code",null,"Sponsorship"))),Object(c.b)("td",null,Object(c.b)("p",null,"The viewer's sponsorship of this entity."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"sponsorshipsAsMaintainer")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This object's sponsorships as the maintainer."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"includePrivate")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not to include private sponsorships in the result set"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"sponsorshipsAsSponsor")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#sponsorshipconnection"},Object(c.b)("code",null,"SponsorshipConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"This object's sponsorships as the sponsor."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#sponsorshiporder"},Object(c.b)("code",null,"SponsorshipOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer."))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanSponsor")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Whether or not the viewer is able to sponsor this user/organization."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerIsSponsoring")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"True if the viewer is sponsoring this user/organization."))))),Object(c.b)("h2",{id:"starrable"},"Starrable"),Object(c.b)("p",null,"Things that can be starred."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"stargazerCount")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a count of how many stargazers there are on this object"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"stargazers")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#stargazerconnection"},Object(c.b)("code",null,"StargazerConnection!"))),Object(c.b)("td",null,Object(c.b)("p",null,"A list of users who have starred this starrable."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"after")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come after the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"before")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the elements in the list that come before the specified cursor."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"first")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the first ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"last")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#int"},Object(c.b)("code",null,"Int"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns the last ",Object(c.b)("em",null,"n")," elements from the list."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"orderBy")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/inputObjects#starorder"},Object(c.b)("code",null,"StarOrder"))),Object(c.b)("td",null,Object(c.b)("p",null,"Order for connection"))))))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerHasStarred")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Returns a boolean indicating whether the viewing user has starred this starrable."))))),Object(c.b)("h2",{id:"subscribable"},"Subscribable"),Object(c.b)("p",null,"Entities that can be subscribed to for web and email notifications."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"id")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#id"},Object(c.b)("code",null,"ID!"))),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanSubscribe")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the viewer is able to change their subscription status for the repository."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerSubscription")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#subscriptionstate"},Object(c.b)("code",null,"SubscriptionState"))),Object(c.b)("td",null,Object(c.b)("p",null,"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."))))),Object(c.b)("h2",{id:"teamauditentrydata"},"TeamAuditEntryData"),Object(c.b)("p",null,"Metadata for an audit entry with action team.*"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"team")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#team"},Object(c.b)("code",null,"Team"))),Object(c.b)("td",null,Object(c.b)("p",null,"The team associated with the action"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"teamName")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the team"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"teamResourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP path for this team"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"teamUrl")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTTP URL for this team"))))),Object(c.b)("h2",{id:"topicauditentrydata"},"TopicAuditEntryData"),Object(c.b)("p",null,"Metadata for an audit entry with a topic."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"topic")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/objects#topic"},Object(c.b)("code",null,"Topic"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the topic added to the repository"))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"topicName")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#string"},Object(c.b)("code",null,"String"))),Object(c.b)("td",null,Object(c.b)("p",null,"The name of the topic added to the repository"))))),Object(c.b)("h2",{id:"uniformresourcelocatable"},"UniformResourceLocatable"),Object(c.b)("p",null,"Represents a type that can be retrieved by a URL."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"resourcePath")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The HTML path to this resource."))),Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"url")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#uri"},Object(c.b)("code",null,"URI!"))),Object(c.b)("td",null,Object(c.b)("p",null,"The URL to this resource."))))),Object(c.b)("h2",{id:"updatable"},"Updatable"),Object(c.b)("p",null,"Entities that can be updated."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCanUpdate")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/scalars#boolean"},Object(c.b)("code",null,"Boolean!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Check if the current viewer can update this object."))))),Object(c.b)("h2",{id:"updatablecomment"},"UpdatableComment"),Object(c.b)("p",null,"Comments that can be updated."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Fields")),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,Object(c.b)("code",null,"viewerCannotUpdateReasons")),Object(c.b)("td",null,Object(c.b)("a",{href:"/docusaurus-plugin-content-graphql/github-example/enums#commentcannotupdatereason"},Object(c.b)("code",null,"[CommentCannotUpdateReason!]!"))),Object(c.b)("td",null,Object(c.b)("p",null,"Reasons why the current viewer can not update this comment."))))))}j.isMDXComponent=!0},87:function(e,t,l){"use strict";l.d(t,"a",(function(){return O})),l.d(t,"b",(function(){return d}));var b=l(0),n=l.n(b);function c(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function u(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,b)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?u(Object(l),!0).forEach((function(t){c(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):u(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function a(e,t){if(null==e)return{};var l,b,n=function(e,t){if(null==e)return{};var l,b,n={},c=Object.keys(e);for(b=0;b<c.length;b++)l=c[b],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(b=0;b<c.length;b++)l=c[b],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var o=n.a.createContext({}),j=function(e){var t=n.a.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},O=function(e){var t=j(e.components);return n.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},i=n.a.forwardRef((function(e,t){var l=e.components,b=e.mdxType,c=e.originalType,u=e.parentName,o=a(e,["components","mdxType","originalType","parentName"]),O=j(l),i=b,d=O["".concat(u,".").concat(i)]||O[i]||s[i]||c;return l?n.a.createElement(d,r(r({ref:t},o),{},{components:l})):n.a.createElement(d,r({ref:t},o))}));function d(e,t){var l=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var c=l.length,u=new Array(c);u[0]=i;var r={};for(var a in t)hasOwnProperty.call(t,a)&&(r[a]=t[a]);r.originalType=e,r.mdxType="string"==typeof e?e:b,u[1]=r;for(var o=2;o<c;o++)u[o]=l[o];return n.a.createElement.apply(null,u)}return n.a.createElement.apply(null,l)}i.displayName="MDXCreateElement"}}]);